<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>لنتعلم برمجة الأنظمة المدمجة</title>
    <description>كورس تعليمي يهدف الى اكسابك المعرفة اللازمة والمهارات التقنية المتعلقة ببرمجة وتطوير الأنظمة المدمجة وفهم خصائصها ومكوناتها</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 11 Sep 2018 22:57:42 +0300</pubDate>
    <lastBuildDate>Tue, 11 Sep 2018 22:57:42 +0300</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>14. المُقاطعات  Interrupts</title>
        <description>&lt;p&gt;توجد طريقتان لتتمكن المعالجات الدقيقة microprocessors من خدمة الأجهزة المختلفة التي تتصل بها، وهي إما:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;المُقاطعات interrupts أو&lt;/li&gt;
  &lt;li&gt;الإستعلام المتكرر  polling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;في حالة الإستعلام، يقوم المعالج بمراقبة حالة الجهاز بإستمرار وينتظر حتى إستيفاء الحالة أو تحقق الشرط المطلوب ثم يقوم بتنفيذ الأوامر المطلوبة، وبعد إكتمال عملية تنفيذ المهمة، يقوم المعالج بتنفيذ المهمة التي تليها.&lt;/p&gt;

&lt;p&gt;فعلى سبيل المثال، في درس SysTick Timer، راقبنا بإستمرار قيمة الحقل COUNT لحينما تصبح 0 وذلك لضمان انقضاء الوقت المحدد:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// wait until COUNT is flagged
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00010000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لكن، وكما هو واضح، المعالج مشغول بمراقبة هذه القيمة ولن يتمكن من الإنتقال الى تنفيذ الأوامر الموجودة بعد هذا السطر طالما لم يتحقق. ونحن بهذه الطريقة لم نستغل المعالج بشكل فعّال حيث نهدر الكثير من الوقت والطاقة لمراقبة قيّم وأجهزة ليست بحاجتنا الى أن نلتفت اليها.&lt;/p&gt;

&lt;p&gt;ولكن، بإستخدام المُقاطعات فإنه عندما يحتاج أي جهاز إلى خدمة ما، فإنه يقوم بإعلام المعالج بذلك عن طريق إرسال إشارة المقاطعة Interrupt Request - IRQ. وعندما يتلقي المعالج هذه الإشارة، فإنه “يقطع” ما يقوم به في تلك اللحظة ويلتفت الى خدمة الجهاز المرسل للإشارة. وبذلك يتمكن المعالج من خدمة الجهاز دون مراقبة حالته بشكل مستمر. ولذلك ينصح بإستخدام المُقاطعات.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; شرح الخطوات&lt;/h2&gt;

&lt;p&gt;فيما يلي شرح مختصر لما يحدث عند إرسال مُقاطعة:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;عندما يحتاج منفذ port أو جهاز طرفي peripheral الى خدمة من المعالج فإنه يرسل إشارة بذلك. هذه الإشارة تسمى طلب المُقاطعة Interrupt Request - IRQ.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;قد يكون المعالج في وضع السكون أو مشغولاً بأداء مهام أخرى، ولكن حينما يصله طلب المقاطعة فإنه يقوم بتعليق المهمة التي ينفذها ويحفظ مكانها.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;يبحث المعالج في جدول المقاطعات Interrupt Vector Table - IVT للعثور على الدالة function المرتبطة بالمقاطعة والتي يجب عليه تنفيذها عند حدوث هذه المقاطعة.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;يتم بعد بعد ذلك تنفيذ الدالة المرتبطة بالمُقاطعة Interrupt Service Routine - ISR. وبمجرد اكتمال تنفيذها، يعود المعالج لتنفيذ المهام التى كان يعمل عليها قبل إستقبال طلب المقاطعة.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;وفيما يلي سنلقي نظرة على الأجزاء المختلفة المتعلقة بالمُقاطعات في متحكمات ARM Cortex-M:&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; Nested Vectored Interrupt Controller - NVIC&lt;/h2&gt;

&lt;p&gt;تتم عملية إدارة المقاطعات بواسطة وحدة Nested Vector Interrupt Controller - NVIC، والتي توفر عدة خصائص من ضمنها تمكين/الغاء خاصية إستقبال المقاطعات وتحديد أولويات المقاطعات وتنفيذها حسب هذه الأولوية حيث أن جميع المقاطعات interrupts والاستثناءات exceptions لها مستويات أولوية معينة. وبشكل عام فإن الاستثناء مماثل للمقاطعة غير أن مستوى الأولوية priority فيه أعلى. أيضاً، يستقبل الـ NVIC المقاطعات أثناء تنفيذ مقاطعة أخرى ويقوم بالمقارنة بينها، فإذا كان مستوى الأولوية للمقاطعة المستقبلة أعلى، سيتم تعليق تنفيذ المقاطعة الحالية وتقديم المقاطعة المستقبلة أولاً.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; دالة خدمة المقاطعة Interrupt service routine - ISR&lt;/h2&gt;

&lt;p&gt;يجب أن يكون هنالك لكل مقاطعة دالة مرتبطه بها يتم تنفيذها عند حدوث المقاطعة. ويشار إليها عادةً باسم دالة خدمة المقاطعة Interrupt service routine - ISR.&lt;/p&gt;

&lt;p&gt;عند إنشاء مشروع جديد في Keil µVision IDE سينشئ البرنامج تلقائيًا ملف بدء تشغيل startup file بإسم startup_TM4C123.s. وستجد فيه لكل مقاطعة دالة خدمة مقاطعة ISR وهمية لا تقوم بأي شيء placeholder في Vectors_.&lt;/p&gt;

&lt;p&gt;ولكتابة هذه الدالة، سنحتاج أولاً إلى معرفة اسمها في جدول Vectors_ وإستخدام ذلك الاسم في برنامجنا وبعد ذلك سيقوم الـ linker بإعادة كتابة العنوان الجديد للدالة عند عمل تجميع compile للبرنامج.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; جدول المقاطعات Interrupt Vector Table - IVT&lt;/h2&gt;

&lt;p&gt;في صفحة 107 من دليل البيانات بإمكاننا أن نرى جدول المقاطعات والذي يحتوي على عناوين دوال خدمة المقاطعات ISRs:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/vector_table.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/vector_table.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;ويمكن العثور على هذا جدول وبشكل مفصل في ملف startup_TM4C123.s.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/vectors.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/vectors.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;حيث يمكن استخدام العناصر الموجودة في العمود الثاني كأسماء ISR في البرنامج بينما نستخدم الـ IRQ لإعداد المقاطعة في البرنامج.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تفعيل أو إيقاف المقاطعات بشكل عام&lt;/h2&gt;

&lt;p&gt;بالإمكان تفعيل أو إيقاف المقاطعات بشكل عام في هيكلة ARM Cortex M بإستخدام الأوامر التالية في لغة الـ Assembly:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CPSIE I لتفعيل المقاطعات&lt;/li&gt;
  &lt;li&gt;CPSID I لإيقاف المقاطعات&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ويوفر لنا الكومبايلر في Keil µVision الدوال التالية التي تستدعي الأوامر السابقة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__enable_irq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// CPSIE I;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__disable_irq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// CPSID I;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ولكن ينقصها أمر لوقف التنفيذ لحينما تحدث مقاطعة. ولذلك سنقوم بإعادة كتابة الدوال السابقة وإضافة دالة التوقف اليها بلغة الـ assembly وإستدعائها من الـ C.&lt;/p&gt;

&lt;p&gt;فتكون الدالة المتعلقة بإيقاف المقاطعات:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSID  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;والدالة التي تفعلها:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSIE  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;والدالة التي توقف التنفيذ لحين حدوث مقاطعة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WFI&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; مثال على الإستثناءات&lt;/h2&gt;

&lt;p&gt;كما ذكرنا سابقاً فإن الاستثناءات مماثلة للمقاطعات ولكن مستوى الأولوية فيها أعلى. وكمثال، سنأخذ الاستثناء الناجم عن مؤقت النظام SysTick.&lt;/p&gt;

&lt;p&gt;ذكرنا في درس سابق، بأن معالج Cortex-M4 يحتوي على مؤقت من 24-bit، والذي يبدأ العد من قيمة إعادة التحميل RELOAD إلى الصفر. وعند الوصول إلى الصفر يقوم مؤقت النظام SysTick بإعادة تحميل القيمة المخزنة في RELOAD وتستأنف العد التنازلي.&lt;/p&gt;

&lt;p&gt;ما يهمنا هنا هو أنه عند الوصول إلى الصفر، سوف يرسل المؤقت المقاطعة والتي سنقوم في برنامجنا بالتعامل معها.&lt;/p&gt;

&lt;p&gt;في ملف startup_TM4C123.s يتضح لنا أن الـ ISR للـ SysTick هي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SysTick_Handler&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نضيفها الى ملف الـ c الذي أنشأناه كما يلي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SysTick_Handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وسيتم تنفيذ ما بداخل هذه الدالة كلما أرسل الـ SysTick إشارة الى المعالج، أي كلما وصل العداد الى 0. وما نود تنفيذه في هذه الدالة هو تشغيل الإضاءة الحمراء على البورد إن كانت طافئة وإطفاءها إن كانت مضيئة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SysTick_Handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// toggle red led
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أوامر تهيئة المؤقت SysTick مشابهه لما هو موجود في الدرس التاسع ولكن في ذلك الدرس الغينا عمل المقاطعات في سجل STCTRL بينما نفعله هنا:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_ST_CTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// enable SysTick interrupt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ما يهمنا هنا هو إضافة الأسطر التالية بعد التهيئة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c1&quot;&gt;// Global enable interrupt
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
  
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حيث أن السطر الأول يفعّل المُقاطعات ثم ندخل في عملية تكرار مستمرة ولكن الأمر interrupts_wait_for يوقف المعالج الى حين حدوث مقاطعة.&lt;/p&gt;

&lt;p&gt;وبذلك يكون كامل الكود لدينا:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;stdint.h&amp;gt;
#include &quot;C:\ti\TivaWare_C_Series-2.1.4.178\inc\tm4c123gh6pm.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;systick_config&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SysTick_Handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// toggle red led
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;systick_config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
  &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// enable clock to GPIOF at clock gating control register
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// enable the GPIO pins for the LED (PF3,2,1) as output
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// disable alt funct on PF3-1
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  
  &lt;span class=&quot;c1&quot;&gt;// enable the GPIO pins for digital function
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;systick_config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// disable SysTick during setup
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_ST_CTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;         
  
  &lt;span class=&quot;c1&quot;&gt;// reload with number of clocks per second
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_ST_RELOAD_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

  &lt;span class=&quot;c1&quot;&gt;// configure SysTick
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_ST_CTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.1) enable SysTick interrupt
&lt;/span&gt;                    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.2) use system clock
&lt;/span&gt;                    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 4.3) enable SysTick   
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSID  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSIE  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WFI&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; مثال عل المقاطعات&lt;/h2&gt;

&lt;p&gt;في هذا الدرس سوف نعيد كتابة المثال في الدرس الثامن ليستخدم المقاطعات interrupts بدلاً من الإستعلام المتكرر polling.&lt;/p&gt;

&lt;p&gt;وللتذكير فإن البرنامج كان يتعامل مع الأزرار والإضاءات في البورد حيث تختلف الإضاءة حسب الزر المضغوط.&lt;/p&gt;

&lt;p&gt;وفيما يلي جدول يختصر هذه الحالات:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;حالة الأزرار&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;حالة الإضاءة&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW1 و SW2 معاً&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الحمراء تعمل&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW1 فقط&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الزرقاء تعمل&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW2 فقط&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الخضراء تعمل&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;حيث أن:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;الزر الأيسر SW1 متصل بالمنفذ F والطرف 4 =&amp;gt;  PF4&lt;/li&gt;
  &lt;li&gt;الزر الأيمن SW2 متصل بالمنفذ F والطرف 0 =&amp;gt;  PF0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;بالإضافة الى أننا سنتعامل مع الإضاءات الملونة التي تعاملنا معها سابقاً:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;الإضاءة الحمراء  Red LED  متصلة بالمنفذ F والطرف 1 =&amp;gt;  PF1&lt;/li&gt;
  &lt;li&gt;الإضاءة الزرقاء  Blue LED  متصلة بالمنفذ F والطرف 2 =&amp;gt;  PF2&lt;/li&gt;
  &lt;li&gt;الإضاءة الخضراء  Green LED  متصلة بالمنفذ F والطرف 3 =&amp;gt;  PF3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ونظرًا لأن التهيئة المتعلقة بالـ GPIO قد تمت مناقشتها مسبقاً فإننا هنا سننظر الى تهيئة المقاطعات فقط.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تهيئة المقاطعات&lt;/h2&gt;

&lt;p&gt;أول ثلاث خطوات في عملية تهيئة المقاطعات تتعلق بتحديد نقطة بدء trigger المقاطعة، حيث أنه لدينا 5 خيارات بالإمكان للمقاطعة أن تعمل عندها:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;المستوى المنخفض  low level&lt;/li&gt;
  &lt;li&gt;المستوى العالي high level&lt;/li&gt;
  &lt;li&gt;الحافة الصاعدة rising edge من المستوى المنخفض إلى المرتفع&lt;/li&gt;
  &lt;li&gt;الحافة النازلة falling edge من المستوى المرتفع إلى المنخفض&lt;/li&gt;
  &lt;li&gt;كلا الحافتين الصاعدة والنازلة&lt;/li&gt;
&lt;/ul&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/signal_edges.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/signal_edges.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وفيما يلي خطوات التهيئة التي يجب علينا إتباعها:&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;1. تحديد ما إذا كنا سنستخدم المستويات (عالي أم منخفض) أو الحواف (صاعد أم نازل) للإشارة على بدء المقاطعة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;للقيام بذلك نستخدم السجل GPIOIS ص 664.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOIS.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOIS.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نحن هنا سنستخدم الحافة النازلة للإشارة للمقاطعة ولذلك نضع 0 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;2. تحديد ما إذا كنا نريد للإشارة أن تحدث لكلا المستويين (عالي ومنخفض) أو الحافتين (الصاعدة والنازلة)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويكون ذلك عن طريق السجل GPIOIBE ص 665.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOIBE.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOIBE.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وبما أنا قلنا أننا نريد الحافة النازلة فقط، فإننا نضع 0 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IBE_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;3. تحديد ما اذا كنا نريد المستوى العالي و الحافة الصاعدة أم المستوى المنخفض و الحافة النازلة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويتم ذلك عن طريق السجل GPIOIEV ص 666.&lt;/p&gt;

&lt;p&gt;في الحالة الأولى (مستوى عالي أو حافة صاعدة) نضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1). أما في الحالة الثانية (مستوى منخفض أو حافة نازلة) فإننا نضع 0.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IEV_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;4.  مسح أي مقاطعة سابقة متعلقة بالأطراف&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;وذلك عن طريق السجل GPIOICR ص 670.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOICR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOICR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;للتأكد من مسح أي مقاطعة سابقة فإننا نضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;5. تعيين أولوية للمقاطعة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويتم ذلك عن طريق سجلات PRIn ص 152.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/PRIn.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/PRIn.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;تكون سجلات الأولية priority على الشكل التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_PRIn_R&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حيث يمثل n رقم المجموعة التى تتحكم بأولويات المقاطعات في هذه المجموعة. ولمعرفة الرقم الذي يجب علينا إستبدال n به فإن أسهل طريقة لتحديد السجل الذي سنستخدمه هو عن طريق فتح دليل البيانات وإستعراض الـ Bookmarks، وتحت التبويب 3. Cortex-M4 Peripherals نختار 3.4. NVIC Register Descriptions:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/bookmarks.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/bookmarks.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;إبحث عن سجلات الأولوية Priority التي تبدأ من سجل 29 وتنتهي بالسجل 63.&lt;/p&gt;

&lt;p&gt;إفتح الملف startup_TM4C123.s وإبحث عن GPIOF_Handler. هذه الدالة هي الـ ISR الخاصة بالمقاطعات المتعلقة بالمنفذ F. ما يهمنا هنا هو رقم الـ IRQ لهذه الدالة وهو 30. وكل ما علينا فعله هنا هو البحث عن السجل الذي يشمل المقاطعة رقم 30 وهو السجل رقم 36 حيث يشمل المقاطعات من 28 الى 31.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/PRI7.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/PRI7.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;أي أنه يجب علينا إستخدام المجموعة رقم 7 وبذلك فإننا نستخدم السجل التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_PRI7_R&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وهذه المجموعة السابعة بإمكانها التحكم بأولوية المقاطعات 28 و 29 و 30 و 31 بحيث يكون لكل مقاطعة 3 بتات نحدد فيها أولويتها. أي من 000 الى 111 (ثنائي) أو من 0 الى 7 (عشري):&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/28293031.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/28293031.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وبذلك يكون الحقل المتحكم في أولوية المقاطعة رقم 30 هو INTC (بت 23:21).&lt;/p&gt;

&lt;p&gt;وسنقوم بإعطاء هذه المقاطعة الأولوية 3:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_PRI7_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;6. تمكين المقاطعات للمنفذ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;مرة أخرى، عن طريق فتح دليل البيانات وإستعراض الـ Bookmarks، وتحت التبويب 3. Cortex-M4 Peripherals نختار 3.4. NVIC Register Descriptions. وكل ما علينا فعله هنا هو البحث في سجلات ENn عن السجل الذي يشمل المقاطعة رقم 30 وهو السجل رقم 4 أي EN0 حيث يشمل المقاطعات من 0 الى 31.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/EN0.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/EN0.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وتفاصيل السجل موجودة في ص 142 من دليل البيانات:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/EN0_R.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/EN0_R.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نضع الآن القيمة 1 في الخانة 30 لأنها تقابل IRQ رقم 30.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_EN0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;7. تمكين المقاطعات للأطراف&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويكون ذلك عن طريق السجل GPIOIM ص 667.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOIM.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOIM.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;لتمكين المقاطعات للأطراف نضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IM_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;8. تمكين المقاطعات بشكل عام&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;سنستدعي هنا الدالة التي قمنا بكتابتها interrupts_enable :&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;9. كتابة دالة خدمة المقاطعة ISR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;وجدنا في الملف startup_TM4C123.s إن الـ ISR المسؤول عن المقاطعات الخاصة بالمنفذ F هي GPIOF_Handler. ولذلك ننسخ إسمها ونضعه في ملفنا كالتالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GPIOF_Handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أول ما نفعله هنا هو إزالة إشارة المقاطعة قبل العودة الى التعامل مع المقاطعة. لأننا لو لم نقم بذلك فإن المقاطعة ستظهر كما لو أنها كانت لا تزال معلقة وسيتم تنفيذ دالة خدمة المقاطعة ISR مرة تلو الأخرى وبشكل مستمر الى أن يعلق البرنامج.&lt;/p&gt;

&lt;p&gt;نقوم بإزالة إشارة المقاطعة عن طريق وضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;بعد ذلك نتعامل مع المقاطعة كما نريد، وفي حالتنا هذه نختبر أي الأزرار تم الضغط عليه لإضائة النور المناسب.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 &amp;amp; SW2 pressed
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 pressed only
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW2 pressed only
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;10. الإنتظار في حلقة التكرار الى أن تحدث مقاطعة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;في main، سنستخدم الدالة interrupts_wait_for لوضع المعالج في حالة الإنتظار standby لحين حدوث مقاطعة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبذلك يكون كامل الكود:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;stdint.h&amp;gt;
#include &quot;C:\ti\TivaWare_C_Series-2.1.4.178\inc\tm4c123gh6pm.h&quot;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define SW2        (1&amp;lt;&amp;lt;0)
#define LED_RED    (1&amp;lt;&amp;lt;1)		
#define LED_BLUE   (1&amp;lt;&amp;lt;2)		
#define LED_GREEN  (1&amp;lt;&amp;lt;3)		
#define SW1        (1&amp;lt;&amp;lt;4)		
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portf_config_interrupts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;portf_config_interrupts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 1) Enable clock for Port F
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    
  &lt;span class=&quot;c1&quot;&gt;// 2.1) Unlock PF0
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_LOCK_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4C4F434B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 2.2) Allow changes to PF0
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_CR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 3) Disable analog functions
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_AMSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
  &lt;span class=&quot;c1&quot;&gt;// 4) Set pin direction
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Output
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// Input
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 5) disable alternate functions
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 6) Set pull up resistor
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_PUR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  
  &lt;span class=&quot;c1&quot;&gt;// 7) Enable pins
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portf_config_interrupts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1) Make PF4/PF0 edge sensitive
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 2) Single edges
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IBE_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 3) Falling-edge
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IEV_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 4) Clear any prior interrupt
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 5) PortF is given priority 3
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_PRI7_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    
  &lt;span class=&quot;c1&quot;&gt;// 6) Enable interrupt for PortF (IRQ 30) in NVIC
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_EN0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
  &lt;span class=&quot;c1&quot;&gt;// 7) Enable interrupts for PF4, PF0
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IM_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 8) Global interrupts enable
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GPIOF_Handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
  &lt;span class=&quot;c1&quot;&gt;// clear interrupt
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       
  
  &lt;span class=&quot;c1&quot;&gt;// a read to force clearing of interrupt flag
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;readback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// toggle LEDs   
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 &amp;amp; SW2 pressed
&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 pressed only
&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW2 pressed only
&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupts_disable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSID  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSIE  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WFI&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 11 Sep 2018 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2018/09/11/ADC.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/11/ADC.html</guid>
        
        
      </item>
    
      <item>
        <title>14. المُقاطعات  Interrupts</title>
        <description>&lt;p&gt;توجد طريقتان لتتمكن المعالجات الدقيقة microprocessors من خدمة الأجهزة المختلفة التي تتصل بها، وهي إما:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;المُقاطعات interrupts أو&lt;/li&gt;
  &lt;li&gt;الإستعلام المتكرر  polling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;في حالة الإستعلام، يقوم المعالج بمراقبة حالة الجهاز بإستمرار وينتظر حتى إستيفاء الحالة أو تحقق الشرط المطلوب ثم يقوم بتنفيذ الأوامر المطلوبة، وبعد إكتمال عملية تنفيذ المهمة، يقوم المعالج بتنفيذ المهمة التي تليها.&lt;/p&gt;

&lt;p&gt;فعلى سبيل المثال، في درس SysTick Timer، راقبنا بإستمرار قيمة الحقل COUNT لحينما تصبح 0 وذلك لضمان انقضاء الوقت المحدد:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// wait until COUNT is flagged
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00010000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لكن، وكما هو واضح، المعالج مشغول بمراقبة هذه القيمة ولن يتمكن من الإنتقال الى تنفيذ الأوامر الموجودة بعد هذا السطر طالما لم يتحقق. ونحن بهذه الطريقة لم نستغل المعالج بشكل فعّال حيث نهدر الكثير من الوقت والطاقة لمراقبة قيّم وأجهزة ليست بحاجتنا الى أن نلتفت اليها.&lt;/p&gt;

&lt;p&gt;ولكن، بإستخدام المُقاطعات فإنه عندما يحتاج أي جهاز إلى خدمة ما، فإنه يقوم بإعلام المعالج بذلك عن طريق إرسال إشارة المقاطعة Interrupt Request - IRQ. وعندما يتلقي المعالج هذه الإشارة، فإنه “يقطع” ما يقوم به في تلك اللحظة ويلتفت الى خدمة الجهاز المرسل للإشارة. وبذلك يتمكن المعالج من خدمة الجهاز دون مراقبة حالته بشكل مستمر. ولذلك ينصح بإستخدام المُقاطعات.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; شرح الخطوات&lt;/h2&gt;

&lt;p&gt;فيما يلي شرح مختصر لما يحدث عند إرسال مُقاطعة:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;عندما يحتاج منفذ port أو جهاز طرفي peripheral الى خدمة من المعالج فإنه يرسل إشارة بذلك. هذه الإشارة تسمى طلب المُقاطعة Interrupt Request - IRQ.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;قد يكون المعالج في وضع السكون أو مشغولاً بأداء مهام أخرى، ولكن حينما يصله طلب المقاطعة فإنه يقوم بتعليق المهمة التي ينفذها ويحفظ مكانها.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;يبحث المعالج في جدول المقاطعات Interrupt Vector Table - IVT للعثور على الدالة function المرتبطة بالمقاطعة والتي يجب عليه تنفيذها عند حدوث هذه المقاطعة.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;يتم بعد بعد ذلك تنفيذ الدالة المرتبطة بالمُقاطعة Interrupt Service Routine - ISR. وبمجرد اكتمال تنفيذها، يعود المعالج لتنفيذ المهام التى كان يعمل عليها قبل إستقبال طلب المقاطعة.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;وفيما يلي سنلقي نظرة على الأجزاء المختلفة المتعلقة بالمُقاطعات في متحكمات ARM Cortex-M:&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; Nested Vectored Interrupt Controller - NVIC&lt;/h2&gt;

&lt;p&gt;تتم عملية إدارة المقاطعات بواسطة وحدة Nested Vector Interrupt Controller - NVIC، والتي توفر عدة خصائص من ضمنها تمكين/الغاء خاصية إستقبال المقاطعات وتحديد أولويات المقاطعات وتنفيذها حسب هذه الأولوية حيث أن جميع المقاطعات interrupts والاستثناءات exceptions لها مستويات أولوية معينة. وبشكل عام فإن الاستثناء مماثل للمقاطعة غير أن مستوى الأولوية priority فيه أعلى. أيضاً، يستقبل الـ NVIC المقاطعات أثناء تنفيذ مقاطعة أخرى ويقوم بالمقارنة بينها، فإذا كان مستوى الأولوية للمقاطعة المستقبلة أعلى، سيتم تعليق تنفيذ المقاطعة الحالية وتقديم المقاطعة المستقبلة أولاً.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; دالة خدمة المقاطعة Interrupt service routine - ISR&lt;/h2&gt;

&lt;p&gt;يجب أن يكون هنالك لكل مقاطعة دالة مرتبطه بها يتم تنفيذها عند حدوث المقاطعة. ويشار إليها عادةً باسم دالة خدمة المقاطعة Interrupt service routine - ISR.&lt;/p&gt;

&lt;p&gt;عند إنشاء مشروع جديد في Keil µVision IDE سينشئ البرنامج تلقائيًا ملف بدء تشغيل startup file بإسم startup_TM4C123.s. وستجد فيه لكل مقاطعة دالة خدمة مقاطعة ISR وهمية لا تقوم بأي شيء placeholder في Vectors_.&lt;/p&gt;

&lt;p&gt;ولكتابة هذه الدالة، سنحتاج أولاً إلى معرفة اسمها في جدول Vectors_ وإستخدام ذلك الاسم في برنامجنا وبعد ذلك سيقوم الـ linker بإعادة كتابة العنوان الجديد للدالة عند عمل تجميع compile للبرنامج.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; جدول المقاطعات Interrupt Vector Table - IVT&lt;/h2&gt;

&lt;p&gt;في صفحة 107 من دليل البيانات بإمكاننا أن نرى جدول المقاطعات والذي يحتوي على عناوين دوال خدمة المقاطعات ISRs:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/vector_table.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/vector_table.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;ويمكن العثور على هذا جدول وبشكل مفصل في ملف startup_TM4C123.s.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/vectors.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/vectors.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;حيث يمكن استخدام العناصر الموجودة في العمود الثاني كأسماء ISR في البرنامج بينما نستخدم الـ IRQ لإعداد المقاطعة في البرنامج.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تفعيل أو إيقاف المقاطعات بشكل عام&lt;/h2&gt;

&lt;p&gt;بالإمكان تفعيل أو إيقاف المقاطعات بشكل عام في هيكلة ARM Cortex M بإستخدام الأوامر التالية في لغة الـ Assembly:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CPSIE I لتفعيل المقاطعات&lt;/li&gt;
  &lt;li&gt;CPSID I لإيقاف المقاطعات&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ويوفر لنا الكومبايلر في Keil µVision الدوال التالية التي تستدعي الأوامر السابقة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__enable_irq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// CPSIE I;
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__disable_irq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// CPSID I;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ولكن ينقصها أمر لوقف التنفيذ لحينما تحدث مقاطعة. ولذلك سنقوم بإعادة كتابة الدوال السابقة وإضافة دالة التوقف اليها بلغة الـ assembly وإستدعائها من الـ C.&lt;/p&gt;

&lt;p&gt;فتكون الدالة المتعلقة بإيقاف المقاطعات:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSID  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;والدالة التي تفعلها:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSIE  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;والدالة التي توقف التنفيذ لحين حدوث مقاطعة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WFI&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; مثال على الإستثناءات&lt;/h2&gt;

&lt;p&gt;كما ذكرنا سابقاً فإن الاستثناءات مماثلة للمقاطعات ولكن مستوى الأولوية فيها أعلى. وكمثال، سنأخذ الاستثناء الناجم عن مؤقت النظام SysTick.&lt;/p&gt;

&lt;p&gt;ذكرنا في درس سابق، بأن معالج Cortex-M4 يحتوي على مؤقت من 24-bit، والذي يبدأ العد من قيمة إعادة التحميل RELOAD إلى الصفر. وعند الوصول إلى الصفر يقوم مؤقت النظام SysTick بإعادة تحميل القيمة المخزنة في RELOAD وتستأنف العد التنازلي.&lt;/p&gt;

&lt;p&gt;ما يهمنا هنا هو أنه عند الوصول إلى الصفر، سوف يرسل المؤقت المقاطعة والتي سنقوم في برنامجنا بالتعامل معها.&lt;/p&gt;

&lt;p&gt;في ملف startup_TM4C123.s يتضح لنا أن الـ ISR للـ SysTick هي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SysTick_Handler&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نضيفها الى ملف الـ c الذي أنشأناه كما يلي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SysTick_Handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وسيتم تنفيذ ما بداخل هذه الدالة كلما أرسل الـ SysTick إشارة الى المعالج، أي كلما وصل العداد الى 0. وما نود تنفيذه في هذه الدالة هو تشغيل الإضاءة الحمراء على البورد إن كانت طافئة وإطفاءها إن كانت مضيئة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SysTick_Handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// toggle red led
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أوامر تهيئة المؤقت SysTick مشابهه لما هو موجود في الدرس التاسع ولكن في ذلك الدرس الغينا عمل المقاطعات في سجل STCTRL بينما نفعله هنا:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_ST_CTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// enable SysTick interrupt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ما يهمنا هنا هو إضافة الأسطر التالية بعد التهيئة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c1&quot;&gt;// Global enable interrupt
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 
  
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حيث أن السطر الأول يفعّل المُقاطعات ثم ندخل في عملية تكرار مستمرة ولكن الأمر interrupts_wait_for يوقف المعالج الى حين حدوث مقاطعة.&lt;/p&gt;

&lt;p&gt;وبذلك يكون كامل الكود لدينا:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;stdint.h&amp;gt;
#include &quot;C:\ti\TivaWare_C_Series-2.1.4.178\inc\tm4c123gh6pm.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;systick_config&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SysTick_Handler&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// toggle red led
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;systick_config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
  &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; 

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// enable clock to GPIOF at clock gating control register
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// enable the GPIO pins for the LED (PF3,2,1) as output
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// disable alt funct on PF3-1
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  
  &lt;span class=&quot;c1&quot;&gt;// enable the GPIO pins for digital function
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;systick_config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// disable SysTick during setup
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_ST_CTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;         
  
  &lt;span class=&quot;c1&quot;&gt;// reload with number of clocks per second
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_ST_RELOAD_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

  &lt;span class=&quot;c1&quot;&gt;// configure SysTick
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_ST_CTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.1) enable SysTick interrupt
&lt;/span&gt;                    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.2) use system clock
&lt;/span&gt;                    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// 4.3) enable SysTick   
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSID  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSIE  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WFI&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; مثال عل المقاطعات&lt;/h2&gt;

&lt;p&gt;في هذا الدرس سوف نعيد كتابة المثال في الدرس الثامن ليستخدم المقاطعات interrupts بدلاً من الإستعلام المتكرر polling.&lt;/p&gt;

&lt;p&gt;وللتذكير فإن البرنامج كان يتعامل مع الأزرار والإضاءات في البورد حيث تختلف الإضاءة حسب الزر المضغوط.&lt;/p&gt;

&lt;p&gt;وفيما يلي جدول يختصر هذه الحالات:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;حالة الأزرار&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;حالة الإضاءة&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW1 و SW2 معاً&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الحمراء تعمل&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW1 فقط&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الزرقاء تعمل&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW2 فقط&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الخضراء تعمل&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;حيث أن:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;الزر الأيسر SW1 متصل بالمنفذ F والطرف 4 =&amp;gt;  PF4&lt;/li&gt;
  &lt;li&gt;الزر الأيمن SW2 متصل بالمنفذ F والطرف 0 =&amp;gt;  PF0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;بالإضافة الى أننا سنتعامل مع الإضاءات الملونة التي تعاملنا معها سابقاً:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;الإضاءة الحمراء  Red LED  متصلة بالمنفذ F والطرف 1 =&amp;gt;  PF1&lt;/li&gt;
  &lt;li&gt;الإضاءة الزرقاء  Blue LED  متصلة بالمنفذ F والطرف 2 =&amp;gt;  PF2&lt;/li&gt;
  &lt;li&gt;الإضاءة الخضراء  Green LED  متصلة بالمنفذ F والطرف 3 =&amp;gt;  PF3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ونظرًا لأن التهيئة المتعلقة بالـ GPIO قد تمت مناقشتها مسبقاً فإننا هنا سننظر الى تهيئة المقاطعات فقط.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تهيئة المقاطعات&lt;/h2&gt;

&lt;p&gt;أول ثلاث خطوات في عملية تهيئة المقاطعات تتعلق بتحديد نقطة بدء trigger المقاطعة، حيث أنه لدينا 5 خيارات بالإمكان للمقاطعة أن تعمل عندها:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;المستوى المنخفض  low level&lt;/li&gt;
  &lt;li&gt;المستوى العالي high level&lt;/li&gt;
  &lt;li&gt;الحافة الصاعدة rising edge من المستوى المنخفض إلى المرتفع&lt;/li&gt;
  &lt;li&gt;الحافة النازلة falling edge من المستوى المرتفع إلى المنخفض&lt;/li&gt;
  &lt;li&gt;كلا الحافتين الصاعدة والنازلة&lt;/li&gt;
&lt;/ul&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/signal_edges.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/signal_edges.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وفيما يلي خطوات التهيئة التي يجب علينا إتباعها:&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;1. تحديد ما إذا كنا سنستخدم المستويات (عالي أم منخفض) أو الحواف (صاعد أم نازل) للإشارة على بدء المقاطعة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;للقيام بذلك نستخدم السجل GPIOIS ص 664.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOIS.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOIS.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نحن هنا سنستخدم الحافة النازلة للإشارة للمقاطعة ولذلك نضع 0 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;2. تحديد ما إذا كنا نريد للإشارة أن تحدث لكلا المستويين (عالي ومنخفض) أو الحافتين (الصاعدة والنازلة)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويكون ذلك عن طريق السجل GPIOIBE ص 665.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOIBE.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOIBE.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وبما أنا قلنا أننا نريد الحافة النازلة فقط، فإننا نضع 0 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IBE_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;3. تحديد ما اذا كنا نريد المستوى العالي و الحافة الصاعدة أم المستوى المنخفض و الحافة النازلة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويتم ذلك عن طريق السجل GPIOIEV ص 666.&lt;/p&gt;

&lt;p&gt;في الحالة الأولى (مستوى عالي أو حافة صاعدة) نضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1). أما في الحالة الثانية (مستوى منخفض أو حافة نازلة) فإننا نضع 0.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IEV_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;4.  مسح أي مقاطعة سابقة متعلقة بالأطراف&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;وذلك عن طريق السجل GPIOICR ص 670.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOICR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOICR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;للتأكد من مسح أي مقاطعة سابقة فإننا نضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;5. تعيين أولوية للمقاطعة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويتم ذلك عن طريق سجلات PRIn ص 152.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/PRIn.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/PRIn.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;تكون سجلات الأولية priority على الشكل التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_PRIn_R&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حيث يمثل n رقم المجموعة التى تتحكم بأولويات المقاطعات في هذه المجموعة. ولمعرفة الرقم الذي يجب علينا إستبدال n به فإن أسهل طريقة لتحديد السجل الذي سنستخدمه هو عن طريق فتح دليل البيانات وإستعراض الـ Bookmarks، وتحت التبويب 3. Cortex-M4 Peripherals نختار 3.4. NVIC Register Descriptions:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/bookmarks.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/bookmarks.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;إبحث عن سجلات الأولوية Priority التي تبدأ من سجل 29 وتنتهي بالسجل 63.&lt;/p&gt;

&lt;p&gt;إفتح الملف startup_TM4C123.s وإبحث عن GPIOF_Handler. هذه الدالة هي الـ ISR الخاصة بالمقاطعات المتعلقة بالمنفذ F. ما يهمنا هنا هو رقم الـ IRQ لهذه الدالة وهو 30. وكل ما علينا فعله هنا هو البحث عن السجل الذي يشمل المقاطعة رقم 30 وهو السجل رقم 36 حيث يشمل المقاطعات من 28 الى 31.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/PRI7.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/PRI7.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;أي أنه يجب علينا إستخدام المجموعة رقم 7 وبذلك فإننا نستخدم السجل التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_PRI7_R&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وهذه المجموعة السابعة بإمكانها التحكم بأولوية المقاطعات 28 و 29 و 30 و 31 بحيث يكون لكل مقاطعة 3 بتات نحدد فيها أولويتها. أي من 000 الى 111 (ثنائي) أو من 0 الى 7 (عشري):&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/28293031.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/28293031.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وبذلك يكون الحقل المتحكم في أولوية المقاطعة رقم 30 هو INTC (بت 23:21).&lt;/p&gt;

&lt;p&gt;وسنقوم بإعطاء هذه المقاطعة الأولوية 3:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_PRI7_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;6. تمكين المقاطعات للمنفذ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;مرة أخرى، عن طريق فتح دليل البيانات وإستعراض الـ Bookmarks، وتحت التبويب 3. Cortex-M4 Peripherals نختار 3.4. NVIC Register Descriptions. وكل ما علينا فعله هنا هو البحث في سجلات ENn عن السجل الذي يشمل المقاطعة رقم 30 وهو السجل رقم 4 أي EN0 حيث يشمل المقاطعات من 0 الى 31.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/EN0.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/EN0.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وتفاصيل السجل موجودة في ص 142 من دليل البيانات:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/EN0_R.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/EN0_R.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نضع الآن القيمة 1 في الخانة 30 لأنها تقابل IRQ رقم 30.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;NVIC_EN0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;7. تمكين المقاطعات للأطراف&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ويكون ذلك عن طريق السجل GPIOIM ص 667.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_14/GPIOIM.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_14/GPIOIM.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;لتمكين المقاطعات للأطراف نضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IM_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;8. تمكين المقاطعات بشكل عام&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;سنستدعي هنا الدالة التي قمنا بكتابتها interrupts_enable :&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;9. كتابة دالة خدمة المقاطعة ISR&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;وجدنا في الملف startup_TM4C123.s إن الـ ISR المسؤول عن المقاطعات الخاصة بالمنفذ F هي GPIOF_Handler. ولذلك ننسخ إسمها ونضعه في ملفنا كالتالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GPIOF_Handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أول ما نفعله هنا هو إزالة إشارة المقاطعة قبل العودة الى التعامل مع المقاطعة. لأننا لو لم نقم بذلك فإن المقاطعة ستظهر كما لو أنها كانت لا تزال معلقة وسيتم تنفيذ دالة خدمة المقاطعة ISR مرة تلو الأخرى وبشكل مستمر الى أن يعلق البرنامج.&lt;/p&gt;

&lt;p&gt;نقوم بإزالة إشارة المقاطعة عن طريق وضع القيمة 1 في الخانات المقابلة للأزرار (بت 0 للمفتاح SW2 وبت 4 للمفتاح SW1).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;بعد ذلك نتعامل مع المقاطعة كما نريد، وفي حالتنا هذه نختبر أي الأزرار تم الضغط عليه لإضائة النور المناسب.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 &amp;amp; SW2 pressed
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 pressed only
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW2 pressed only
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;10. الإنتظار في حلقة التكرار الى أن تحدث مقاطعة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;في main، سنستخدم الدالة interrupts_wait_for لوضع المعالج في حالة الإنتظار standby لحين حدوث مقاطعة:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبذلك يكون كامل الكود:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;string.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;stdint.h&amp;gt;
#include &quot;C:\ti\TivaWare_C_Series-2.1.4.178\inc\tm4c123gh6pm.h&quot;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define SW2        (1&amp;lt;&amp;lt;0)
#define LED_RED    (1&amp;lt;&amp;lt;1)		
#define LED_BLUE   (1&amp;lt;&amp;lt;2)		
#define LED_GREEN  (1&amp;lt;&amp;lt;3)		
#define SW1        (1&amp;lt;&amp;lt;4)		
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt;       &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portf_config_interrupts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_disable&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;portf_config_interrupts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portf_config_gpio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 1) Enable clock for Port F
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    
  &lt;span class=&quot;c1&quot;&gt;// 2.1) Unlock PF0
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_LOCK_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4C4F434B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 2.2) Allow changes to PF0
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_CR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 3) Disable analog functions
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_AMSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
  &lt;span class=&quot;c1&quot;&gt;// 4) Set pin direction
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Output
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// Input
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 5) disable alternate functions
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 6) Set pull up resistor
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_PUR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
  
  &lt;span class=&quot;c1&quot;&gt;// 7) Enable pins
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portf_config_interrupts&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1) Make PF4/PF0 edge sensitive
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 2) Single edges
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IBE_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 3) Falling-edge
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IEV_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 4) Clear any prior interrupt
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 5) PortF is given priority 3
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_PRI7_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    
  &lt;span class=&quot;c1&quot;&gt;// 6) Enable interrupt for PortF (IRQ 30) in NVIC
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;NVIC_EN0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
  &lt;span class=&quot;c1&quot;&gt;// 7) Enable interrupts for PF4, PF0
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_IM_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 8) Global interrupts enable
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GPIOF_Handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
  &lt;span class=&quot;c1&quot;&gt;// clear interrupt
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;       
  
  &lt;span class=&quot;c1&quot;&gt;// a read to force clearing of interrupt flag
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;readback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_ICR_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// toggle LEDs   
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 &amp;amp; SW2 pressed
&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 pressed only
&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW2 pressed only
&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupts_disable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSID  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupts_enable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CPSIE  I&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;interrupts_wait_for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;__asm&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;WFI&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 10 Sep 2018 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2018/09/10/interrupts.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/10/interrupts.html</guid>
        
        
      </item>
    
      <item>
        <title>13. بروتوكول الإتصال المتزامن I2C</title>
        <description>&lt;p&gt;يعتبر الـ Inter-integrated Circuit - I2C نظام اتصال تسلسلي serial عالي السرعة وثنائي الاتجاه للربط مع الطرفيات كما هو الحال بالنسبة للـ SPI والـ UART. ويعتبر هذا البروتوكول أبطأ من SPI ولكنه يستخدم عدد أقل من الخطوط للإتصال حيث بالإمكان الإختيار بين أحد السرعات الأربع التالية:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;قياسي - 100 كيلوبت في الثانية&lt;/li&gt;
  &lt;li&gt;سريع - 400 كيلوبت في الثانية&lt;/li&gt;
  &lt;li&gt;سرعة مضاعفة - 1 ميجابت في الثانية&lt;/li&gt;
  &lt;li&gt;سرعة عالية - 3.33 ميجابت في الثانية&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;الميزة الرئيسية التي تميز I2C عن UART و SPI هي أن ناقل I2C يمكنه دعم العديد من الأجهزة الرئيسية master والفرعية slave على نفس الناقل حيث تتيح لنا القدرة على دعم أجهزة متعددة في ناقل واحد تقليل عدد الأطراف pins الخارجية على المتحكم، مما يقلل من تكلفة وحجم الجهاز.&lt;/p&gt;

&lt;p&gt;وبإمكان جميع الأجهزة المتصلة أن تعمل إما بالوضع الرئيسي master أو الفرعي slave. بالإضافة إلى أنه بإمكان هذه الأجهزة التبديل بين هذين الوضعين.&lt;/p&gt;

&lt;p&gt;كما أن لكل جهاز متصل معرَف أو عنوان فريد unique address خاص به ومعيَن له مسبقاً، ولذلك يمكن للجهاز الرئيسي تحديد الجهاز الفرعي الذي سيقوم بالاتصال به.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; الهاردوير&lt;/h2&gt;

&lt;p&gt;كل ما نحتاج اليه في هذا البروتوكول هما خطان:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. SCL - Serial Clock&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;وهي تنقل إشارة الساعة والتي تنظم وتجدول نقل البيانات بين الأجهزة ويتم توليدها من الجهاز الرئيسي. وبما أن لدينا خط مستقل للساعة فذلك يجعل الـ I2C بروتوكول نقل متزامن synchronous.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. SDA - Serial Data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;هذا الخط مسؤول عن نقل البيانات.&lt;/p&gt;

&lt;p&gt;في هذا البروتوكول يتم توصيل جميع الأجهزة الفرعية بشكل متوازي بالخطوط السابقة. فلو كان لديك أكثر من جهاز فرعي slave متصل بجهاز رئيسي واحد master فكل ما عليك فعله هو ربط جميع خطوط الـ SDA معاً وجميع خطوط الـ SCL معاً مما يجعلنا نحتاج الى إستخدام طرفين pins فقط لكل جهاز متصل، وهذه ميزة تحسب لصالح هذا البروتوكول.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/physical_layer.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/physical_layer.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;الخطان من نوع “تصريف مفتوح” open drain مما يعني أنه يجب إيصالهما بمقاومات لأعلى pull up resistors بحيث تكون الخطوط مرتفعة high، وهي الحالة الغير نشطة idle للناقل bus بينما عندما تكون الأجهزة على هذا الناقل نشطة تكون الخطوط منخفضة low. وللإيضاح أكثر، فإن الخطوط من هذا النوع تكون الأطراف المتصله بها غير متصلة بشكل مباشر بمصدر الطاقة VCC وإنما تتصل مباشرة بـ GND.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; البروتوكول&lt;/h2&gt;

&lt;p&gt;بالإمكان الحصول على التفاصيل الكاملة لبروتوكول الـ I2C من الرابط التالي:&lt;/p&gt;

&lt;p&gt;https://www.nxp.com/docs/en/user-guide/UM10204.pdf&lt;/p&gt;

&lt;p&gt;ونذكر هنا سريعاً بعض الخصائص المتعلقة بهذا البروتوكول:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;لكل جهاز فرعي عنوان فريد معين له مسبقاً ويتكون من 7 بت&lt;/li&gt;
  &lt;li&gt;خطي الإشارة SCL و SDA هما ثنائي الاتجاه&lt;/li&gt;
  &lt;li&gt;يتم إرسال البيانات بشكل متسلسل وتحتوي كل عملية إرسال على 8 بت&lt;/li&gt;
  &lt;li&gt;هنالك مجموعة من السرعات التي يمكن الإختيار بينها وتتراوح بين 100 كيلوبت في الثانية وصولًا إلى 3.33 ميجابت في الثانية&lt;/li&gt;
  &lt;li&gt;يتم نقل البيانات عن طريق إرسال الـ most significant bit msb أولاً&lt;/li&gt;
  &lt;li&gt;البيانات المرسلة تكون محصورة بين إشارتي البدء والتوقف&lt;/li&gt;
  &lt;li&gt;يعتبر الناقل bus غير نشط عندما يكونا كلا الخطين مرتفعين high&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; هيكل البيانات المرسلة والمستقبلة&lt;/h2&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/data_format.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/data_format.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;كنظرة عامة لتنسيق البيانات المرسله على الناقل فمن الممكن القول بأنها تأخذ الشكل التالي:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;بت للبدء Start&lt;/li&gt;
  &lt;li&gt;عنوان الجهاز الفرعي الذي سيتم إرسال البيانات إليه Address&lt;/li&gt;
  &lt;li&gt;بت التأكيد ACK&lt;/li&gt;
  &lt;li&gt;بعد ذلك لدينا سلسلة من البيانات على حسب إحتياجنا الى إرسالها أو أستقبالها&lt;/li&gt;
  &lt;li&gt;بعد كل سلسلة مكونة من 8 بت يأتي بت التأكيد ACK&lt;/li&gt;
  &lt;li&gt;بت للتوقف Stop&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;وفيما يلي سنقوم بذكر تفاصيل الأجزاء المختلفة لهذا البروتوكول:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;بت البدء Start&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;في البداية يكون كل من خطي SCL و SDA في الوضع المرتفع high بسبب مقاومات السحب لأعلى pull-up resistors، وهذا يعني أنه لا يوجد هنالك أي نشاط في الناقل bus. ومن أجل الإشارة إلى بدء عملية نقل البيانات، سيقوم الجهاز الرئيسي بخفض خط SDA بينما يكون خط SCL عالي. وتعتبر هذه إشارة البدء START حيث يمكن إعتبارها تنبيهاً لجميع الأجهزة المتصلة بالناقل حيث أنها تصبح مستعدة للاستماع للجهاز الرئيسي.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/start_condition.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/start_condition.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;العنوان Address&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بعد بت البدء START، يقوم الجهاز الرئيسي بإرسال عنوان Address الجهاز الفرعي slave الذي يود التواصل معه وذلك عن طريق إرسال البت الأعلى most significant bit أولاً وإنتهاءاً بالبت الأدنى least significant bit. ويتكون العنوان من سبعة بتات لأن البت الثامنة هي بت التحكم بالإرسال والإستقبال R/S وتستخدم للإشارة الى ما اذا كان الجهاز الرئيسي سيقوم بالكتابة الى الجهاز الفرعي (0) أم القراءة منه (1) أي هل على الجهاز الفرعي الإستعداد لإستقبال بيانات أم هل هو طلب بيانات معينة من هذا الجهاز الفرعي .&lt;/p&gt;

&lt;p&gt;بعد استلام العنوان، ستقوم جميع الأجهزة الفرعية بمقارنة العنوان المستلم من الجهاز الرئيسي بعنوانها الخاص فإذا تطابقت أستمرت في التواصل وإذا لم تتطابق فإنها تستمر في الانتظار حتى يصبح الناقل bus غير نشط وذلك بعد إرسال بت التوقف.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;التأكيد ACK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;سوف يستجيب الجهاز الفرعي الذي يتطابق معه العنوان بإرسال إشارة تأكيد ACK للإشارة الى أنه قد استلم بنجاح التسلسل السابق للبتات، وبذلك يقوم الجهاز الرئيسي بتحويل مسؤولية خط البيانات SDA الى الجهاز الفرعي.&lt;/p&gt;

&lt;p&gt;وإذا ما كان الجهاز الفرعي قد تلقى التسلسل السابق بنجاح فإنه سيقوم بخفض خط SDL وهذا هو التأكيد ACK. أما اذا لم يقم الجهاز الفرعي بذلك فهذه الحالة الغير مؤكدة NACK وتعني بأن الجهاز الفرعي لم يستلم البتات السابقة بشكل صحيح لأي سبب كان.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;إرسال/إستقبال البيانات&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بعد تلقي إشارة ACK سيقوم الجهاز الرئيسي إما بنقل أو إستقبال البيانات حسب إشارة التحكم R/S المرسلة بعد عنوان الجهاز الفرعي. في حالة الإرسال، سيقوم الجهاز الرئيسي بإرسال البيانات بايت واحد في كل مرة ويستجيب الجهاز الفرعي بإرسال إشارة ACK بعد استلام كل بايت من البيانات. وعندما ينتهي الجهاز الرئيسي من إرسال جميع البيانات سيقوم بإرسال إشارة التوقف STOP.&lt;/p&gt;

&lt;p&gt;أما في حالة أن الجهاز الرئيسي سيستقبل بيانات، فإن الجهاز الفرعي سيقوم بإرسال بايت البيانات الأول بعد إرسال إشارة ACK وسيستجيب الجهاز الرئيسي بإرسال إشارة ACK بعد استلام كل بايت من البيانات.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/sequence.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/sequence.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;التوقف Stop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بمجرد أن يتلقى الجهاز الرئيسي جميع البيانات فإنه سيرسل إشارة NACK متبوعة بإشارة STOP لإخلاء الناقل لأي عملية نقل بيانات أخرى. وتحدث إشارة التوقف عندما ينتقل خط SDA من الوضع المنخفض 0 الى الوضع المرتفع 1 بينما يكون خط الـ SCL مرتفع .&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/stop_condition.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/stop_condition.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تهيئة وضبط إعدادات الـ SPI&lt;/h2&gt;

&lt;p&gt;توضح صفحة 1015 في دليل البيانات طريقة تهيئة الـ I2C وكيف يمكننا تهيئتها للعمل ضمن حالات معينة.&lt;/p&gt;

&lt;p&gt;سنبدأ أولاً بشرح عملية التهيئة، ثم سنشرح كيفية إعداد الـ I2C لإرسال وإستقبال بايت واحد من البيانات كجهاز رئيسي.&lt;/p&gt;

&lt;p&gt;أود الإشارة الى أننا في هذه الأمثلة لن نكتب عناوين السجلات بأنفسنا ولكننا سنستخدم تعريفات السجلات الموجودة في ملف التعريفات كما يلي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;C:\ti\TivaWare_C_Series-2.1.4.178\inc\tm4c123gh6pm.h&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وفيما يلي الخطوات المتبعة لتهيئة الـ I2C:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. قم بتمكين ساعة الـ I2C باستخدام سجل RCGCI2C في وحدة التحكم في النظام (انظر صفحة 348).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/RCGCI2C.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/RCGCI2C.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;سنستخدم في الأمثلة التالية I2C0 ولذلك سنقوم بكتابة 1 في الحقل R0 (بت 0)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCI2C_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// activate I2C0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. قم بتمكين الساعة في وحدة GPIO المناسبة عبر سجل RCGCGPIO في وحدة التحكم في النظام (انظر صفحة 340). لمعرفة أي منفذ GPIO لتمكينه، راجع الجدول 5-23 في الصفحة 1351.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بإمكاننا أن نرى في الجدول 5-23 بأن وحدة I2C0 موجودة في المنفذ B&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/table_23_5.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/table_23_5.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;ولذلك، لتفعيل المنفذ B نكتب 1 في حقل R1 (بت 1) في السجل RCGCGPIO:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/RCGCGPIO.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/RCGCGPIO.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// activate port B
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وقبل أن نواصل، سنتأكد من ان المنفذ جاهز للعمل وذلك عن طريق قراءة القيمة الموجودة في الحقل R1 (بت 1) والتأكد من أنها تساوي 1.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/PRGPIO.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/PRGPIO.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_PRGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// is port B ready?
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3. في وحدة GPIO ، قم بتمكين الأطراف المناسبة للوظيفة البديلة باستخدام سجل GPIOAFSEL (انظر صفحة 671). لتحديد أي GPIOs لتهيئتها، راجع جدول 4-23 في الصفحة 1344.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/GPIOAFSEL.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/GPIOAFSEL.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;لقد ذكرنا سابقاً بأننا سنتعامل مع المنفذ B. وفي الجدول 5-23:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/table_23_5.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/table_23_5.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يتضح لنا بأننا سنستخدم الطرف PB2 لـ SCL والطرف PB3 لـ SDA. ولذلك يتوجب علينا تفعيل الوظائف البديلة لهذه الأطراف:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTB_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable alt funct on PB2,3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4. تمكين طرف I2CSDA لتفعيل خاصية الصرف (الإستنزاف) المفتوح open-drain. انظر الصفحة 676.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/GPIODR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/GPIODR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يمكّن هذا السجل خاصية الـ open-drain للأطراف المستخدمة في بروتوكول I2C. وفي بورد TI Tiva الذي نستخدمه، يتم تعيين المنفذ I2CSDA فقط كـ open-drain. وسوف يصبح المنفذ I2CSCL كذلك open-drain مع I2CSDA. أما تعيين I2CSCL كـ open-drain مباشرة لن يعمل.&lt;/p&gt;

&lt;p&gt;وعلى ذلك سيتم تمكين خاصية open-drain لـ SDA فقط وذلك للطرف PB3.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTB_ODR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable open drain on PB3 only
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;عند تفعيل خاصية الـ open-drain فإنه يتوجب علينا كتابة 1 في البت المقابل للطرف المستخدم وذلك في السجل GPIODEN:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/GPIODEN.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/GPIODEN.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTB_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable as digital signals
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5. قم بإعداد حقول PMCn في سجل GPIOPCTL لتعيين إشارات I2C إلى الأطراف المناسبة. انظر الى الصفحة 688 والجدول 5-23 في الصفحة 1351.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بمجرد تمكيننا للوظائف البديلة، يتعين علينا عندئذ اختيار الوظيفة البديلة المحددة التي نريدها. في الجدول 5-23 في صفحة 1351 في دليل البيانات يمكننا رؤية أن I2C0 يقع في العمود 3:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/i2c0_pctl.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/i2c0_pctl.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;في هذا السجل - GPIOPCTL - كل 4 بت تمثل طرف، فالحقل PMC0 (بت0-3) يمثل الطرف 0، والحقل PMC1 (بت4-7) يمثل الطرف 1، وهكذا.&lt;/p&gt;

&lt;p&gt;وكما ذكرنا سابقاً، بما أن I2C0 تقع في العمود رقم 3 فإننا نضع القيمة 3 في الحقول التي تمثل الأطراف التى نود تحويلها الى I2C:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTB_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00003300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// configure PB2,3 as I2C
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;كما أننا سنقوم بتعطيل الوظائف التماثلية analog للأطراف PB2 و PB3:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/GPIOAMSEL.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/GPIOAMSEL.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTB_AMSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// disable analog functionality on PB2,3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;6. قم بتهيئة الجهاز الرئيسي في I2C وذلك بكتابة القيمة 0x0000.0010 الى سجل I2CMCR.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/I2CMCR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/I2CMCR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نستخدم السجل I2CMCR لتحديد ما إذا كان الجهاز الذي نقوم ببرمجته هو الجهاز الرئيسي أم فرعي.&lt;/p&gt;

&lt;p&gt;إسناد القيمة 1 الى الحقل MFE (بت 4) يجعل الجهاز الحالي هو الجهاز الرئيسي.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// master function enable
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;7. حدد سرعة ساعة SCL المطلوبة بـ 100 كيلوبت في الثانية عن طريق كتابة القيمة المطلوبة الى سجل I2CMTPR. تمثل القيمة المكتوبة الى سجل I2CMTPR عدد فترات ساعة النظام في فترة ساعة SCL واحدة. يتم تحديد قيمة TPR بالمعادلة التالية:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TPR = (System Clock / (2 * (SCL_LP + SCL_HP) * SCL_CLK)) - 1؛
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/I2CMTPR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/I2CMTPR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يمكن لوحدة الـ I2C العمل بأحد السرعات التالية:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;قياسي Standard بسرعة 100 كيلوبت في الثانية&lt;/li&gt;
  &lt;li&gt;سريع Fast بسرعة 400 كيلوبت في الثانية&lt;/li&gt;
  &lt;li&gt;سرعة مضاعفة Fast-Mode Plus بسرعة 1 ميجابت في الثانية&lt;/li&gt;
  &lt;li&gt;سرعة عالية High Speed بسرعة 3.33 ميجابت في الثانية&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;يمكن تحديد السرعة المطلوبة بالكتابة الى الحقل TPR (بت 6:0) في السجل I2CMTPR&lt;/p&gt;

&lt;p&gt;ويتم حساب قيمة TPR على النحو التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;TPR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Clock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SCL_LP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCL_HP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCL_CLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حيث أن:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;System Clock هي سرعة تردد ساعة النظام، وهي 16 ميجاهيرتز في حالتنا&lt;/li&gt;
  &lt;li&gt;SCL_LP ثابته وتساوي 6&lt;/li&gt;
  &lt;li&gt;SCL_HP ثابته وتساوي 4&lt;/li&gt;
  &lt;li&gt;SCL_CLK هي السرعة المختارة لناقل الـ I2C، وهي 100 كيلوبت/ثانية في مثالنا&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;وعلى ذلك نستطيع أن نستنتج قيمة TPR:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TPR = (16000000 / (2 * (6 + 4) * 100000)) - 1
TPR = (16000000 / (2 * 10 * 100000)) - 1
TPR = (16000000 / (2 * 10 * 100000)) - 1
TPR = (16000000 / 2000000) - 1
TPR = 8 - 1
TPR = 7
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MTPR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// configure for 100 kbps clock
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وفيما يلي جميع الخطوات المتبعة لتهيئة وحدة الـ I2C:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i20_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1. Enable the I2C clock using the RCGCI2C register in the System Control module (see page 348).
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCI2C_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// activate I2C0
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 2. Enable the clock to the appropriate GPIO module via the RCGCGPIO register in the System 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    Control module (see page 340). To find out which GPIO port to enable, refer to Table 23-5 on page 1351.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// activate port B
&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_PRGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// is port B ready?
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 3. In the GPIO module, enable the appropriate pins for their alternate function using the 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    GPIOAFSEL register (see page 671). To determine which GPIOs to configure, 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    see Table 23-4 on page 1344.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTB_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable alt funct on PB2,3
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 4. Enable the I2CSDA pin for open-drain operation. See page 676.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTB_ODR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable open drain on PB3 only
&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;GPIO_PORTB_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable digital I/O on PB2,3
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 5. Configure the PMCn fields in the GPIOPCTL register to assign the I2C signals to the appropriate 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    pins. See page 688 and Table 23-5 on page 1351.                                        
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTB_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00003300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// configure PB2,3 as I2C
&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;GPIO_PORTB_AMSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// disable analog functionality on PB2,3
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 6. Initialize the I2C Master by writing the I2CMCR register with a value of 0x0000.0010.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;I2C0_MCR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// master function enable
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 7. Set the desired SCL clock speed of 100 Kbps by writing the I2CMTPR register with the correct 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    value. The value written to the I2CMTPR register represents the number of system clock periods 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    in one SCL clock period. The TPR value is determined by the following equation:
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    TPR = (System Clock/(2*(SCL_LP + SCL_HP)*SCL_CLK))-1;
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    TPR = (16MHz/(2*(6+4)*100000))-1;
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    TPR = 7
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    Write the I2CMTPR register with the value of 0x0000.0007.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;I2C0_MTPR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// configure for 100 kbps clock
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; الإرسال&lt;/h2&gt;

&lt;p&gt;يوضح المثال التالي كيفية إرسال الجهاز الرئيسي لبايت واحد في الـ I2C.&lt;/p&gt;

&lt;p&gt;سنستخدم الصورة التوضيحية 8-16 في صفحة 1008 من دليل البيانات لإرشادنا. علماً أننا لن نطبق التسلسل الموجود في المربع.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/figure_16_8.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/figure_16_8.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;8. حدد عنوان الجهاز الفرعي وبأن العملية التالية هي إرسال عن طريق الكتابة الى سجل I2CMSA.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/I2CMSA.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/I2CMSA.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يجب علينا تحديد عنوان الجهاز الفرعي الذي نود الإرسال اليه عن طريق كتابة العنوان الى الحقل SA (بتات 7:1) في السجل I2CMSA.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SA[7:1] is slave address
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لاحظ أن العناوين في I2C مكونة من 7 بت فقط (بحد أقصى 127 جهازًا).&lt;/p&gt;

&lt;p&gt;ويتم استخدام حقل R/S (بت 0) في نفس السجل للإشارة إلى ما إذا كنا سنرسل الى الجهاز الفرعي أم نستقبل منه.&lt;/p&gt;

&lt;p&gt;وبما أننا سنرسل بيانات في هذا المثال فسنقوم بكتابة 0 الى الحقل R/S.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// R/S[0] is 0 for send
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;9. وضع البيانات (البايت الذي تود إرساله) في سجل البيانات I2CMDR.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/I2CMDR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/I2CMDR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;هذا السجل مسؤول عن كتابة البيانات الى خط SDA أو قراءة البيانات منه.&lt;/p&gt;

&lt;p&gt;وفيما يلي سنقوم بكتابة بيانات بحجم 1 بايت الى حقل DATA (بت 7:0) في السجل I2CMDR.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MDR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// place byte for transmission
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;10. بدء إرسال بايت واحد من البيانات من الجهاز الرئيسي إلى الفرعي وذلك بكتابة القيمة 0x0000.0007 الى سجل I2CMCS.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;لسجل I2CMCS حالتان، أحدهما عندما نكتب الى هذا السجل والأخرى حينما نقرأ منه. ولذلك له وظيفتان مزدوجه.&lt;/p&gt;

&lt;p&gt;فعندما نكتب اليه، فإنه يعمل كسجل متحكم control register وعندما نقرأ منه فإنه يعمل كسجل للحاله status register.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/I2CMCS_write.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/I2CMCS_write.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;سنقوم بكتابة القيمة 0x07 الى السجل I2CMCS وذلك لتبدأ وحدة الـ I2C بنقل بايت واحد من الجهاز الرئيسي الى الفرعي.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;والسبب في أننا نكتب هذه القيمة بالذات هو لأننا سنضع 1 في حقل RUN (بت 0) و 1 في حقل START (بت 1) و 1 في حقل STOP (بت 2) مما يعطينا الرقم الثنائي 1110 أي 0x07.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate stop
&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate start/restart
&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// master enable
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ولأننا جعلنا كل من START و RUN و STOP تساوي 1 فذلك سيجعل وحدة الـ I2C ترسل إشارة البدء Start ثم عنوان الجهاز الفرعي Slave Address ثم بت التحكم بالإرسال والإستقبال R/S ومن ثم ستتأكد من إستقبالها لبت التأكيد ACK ثم ستقوم بإرسال البيانات Data الموجوده في سجل البيانات وبعدها تتأكد مرة أخرى من بت التأكيد ACK وبعدها سترسل إشارة التوقف Stop لإنهاء عملية الإرسال.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. انتظر حتى اكتمال عملية الإرسال عن طريق التأكد من أن بت BUSBSY في السجل I2CMS يساوي 0.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/I2CMCS_read.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/I2CMCS_read.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;لمتابعة عملية الإرسال والتأكد من أنها تمت يجب علينا مراقبة الحقل BUSBSY (بت 6) في السجل I2CMS الى أن يساوي 0 مما يعني أن عملية الإرسال قد أنتهت.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait for transmission done
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;12. تحقق من بت ERROR في سجل I2CMCS للتأكد من أنه تم الإرسال بشكل صحيح.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;عند اكتمال الإرسال ، يجب أن يتحقق البرنامج من بت الخطأ ERROR (بت 1)  في سجل I2CMCS للتأكد من عدم وجود خطأ في الإرسال.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//check for error
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وفيما يلي الدالة الكاملة لإرسال الجهاز الرئيسي لبايت واحد:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;i2c0_send_1_byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait for I2C ready
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 8. Specify the slave address of the master and that the next operation is a Transmit by writing the 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    I2CMSA register with a value of 0x0000.0076. This sets the slave address to 0x3B.  
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SA[7:1] is slave address
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// R/S[0] is 0 for send
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 9. Place data (byte) to be transmitted in the data register by writing the I2CMDR register with the 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    desired data.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;I2C0_MDR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// place byte for transmission
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 10. Initiate a single byte transmit of the data from Master to Slave by writing the I2CMCS register 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//     with a value of 0x0000.0007 (STOP, START, RUN).
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate stop
&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate start/restart
&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// master enable
&lt;/span&gt;					   	
  &lt;span class=&quot;c1&quot;&gt;// 11. Wait until the transmission completes by polling the I2CMCS register's BUSBSY bit until it has 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//     been cleared.
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait for transmission done
&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//check for error
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; الإستقبال&lt;/h2&gt;

&lt;p&gt;يوضح المثال التالي كيفية تلقي الجهاز الرئيسي لبايت واحد في الـ I2C.&lt;/p&gt;

&lt;p&gt;سنستخدم  الصورة التوضيحية 9-16 في صفحة 1009 من دليل البيانات لإرشادنا. علماً أننا لن نطبق التسلسل الموجود في المربع.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_13/figure_16_9.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_13/figure_16_9.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;الطريقة مشابهه الى حد كبير لما قمنا به عند إرسال بايت واحد. ولكننا سنمر عليها سريعاً هنا:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. تكرار محاولة القراءة طالما وجد خطأ في إستقبال البيانات ولم نجتاز العدد المحدد من المحاولات.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// code
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;                                         
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retry_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_retries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. الإنتظار الى أن تصبح وحدة الـ I2C جاهزة.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait for I2C ready
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3. كتابة عنوان الجهاز الفرعي.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SA[7:1] is slave address
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4. الإشارة الى أننا نطلب إستقبال بيانات.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// R/S[0] is 1 for receive
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5. إرسال المعلومات السابقة.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate stop
&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate start/restart
&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// master enable
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;6. التأكد من إكتمال عملية الإرسال.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait for transmission done
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;7. قراءة البايت المستقبل.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;return (I2C0_MDR_R &amp;amp; 0xFF);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وفيما يلي الدالة الكاملة لإستقبال الجهاز الرئيسي لبايت واحد:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i2c0_recv_1_byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_retries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retry_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait for I2C ready
&lt;/span&gt;    
	&lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SA[7:1] is slave address
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;I2C0_MSA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;// R/S[0] is 1 for receive
&lt;/span&gt;    
	&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate stop
&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// generate start/restart
&lt;/span&gt;                 &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// master enable
&lt;/span&gt;    
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait for transmission done
&lt;/span&gt;    
	&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retry_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// increment retry counter
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// repeat if error
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MCS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retry_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_retries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I2C0_MDR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 17 Aug 2018 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2018/08/17/i2c.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/08/17/i2c.html</guid>
        
        
      </item>
    
      <item>
        <title>12. بروتوكول الإتصال المتزامن SPI</title>
        <description>&lt;p&gt;الواجهة الطرفية التسلسلية Serial Peripheral Interface - SPI هي بروتوكول بيانات متسلسلة serial ومتزامنة synchronous تستخدمه المتحكمات للتواصل مع جهاز طرفي واحد أو أكثر أو مع متحكم آخر بسرعة نقل بيانات عالية وعبر مسافات قصيرة.&lt;/p&gt;

&lt;p&gt;أحد المزايا الرئيسية لـ SPI هو أنه يوفر معدل نقل بيانات أعلى من UART و I2C ويستخدم عند الحاجة إلى اتصال تسلسلي عالي السرعة. يمكنك أيضًا إرسال المزيد من المعلومات لكل عملية نقل بيانات ولكن يعيبها حاجتها الى المزيد من الأطراف عن تلك التي بـ UART و I2C.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; الهاردوير&lt;/h2&gt;

&lt;p&gt;في الـ SPI هناك دائمًا جهاز رئيسي واحد (عادةً ما يكون المتحكم) يتحكم في الأجهزة الطرفية. وعادة ما يكون هنالك ثلاثة خطوط مشتركة بين جميع الأجهزة:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. SCLK - Serial Clock&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;تحدد الساعة معدل نقل البيانات وينقل هذا الخط نبضات الساعة التي تعمل على تزامن نقل البيانات التي تم إنشاؤها بواسطة الطرف الرئيسي. كل بت من البيانات يتم نقله على هذا الخط تتزامن وتتوافق مع إشارة أو نبضة واحدة للساعة. والهدف من ذلك هو تمكين المتلقي من إستقبال البتات في الرسالة بنفس المعدل الذي تم نقلها عليه للتأكد من عدم ضياع أية بت وليتمكن المستقبل  من تفسيرها بشكل صحيح.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. MOSI - Master Out Slave In&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;يستخدمه الجهاز الرئيسي لإرسال البيانات إلى الأجهزة الطرفية. ويتم إرسال البت الأعلى most significant bit أولاً.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. MISO - Master In Slave Out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;يتلقى الجهاز الرئيسي البيانات من الأجهزة الطرفية عبر هذا الخط. ويتم إستقبال البت الأعلى most significant bit أولاً.&lt;/p&gt;

&lt;p&gt;وهنالك خط واحد خاص بكل جهاز فرعي ويكون متصلاً بالجهاز الرئيسي:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. SS - Slave Select&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;يتم تبليغ الجهاز الفرعي على هذا الخط بأن عليه الاستعداد لتلقي البيانات وبأنه هو المعني بإستقبال هذه البيانات. هناك طرف pin منفصل لكل جهاز فرعي متصل بالجهاز الرئيسي. في الحالة العادية تكون إشارة هذا الخط عالية (1) ومتى ما أردنا التواصل مع أحد الأطراف فكل ما علينا فعله هو جعل قيمة الخط الخاص بالجهاز الطرفي منخفضه (0) ثم رفعها مرة أخرى بعد الإنتهاء من عملية الإرسال.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/table_15_1.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/table_15_1.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;الرسم التوضيحي التالي يمثل الاتصال بين جهاز رئيسي وجهاز فرعي واحد:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/single_slave.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/single_slave.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;أما إذا كان لدينا أكثر من جهاز فرعي واحد، فإن ثلاثة من الخطوط ستكون متصلة بجميع الأطراف: SCLK و MOSI و MISO، بينما سيكون لكل طرف خط SS واحد:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/multi_slave3.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/multi_slave3.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; الساعة&lt;/h2&gt;

&lt;p&gt;SPI هو ناقل بيانات “متزامن” synchronous، مما يعني أنه يستخدم خطوط منفصلة للبيانات و خط للساعة لتحافظ على تزامن كلا الجانبين. ونظرًا الى أن الساعة يتم إرسالها في خط مستقل مع البيانات، فإنه لا يتوجب علينا توحيد سرعة نقل البيانات للمرسل والمستقبل كما فعلنا في الـ UART.&lt;/p&gt;

&lt;p&gt;الساعة عبارة عن إشارة تتأرجح oscillating بإستمرار تخبر الطرف المستقبل متى عليه بالضبط أخذ عينات sample للبتات على خط البيانات. قد تؤخذ العينة عند إرتفاع (منخفض إلى مرتفع) أو سقوط (مرتفع إلى منخفض) حافة إشارة الساعة. عندما يكتشف المستقبِل هذه الحافة، فإنه سينظر على الفور إلى خط البيانات لقراءة البت bit التالي.&lt;/p&gt;

&lt;p&gt;طرف واحد فقط يولد إشارة الساعة يسمى الطرف “الرئيسي” master، والجانب الآخر يسمى بالطرف “الفرعي” slave. هناك دائمًا طرف رئيسي واحد فقط (وهو دائمًا ما يكون المتحكم الخاص بك)، ولكن يمكن أن يكون هنالك العديد من الأطراف الفرعية. ونظرًا لأن الطرف الرئيسي هو الوحيد الذي يمكنه أن يولًد الساعة فإنه هو من يحدد وقت حدوث جميع العمليات على البيانات.&lt;/p&gt;

&lt;p&gt;عندما يتم إرسال البيانات من الطرف الرئيسي للفرعي، يتم إرسالها على خط بيانات يسمى MOSI، أو “Master Out / Slave In”. وإذا احتاج الطرف الفرعي إلى إرسال رد إلى الطرف الرئيسي، فسوف يستمر الطرف الرئيسي في توليد عدد محدد مسبقًا من دورات الساعة، وسيضع الطرف الفرعي بياناته على خط بيانات ثالث يسمى MISO، أو “Master In / Slave Out”.&lt;/p&gt;

&lt;p&gt;لا يمكن للجهاز الطرفي أن يرسل للرئيسي بيانات كيفما يشاء، بل لابد أن يكون ذلك محدداً ومعروفاً مسبقاً من قبل الجهاز الرئيسي فيما اذا ما كان سيقوم الجهاز الطرفي بالإجابة على رسالة أرسلها الجهاز الرئيسي وماهو حجم هذه البيانات. وذلك لأن الجهاز الرئيسي هو وحده من يولد الساعة. هذا السيناريو يختلف كثيرا عن الإرسال الغير المتزامن asynchronous، حيث يمكن إرسال كميات عشوائية من البيانات في أي اتجاه وفي أي وقت. ولكن في الواقع لا يشكل هذا الأمر عائقاً كبيراً من الناحية العملية، حيث أن SPI تستخدم عادة للتواصل مع المستشعرات sensors التي لها بنية أوامر محددة ومعروفة مسبقاً. على سبيل المثال، إذا أرسلت أمرًا لـ “قراءة البيانات” إلى جهاز ما، فستعلم أن الجهاز سيرد عليك دائمًا بـ 2 بايت من البيانات في المقابل. أما في الحالات التي قد ترغب فيها بإرجاع كمية متغيرة من البيانات، يمكنك دائمًا إرجاع بايت واحد تحدد فيه طول البيانات القادمة، وعلى ذلك يمكن للطرف الرئيسي إسترجاع كامل البيانات المرسله اليه.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; أنماط الـ SPI&lt;/h2&gt;

&lt;p&gt;عندما يتصل جهازان معاً عن طريق الـ SPI فهنالك أمران مهمان يجب عليهما أن يتفقان عليه:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ما هو وضع الساعة في فترات عدم النشاط؟&lt;/li&gt;
  &lt;li&gt;ومتى يفترض أخذ عينات البيانات؟&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ويشار إلى هاتين الخاصيتين عادة باسم قطبية الساعة clock polarity وطور الساعة clock phase على التوالي.&lt;/p&gt;

&lt;p&gt;تحدد قطبية الساعة clock polarity ما إذا كان وضع الساعة منخفض 0 أو مرتفع 1 عند عدم إرسال البيانات (الحالة الغير نشطة)؛ بمعنى هل الساعة غير نشطة عندما تكون مرتفعة أم منخفضة؟ إذا تم ضبط القطبية polarity على 0، فسيكون وضع الساعة منخفض 0 عندما تكون غير نشطة. وعندما تكون القطبية 1 سيكون وضع الساعة 1 عندما تكون غير نشطة.&lt;/p&gt;

&lt;p&gt;ويشير طور الساعة clock phase إلى الحافة التي سيقوم فيها الجهاز بمعاينة البايت الأول من البيانات. ما إذا كان نقل البيانات على الحافة الصاعدة أو المتساقطة لإشارة الساعة. إذا كان الطور يساوي 0، فسيتم معاينة البيانات على الحافة الأولى من الساعة. أما إذا كان الطور يساوي 1، فسيتم معاينة البيانات على الحافة الثانية من الساعة.&lt;/p&gt;

&lt;p&gt;هناك 4 أوضاع مختلفة في SPI وهي MODE0 و MODE1 و MODE2 و MODE3. وهي تعتمد على أنه يمكنك تحديد بالضبط كيف يتم بالضبط معاينة البت وذلك على أساس موضع إشارة الساعة. هناك جزءان من الساعة يجب أن تضعه في اعتبارك، قطبية الساعة CPOL وطور الساعة CPHA.&lt;/p&gt;

&lt;p&gt;عندما يكون CPOL = 0 فذلك يعني أنه سيتم ضبط الساعة إلى مستوى منخفض وعندما تبدأ فعليًا بالإرسال فإن الإشارة ستبدأ من الوضع المنخفض ومن ثم مرتفعة ومن ثم منخفضة وهكذا. وعندما يكون CPOL = 1 فذلك يعني أنه سيتم ضبط الساعة فعليًا على الوضع المرتفع، وعندما نبدأ فعليًا في بالإرسال، فإن الإشارة ستنخفض ثم ترتفع ثم تنخفض وهكذا.&lt;/p&gt;

&lt;p&gt;يحدد CPHA ما إذا كان سيتم معاينة الإشارة في التغيير الأول للساعة أو التغيير الثاني للساعة. لذلك عندما CPHA = 0 يعني أن البت يتم تحديده على أول تغيير للساعة. وعندما يكون CPHA = 1 فذلك يعني أنه سيتم معاينة البت على التغيير الثاني للساعة وذلك عندما تنتقل الإشارة من مرتفع إلى منخفض أو العكس.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/cpol_cpha.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/cpol_cpha.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;باستخدام كل من القطبية polarity والطور phase، يمكننا تحديد 4 أنماط مختلفة لـ SPI (من 0 إلى 3) وفقًا لهذا الجدول:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;MODE&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;POLARITY - CPOL&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;PHASE - CPHA&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;

&lt;caption align=&quot;bottom&quot; style=&quot;text-transform: lowercase; font-style: italic; font-size: 0.8em&quot;&gt;source: http://elm-chan.org/docs/spi_e.html&lt;/caption&gt;
&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/spi_modes.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/spi_modes.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; NOKIA 5110 LCD&lt;/h2&gt;

&lt;p&gt;لتجربة الـ SPI سنستفيد من شاشة Nokia 5110 LCD. سنقوم أولا بتوصيل الشاشة بالمتحكم ثم تهيئة وإعداد الـ SPI.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/lcd_front.jpg&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/lcd_front.jpg');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;تم استخدام شاشة Nokia 5110 LCD في هواتف Nokia 5110 المحمولة منذ عدة سنوات. وتحتوي الشاشة على 48 صفًا × 84 عمودًا من وحدات البكسل باستهلاك منخفض للطاقة حيث أنها قادرة على العمل من 2.7 فولت إلى 5 فولت، لذا فهي مناسبة جدًا للاستخدام في التطبيقات المدمجة. ويمكنك الحصول على دليل البيانات على العنوان التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sparkfun.com/datasheets/LCD/Monochrome/Nokia5110.pdf&quot;&gt;Nokia 5110 Datasheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;سيتم توصيل المتحكم بالشاشة على النحو التالي:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/lcd_back.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/lcd_back.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;الخط&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Nokia 5110&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;TM4C123&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;3.3V&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;(VCC, pin 1)&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;power&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Ground&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;(GND, pin 2)&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;ground&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;SSI0Fss&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;(SCE, pin 3)&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Reset&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;(RST, pin 4)&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Data/Command&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;(D/C, pin 5)&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;SSI0Tx&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;(DN,  pin 6)&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;SSI0Clk&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;(SCLK, pin 7)&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;وتكون بالطريقة التالية:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/TivaC_NokiaLCD.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/TivaC_NokiaLCD.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; إرسال أوامر أو بيانات الى الشاشة&lt;/h2&gt;

&lt;p&gt;كما هو مذكور في دليل البيانات الخاص بالشاشة، قبل إرسال البيانات أو الأوامر إلى الشاشة، نحتاج إلى جعل الطرف CE منخفضًا وجعله مرتفعًا مرة أخرى بعد إرسال الأمر. أيضا، نحن بحاجة إلى جعل الطرف DC منخفض 0 للأوامر ومرتفع 1 للبيانات.&lt;/p&gt;

&lt;p&gt;سأقوم هنا فقط بتغطية الأوامر التي سنستخدمها في برنامجنا ويمكنك الرجوع إلى دليل البيانات للمزيد من التفاصيل.&lt;/p&gt;

&lt;p&gt;هناك مجموعتان من الأوامر:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;مجموعة الأوامر الموسعة Extended Command Set وهي تلك المستخدمة في تهيئة طريقة عمل الشاشة، مثل التباين، زاوية العرض، إلخ.&lt;/li&gt;
  &lt;li&gt;مجموعة الأوامر الأساسية Basic Command Set وتستخدم لتعيين وضع العرض وموضع عرض البيانات.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;تتبع عملية التهيئة وإرسال الأوامر التسلسل التالي:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Command&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Value&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Extended Command&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x21&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Set to EXTENDED command mode (Chip activated, horizontal addressing)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Vlcd Voltage&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0xb2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Set Vlcd (Contrast) to 6v&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Voltage Bias&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x13&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Set voltage bias (viewing angle) to n=4, 1:48&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Basic Command&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x20&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Set to NORMAL command mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;All Pixels ON&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x09&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Turn on all pixels&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Display mode&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x0c&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Set display to Normal mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Addressing Y&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;01000yyy&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Addressing row with yyy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Addressing X&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1xxxxxxx&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;Addressing columns with xxxxxxx&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تهيئة الـ SPI&lt;/h2&gt;

&lt;p&gt;إذا فتحنا صفحة 965 في دليل البيانات، فإنه بإمكاننا العثور على الخطوات المطلوبة لتهيئة الـ SPI وهي:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. قم بتمكين وحدة الـ SSI باستخدام سجل RCGCSSI (راجع صفحة 346).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;لنتمكن من استخدام أي من الوحدات الطرفية في المتحكم، يجب علينا تمكين الساعة لها. نستخدم سجل RCGCSSI لتمكين الساعة للـ SSI.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/RCGCSSI.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/RCGCSSI.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCSSI_R   (*((volatile unsigned long *)0x400FE61C))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نقوم هنا بإسناد 1 الى حقل R0 (بت 0) لتمكين SSI0.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCSSI_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. قم بتمكين ساعة وحدة الـ GPIO المناسبة عبر سجل RCGCGPIO (انظر صفحة 340). لمعرفة أي منفذ GPIO يجب عليك تمكينه، راجع الجدول 5-23 في الصفحة 1351.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/RCGCGPIO.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/RCGCGPIO.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCGPIO_R   (*((volatile unsigned long *)0x400FE608))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;يمكننا أن نرى أن SPI 0 يستخدم المنفذ  PORT A.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/table_23_5.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/table_23_5.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وبالعودة إلى سجل RCGCGPIO، يتضح أنه لتمكين PORT A علينا تعيين 1 إلى الحقل R0 (بت 0)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3. ﻗﻢ ﺑﻀﺒﻂ بتات GPIOAFSEL ﻟلأطراف ﺍﻟﻤﻨﺎﺳﺒﺔ (ﺍﻧﻈﺮ ﺻﻔﺤﺔ ٦٧١). لتحديد أي GPIO يجب علينا ضبط إعداداته، راجع جدول 4-23 في الصفحة 1344.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/GPIOAFSEL.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/GPIOAFSEL.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وسبق وأن حددنا المنفذ الذي سنتعامل معه وهو PORT A.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define GPIO_PORTA_AFSEL_R   (*((volatile unsigned long *)0x40004420))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لتمكين الوظائف البديلة لـلمنافذ PA2 و PA3 و PA5، نقوم بإسناد 1 الى البت الذي يقابلها في حقل AFSEL&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;السجل&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;الطرف&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;AFSEL&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;SSI0Fss&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA3&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Reset&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA7&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;Data/Command&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA6&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;SSI0Tx&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;SSI0Clk&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;PA2&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable alt funct
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// disable alt funct
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;إسناد القيمة 1 في سجل AFSEL يقوم بتمكين الوظيفة البديلة للطرف pin. الا أن هذا في حد ذاته لا يكفي حيث أن بعض الأطراف تدعم أكثر من وظيفة بديلة واحدة. وهنا ياتي دور سجل التحكم في المنفذ (PCTL) والذي نقوم فيه بتحديد بالضبط ماهي الوظيفة البديلة التي سيقوم بها المنفذ.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. قم بضبط إعدادات حقول PMCn في سجل GPIOPCTL لتعيين إشارات SSI إلى الأطراف المناسبة (انظر صفحة 688 والجدول 5-23 في الصفحة 1351).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/GPIOPCTL.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/GPIOPCTL.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نستخدم السجل register التالي للمنفذ PORT A:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define GPIO_PORTA_PCTL_R   (*((volatile unsigned long *)0x4000452C))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;بمجرد تمكيننا للوظائف البديلة، يتعين علينا عندئذ اختيار الوظيفة البديلة المحددة التي نريدها. في الجدول 5-23 في صفحة 1351 في دليل البيانات يمكننا رؤية أن SSI0 يقع في العمود 2:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/table_23_5.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/table_23_5.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;في هذا السجل كل 4 بت تمثل طرف، فالحقل PMC0 (بت0-3) يمثل الطرف 0، والحقل PMC1 (بت4-7) يمثل الطرف 1. وهكذا.&lt;/p&gt;

&lt;p&gt;وكما ذكرنا سابقاً، بما أن SSI تقع في العمود رقم 2 فإننا نضع القيمة 2 في الحقول التي تمثل الأطراف التى نود تحويلها الى SPI:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Configure PA2,3,5 as SPI
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF0F00FF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00202200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5. قم بتمكين الوظيفة الرقمية للطرف في السجل GPIODEN. راﺟﻊ “General-Purpose Input/Outputs - GPIOs” ﻓﻲ اﻟﺼﻔﺤﺔ ٦٤٩ ﻟﻠﺤﺼﻮل ﻋﻠﻰ اﻟﻤﺰﻳﺪ ﻣﻦ اﻟﻤﻌﻠﻮﻣﺎت.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/GPIODEN.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/GPIODEN.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وبما أنها إشارات رقمية فإنه يجب علينا تمكين الوظائف الرقمية للأطراف:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define GPIO_PORTA_DEN_R    (*((volatile unsigned long *)0x4000451C))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وهذا يكون كالتالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// enable digital I/O on PA2,3,5,6,7
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; ضبط إعدادات الـ SPI&lt;/h2&gt;

&lt;p&gt;يتم ذلك باستخدام الخطوات التالية:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. تأكد من أن الحقل SSE (بت 1) في سجل SSICR1 يساوي 0 قبل إجراء أي تغييرات في الإعدادات&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/SSICR1.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/SSICR1.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SSI0_CR1_R   (*((volatile unsigned long *)0x40008004))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نحن هنا نقوم فعلياً بإيقاف الـ SPI0 لضبط إعداداته ومن ثم تفعيله مرة أخرى. وذلك يكون على النحو التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR1_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. حدد ما إذا كان SPI للمتحكم الذي تقوم ببرمجته هو لجهاز رئيسي master أم فرعي slave:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;إذا كان رئيسي، اضبط سجل SSICR1 على 0x0000.0000&lt;/li&gt;
  &lt;li&gt;إذا كان فرعي (مع تمكين المخرجات output enabled) ، اضبط سجل SSICR1 على 0x0000.0004&lt;/li&gt;
  &lt;li&gt;إذا كان فرعي (مع عدم تمكين المخرجات output disabled) ، اضبط سجل SSICR1 على 0x0000.000C&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;في برنامجنا هذا المتحكم هو الجهاز الرئيسي والشاشة فرعية ولذلك نقوم بإسناد القيمة  0x0000.0000 الى سجل SSICR1 في البرنامج الذي سنقوم بكتابته على المتحكم:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR1_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3. ضبط مصدر ساعة SSI عن طريق الكتابة إلى سجل SSICC&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/SSICC.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/SSICC.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SSI0_CC_R   (*((volatile unsigned long *)0x40008FC8))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;الحقل CS (بت 3:0) في السجل SSICC يحدد مصدر الساعة المستخدم للـ SPI. سنقوم بإسناد القيمة 0x0 الى هذا السجل لتحديد الساعة الرئيسة كمصدر.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4. ضبط القاسم المخصص للساعة بالكتابة الى سجل SSICPSR.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/SSICPSR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/SSICPSR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SSI0_CPSR_R   (*((volatile unsigned long *)0x40008010))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;هذا السجل يساعدنا في تحديد سرعة نقل البيانات bit rate. وهي بناءاً على المعادلة التالية:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Bit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SysClk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CPSDVSR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SCR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حيث أن:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SysClk هو تردد الساعة المستخدمة. وبما أننا أستخدمنا ساعة النظام فإن ترددها 16 ميجاهيرتز&lt;/li&gt;
  &lt;li&gt;CPSDVSR عبارة عن رقم زوجي بين 2 و 254 يتم تخزينه في حقل CPSDVSR (بت 7:0) في سجل SSICPSR&lt;/li&gt;
  &lt;li&gt;SCR عدد بين 0 و 255 يتم تخزينه في حقل SCR (بت 15:8) في سجل SSICR0 (المزيد عن ذلك في الخطوة التالية)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;فلو كنا نريد أن تكون سرعة النقل 1 ميجابت في الثانية 1MBPS، فستكون المعادلة كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;16000000 / (16 x (1+0))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبذلك تكون CPSDVSR = 0x10 و SCR = 0x0 مما يعطينا 1000000 كيلوبت/ثانية أو 1 ميجابت/ثانية.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. أضبط سجل SSICR0 بالإعدادات التالية:&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/SSICR0.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/SSICR0.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SSI0_CR0_R   (*((volatile unsigned long *)0x40008000))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;معدل الساعة التسلسلية في حقل SCR (بت 15:8) في سجل SSICR0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;حسب ما ذكرنا سابقاً، فإن القيمة التي سنضعها في هذا الحقل هي 0x0&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0000FF00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SCR = 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;سنقوم باستخدام وضع Freescale SPI، ولذلك يجب علينا تحديد قطبية الساعة عن طريق الحقل SPO (بت 6) ومرحلة الساعة في السجل SPH (بت 7)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;سيتم إسناد القيمة 0 الى كليهما:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000040&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SPO = 0 
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SPH = 0  
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;تحديد البرنوكول المستخدم: Freescale SPI أو TI SSF أو MICROWIRE في الحقل FRF (بت 5:4)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;كما ذكرنا، سنختار بروتوكول Freescale SPI وذلك عن طريق إسناد 0x0 الى الحقل FRF&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000030&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// FRF = Freescale format
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;تحديد حجم البيانات المرسلة عن طريق الحقل DSS (بت 3:0)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;سنرسل 8 بت في كل مرة ولذلك نسند القيمة 0x7 الى هذا الحقل&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0000000F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000007&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// DSS = 8-bit data
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;6. سنتخطى هذه الخطوة&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. تمكين الـ SPI عن طريق إسناد 1 الى حقل SSE (بت 1) في سجل SSICR1&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR1_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; إرسال وإستقبال البيانات&lt;/h2&gt;

&lt;p&gt;عند رغبتنا في تمكين القراءة أو الكتابة (الاتصال بشكل عام) في SPI فإنه يتم ضبط خط SS دائمًا الى الوضع المنخفض ويكون خط الساعة SCLK دائمًا ما يتحرك لأعلى ولأسفل لتتبع الوقت.&lt;/p&gt;

&lt;p&gt;وعلى عكس الـ UART، فإنه لا يوجد بت للبدء أو للتوقف والتي تستخدم لتحديد بداية ونهاية قراءة البيانات وبذلك نكون قد وفرنا عدد البتات المرسلة ويكون جميعها مستخدم للبيانات فقط. أي أنه في نفس المدة الزمنية فإنه يمكن إرسال/إستقبال عدد أكبر من البيانات في SPI منها في الـ UART.&lt;/p&gt;

&lt;p&gt;عملية النقل في SPI تشمل جميع البيانات التي يتم إرسالها بينما خط SS منخفض. وتتراوح طول كل حزمة بيانات data frame بين 4 و 16 بت وذلك حسب حجم البيانات الذي يتم تحديده في البرنامج. ويتم إرسال هذه الحزمة بدءاً بالبت الأعلى most significant bit.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/spi_read.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/spi_read.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;تشير الأشكال السداسية أعلاه أنه يتم نقل بيانات على خط MOSI.&lt;/p&gt;

&lt;h2&gt;إرسال البيانات&lt;/h2&gt;

&lt;p&gt;عندما نريد نقل البيانات ، نقوم بتخزينها على SSIDR (سجل بيانات SSI).&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/SSIDR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/SSIDR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SSI0_DR_R   (*((volatile unsigned long *)0x40008008))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نكتب على وجه التحديد إلى حقل Data والمكون من 16 بت (بت 16:0). وبما أننا نعمل مع بيانات من 8 بت، يجب علينا وضع البيانات في الـ 8 بتات الأولى من السجل وباقي السجل غير مستخدم.&lt;/p&gt;

&lt;p&gt;قبل إرسال البيانات، نحتاج إلى التحقق من سجل SSISR للتأكد من أن الـ FIFO غير ممتلئ وجاهز لإرسال البايت التالي.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_12/SSISR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_12/SSISR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SSI0_SR_R   (*((volatile unsigned long *)0x4000800C))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_SR_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait until transmit FIFO not full (TNF flag)
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;DC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DC_DATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SSI0_DR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// data out
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;إستقبال البيانات&lt;/h2&gt;

&lt;p&gt;يُستخدم أيضًا SSIDR لإستقبال البيانات. وفي حالتنا، يحمل الجزء السفلي المكون من 8 بت البيانات المستلمة. وقبل قراءة البيانات، نتحقق مما إذا كان الـ FIFO ليس فارغًا وقد تلقى بيانات، ثم نقرأها من SSIDR.&lt;/p&gt;

&lt;p&gt;في برنامجنا، لا نتلقى بيانات من الشاشة، ولكن لو كنا سنفعل ذلك فإننا سنقوم بشيء مشابه للتالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_SR_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Wait until FIFO not empty (RNE flag)   
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_DR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Read 8-bit data
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; البرنامج&lt;/h2&gt;

&lt;p&gt;فيما يخص التعامل مع الشاشة، تم الإستفادة من بعض الأكواد الموجودة في الصفحة التالية مع التعديل:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://users.ece.utexas.edu/~valvano/arm/index.htm&quot;&gt;http://users.ece.utexas.edu/~valvano/arm/index.htm&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Parts of the code from:
// http://users.ece.utexas.edu/~valvano/arm/index.htm
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************* Registers ************************ */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCSSI_R        (*((volatile unsigned long *)0x400FE61C))
#define SYSCTL_RCGCGPIO_R     	(*((volatile unsigned long *)0x400FE608))
#define GPIO_PORTA_AFSEL_R      (*((volatile unsigned long *)0x40004420))
#define GPIO_PORTA_DIR_R        (*((volatile unsigned long *)0x40004400))
#define GPIO_PORTA_DEN_R        (*((volatile unsigned long *)0x4000451C))
#define GPIO_PORTA_PCTL_R       (*((volatile unsigned long *)0x4000452C))
#define GPIO_PORTA_AMSEL_R      (*((volatile unsigned long *)0x40004528))
#define SSI0_CR1_R              (*((volatile unsigned long *)0x40008004))
#define SSI0_CC_R               (*((volatile unsigned long *)0x40008FC8))
#define SSI0_CPSR_R             (*((volatile unsigned long *)0x40008010))
#define SSI0_CR0_R              (*((volatile unsigned long *)0x40008000))
#define SSI0_SR_R               (*((volatile unsigned long *)0x4000800C))
#define SSI0_DR_R               (*((volatile unsigned long *)0x40008008))
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define DC                      (*((volatile unsigned long *)0x40004100))
#define DC_COMMAND              0
#define DC_DATA                 0x40
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define RESET                   (*((volatile unsigned long *)0x40004200))
#define RESET_LOW               0
#define RESET_HIGH              0x80
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************* Variables ************************ */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Maximum dimensions of the LCD
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#define MAX_X                   84
#define MAX_Y                   48
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// This table contains the hex values that represent pixels
// for a font that is 5 pixels wide and 8 pixels high
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 20
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x5f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 21 !
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 22 &quot;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 23 #
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x2a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x2a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 24 $
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x62&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 25 %
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 26 &amp;amp;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 27 '
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 28 (
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 29 )
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2a *
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2b +
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2c ,
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2d -
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2e .
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 2f /
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 30 0
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 31 1
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x61&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x46&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 32 2
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 33 3
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 34 4
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x39&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 35 5
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 36 6
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x71&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 37 7
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 38 8
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x29&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 39 9
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3a :
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x56&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3b ;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3c &amp;lt;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3d =
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3e &amp;gt;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3f ?
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x79&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 40 @
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 41 A
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 42 B
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 43 C
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 44 D
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 45 E
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 46 F
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 47 G
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 48 H
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 49 I
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4a J
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4b K
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4c L
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4d M
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4e N
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 4f O
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x06&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 50 P
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x5e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 51 Q
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x29&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x46&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 52 R
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x46&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 53 S
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 54 T
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 55 U
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 56 V
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 57 W
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x63&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x63&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 58 X
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 59 Y
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x61&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x43&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5a Z
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5b [
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5c '\'
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5d ]
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5e ^
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 5f _
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 60 `
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x78&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 61 a
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 62 b
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 63 c
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 64 d
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 65 e
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x02&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 66 f
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 67 g
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x78&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 68 h
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 69 i
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6a j
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6b k
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6c l
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x78&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6d m
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x78&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6e n
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 6f o
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 70 p
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 71 q
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 72 r
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 73 s
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 74 t
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 75 u
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 76 v
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 77 w
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 78 x
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 79 y
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x54&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7a z
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7b {
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7c |
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x41&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x36&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7d }
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x08&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7e ~
//  ,{0x78, 0x46, 0x41, 0x46, 0x78} // 7f DEL
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;,{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 7f UT sign
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* ************************ Prototypes ************************ */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spi0_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_out_char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_out_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_setcursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* *************************** main *************************** */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;spi0_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;nokia5110_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;nokia5110_out_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* *************************** Functions *************************** */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Helper function that sends an 8-bit command to the LCD
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// wait until SSI0 not busy/transmit FIFO empty
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_SR_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){};&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;DC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DC_COMMAND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SSI0_DR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// command out
&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// wait until SSI0 not busy/transmit FIFO empty
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_SR_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Helper function that sends 8-bit data to the LCD
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_SR_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// wait until transmit FIFO not full
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;DC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DC_DATA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SSI0_DR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// data out
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spi0_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 1. Enable the SSI module using the RCGCSSI register (see page 346).
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCSSI_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// activate SSI0
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 2. Enable the clock to the appropriate GPIO module via the RCGCGPIO register (see page 340).
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    To find out which GPIO port to enable, refer to Table 23-5 on page 1351.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// activate port A
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// allow time to finish activating
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 3. Set the GPIO AFSEL bits for the appropriate pins (see page 671). To determine which GPIOs to
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    configure, see Table 23-4 on page 1344.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTA_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// enable alt funct on PA2,3,5
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTA_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// disable alt funct on PA6,7
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 4. Configure the PMCn fields in the GPIOPCTL register to assign the SSI signals to the appropriate
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    pins. See page 688 and Table 23-5 on page 1351.
&lt;/span&gt;                                        &lt;span class=&quot;c1&quot;&gt;// configure PA2,3,5 as SSI
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF0F00FF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00202200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                                        &lt;span class=&quot;c1&quot;&gt;// configure PA6,7 as GPIO
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 5. Program the GPIODEN register to enable the pin's digital function. In addition, the drive strength,
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    drain select and pull-up/pull-down functions must be configured. Refer to “General-Purpose
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    Input/Outputs (GPIOs)” on page 649 for more information.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTA_DIR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                             &lt;span class=&quot;c1&quot;&gt;// make PA6,7 out  
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTA_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// enable digital I/O on PA2,3,5,6,7
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTA_AMSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// disable analog functionality on PA2,3,5,6,7
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//For each of the frame formats, the SSI is configured using the following steps:
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 1. Ensure that the SSE bit in the SSICR1 register is clear before making any configuration changes.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CR1_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// disable SSI
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 2. Select whether the SSI is a master or slave:
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    a. For master operations, set the SSICR1 register to 0x0000.0000.
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    b. For slave mode (output enabled), set the SSICR1 register to 0x0000.0004.
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    c. For slave mode (output disabled), set the SSICR1 register to 0x0000.000C.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CR1_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// we choose (a) as the uC is the master
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 3. Configure the SSI clock source by writing to the SSICC register.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// select system clock as the clock input to the SSI module.
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 4. Configure the clock prescale divisor by writing the SSICPSR register. 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Bit Rate = SysClk / (CPSDVSR * (1 + SCR))
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//          = 16000000 / (16 x (1+0))
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//          = 1000000 KHz = 1 MHz
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// So, CPSDVSR = 16 decimal = 0x10
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//         SCR = 0 decimal
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CPSR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

  &lt;span class=&quot;c1&quot;&gt;// 5. Write the SSICR0 register with the following configuration:
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    + Serial clock rate (SCR) (bits 8:15)
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    + Desired clock phase/polarity, if using Freescale SPI mode (SPH (bit 6) and SPO (bit 7))
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    + The protocol mode: Freescale SPI, TI SSF, MICROWIRE (FRF)
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    + The data size (DSS)
&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0000FF00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SCR = 0 
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000040&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SPO = 0 
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// SPH = 0                 
&lt;/span&gt;	
  &lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000030&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// FRF = Freescale format                                       
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSI0_CR0_R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0000000F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000007&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// DSS = 8-bit data
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// 6. Optionally, configure the SSI module for ?DMA use with the following steps:
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    a. Configure a ?DMA for SSI use. See “Micro Direct Memory Access (?DMA)” on page 585 for
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//       more information.
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    b. Enable the SSI Module's TX FIFO or RX FIFO by setting the TXDMAE or RXDMAE bit in the
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//       SSIDMACTL register.
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 7. Enable the SSI by setting the SSE bit in the SSICR1 register.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SSI0_CR1_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;RESET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RESET_LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// reset the LCD to a known state
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// delay minimum 100 ns
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;RESET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RESET_HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// negative logic
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// chip active; horizontal addressing mode (V = 0); use extended instruction set (H = 1)
&lt;/span&gt;                                         &lt;span class=&quot;c1&quot;&gt;// set LCD Vop (contrast), which may require some tweaking:
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xB1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// 0xB1 (for 3.3V red SparkFun)
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x04&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// set temp coefficient
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// LCD bias mode 1:48: try 0x13 or 0x14
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// we must send 0x20 before modifying the display control mode
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;               &lt;span class=&quot;c1&quot;&gt;// set display control to normal mode: 0x0D for inverse
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Print a character to the Nokia 5110 48x84 LCD.  The
// character will be printed at the current cursor position,
// the cursor will automatically be updated, and it will
// wrap to the next row or back to the top if necessary.
// One blank column of pixels will be printed on either side
// of the character for readability.  Since characters are 8
// pixels tall and 5 pixels wide, 12 characters fit per row,
// and there are six rows.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_out_char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd_write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// blank vertical line padding
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd_write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd_write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// blank vertical line padding
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Print a string of characters to the Nokia 5110 48x84 LCD.
// The string will automatically wrap, so padding spaces may
// be needed to make the output look optimal.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_out_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;nokia5110_out_char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Move the cursor to the desired X- and Y-position.  The
// next character will be printed here.  X=0 is the leftmost
// column.  Y=0 is the top row.
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_setcursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// bad input
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                             &lt;span class=&quot;c1&quot;&gt;// do nothing
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// multiply newX by 7 because each character is 7 columns wide
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;// setting bit 7 updates X-position
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;lcd_write_command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;newY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;// setting bit 6 updates Y-position
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Clear the LCD by writing zeros to the entire screen and
// reset the cursor to (0,0) (top left corner of screen).
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nokia5110_clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_Y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lcd_write_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;nokia5110_setcursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; مراجع&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.e-tinkers.com/2017/11/how-to-use-lcd-5110-pcd-8544-with-arduino&quot;&gt;https://www.e-tinkers.com/2017/11/how-to-use-lcd-5110-pcd-8544-with-arduino&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 18 Jul 2018 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2018/07/18/spi.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/18/spi.html</guid>
        
        
      </item>
    
      <item>
        <title>11. بروتوكول الإتصال الغير متزامن UART</title>
        <description>&lt;p&gt;في هذا الدرس، سنجعل المتحكم يتواصل مع أجهزة أخرى مثل أجهزة الكمبيوتر  وشاشات LCD ومتحكمات أخرى حيث يمكننا القيام بذلك باستخدام إما طريقة الاتصال المتوازي parallel communication أو الإتصال المتسلسل serial communication.&lt;/p&gt;

&lt;p&gt;في الاتصال المتوازي parallel، يتم نقل بتات متعددة في الوقت ذاته بينما في الاتصال المتسلسل serial نرسل البتات واحدة تلو الأخرى.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/serial_vs_parallel.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/serial_vs_parallel.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;الدافع وراء استخدام الإتصال المتسلسل هو إستخدام عدد أقل من الأطراف pins. حيث أنه إذا أردنا نقل قيمة مكونة من 8 بت باستخدام الإتصال المتوازي سنحتاج إلى 8 أطراف pins لإرسال هذه القيمة مما سيؤدي بطبيعة الحال الى زيادة حجم المتحكم وزيادة التعقيد في توصيل هذا المتحكم بأجهزة أخرى. بينما في الإتصال المتسلسل serial نستخدم عدد أقل من الأطراف pins مما يجعل من تطوير لوحة الدوائر المطبوعة (PCB) أسهل بكثير وأقل كلفة وعرضة للأخطاء.&lt;/p&gt;

&lt;p&gt;وبالرغم من أنه في الإتصال المتسلسل يتم إرسال البتات الواحد تلو الآخر الا أن هذا لا يمنعنا من نقل بيانات بأي حجم كانت. فلو كان حجم البيانات التي يمكن إرسالها في المرة الواحدة تساوي 8 بت مثلاً وكنا بحاجة الى إرسال 32 بت، فكل ما علينا فعله ببساطة هو إرسال هذه القيم بشكل متتالي أي 8 بت في كل مرة الى أن يتم إرسال البيانات بشكل كامل.&lt;/p&gt;

&lt;p&gt;بعض الأمثلة على الاتصال المتسلسل هي UART، SPI ،I2C وسيغطي هذا الدرس بروتوكول الـ UART ولاحقاَ بمشيئة الله سوف نغطي البروتوكولات الأخرى.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; Universal Asynchronous Receiver and Transmitter - UART&lt;/h2&gt;

&lt;p&gt;عند ربط أكثر من جهاز معاً، نحتاج إلى طريقة لمزامنتها مع بعضها البعض، أي أن يكون كل جهاز على علم ومعرفة بحالة الآخر. وما نقصده فعلياً بالتزامن هنا هو جعل السرعة بين الأجهزة المختلفة والمتصلة معاً متوافقة في السرعة مع بعضها البعض.&lt;/p&gt;

&lt;p&gt;يجب هنا التوضيح بأن كلمة Asynchronous في UART يعني أن بروتوكول الإتصال هذا لا يتضمن وجود ساعة مشتركة بين الأجهزة، إذن كيف يحدث التزامن؟  يكون ذلك عن طريق إتفاق الجهاز المرسل والمستقبل على سرعة نقل معينة Baud Rate أو سرعة نقل البت في الثانية (بت/ثانية) وبذلك يعرف الجهاز المتلقي متى يتم تسجيل بداية ونهاية البيانات المنقولة.&lt;/p&gt;

&lt;p&gt;فلو قلنا أننا ننقل البيانات بسرعة 9600 بت/ثانية فهذا يعني أن كل بت يستغرق 1/9600 أي تقريباً 104 مايكروثانية لنقله.&lt;/p&gt;

&lt;p&gt;فيما يخص الهاردوير، فإن ما نحتاجه لتوصيل جهازين باستخدام الـ UART هو الوصلات التالية:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;طرف الإتصال &lt;strong&gt;Tx&lt;/strong&gt; (إرسال transmit) من &lt;strong&gt;(أ)&lt;/strong&gt; والذي يتصل بالطرف &lt;strong&gt;Rx&lt;/strong&gt; (إستقبال receive) في &lt;strong&gt;(ب)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;طرف الإتصال &lt;strong&gt;Rx&lt;/strong&gt; (إستقبال receive) من &lt;strong&gt;(أ)&lt;/strong&gt; والذي يتصل بالطرف &lt;strong&gt;Tx&lt;/strong&gt; (إرسال transmit) في &lt;strong&gt;(ب)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;الطرف &lt;strong&gt;GND&lt;/strong&gt; (أرضي ground) بين &lt;strong&gt;(أ)&lt;/strong&gt; و &lt;strong&gt;(ب)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;الهدف من إيصال الطرف الأرضي في كلا الجهازين هو الحفاظ على مرجع الجهد (reference voltage) لكلا الجهازين وذلك لأن الإشارات في الـ UART تتكون من إشارات ذات مستوى منخفض 0 ومستوى عال 1 ويجب على الجهاز المستقبِل أن يكون مدركًا إن كانت الإشارات المستقبلة منخفضة أم عالية.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;

&lt;caption align=&quot;bottom&quot; style=&quot;text-transform: lowercase; font-style: italic; font-size: 0.8em&quot;&gt;source: https://learn.sparkfun.com/tutorials/serial-communication&lt;/caption&gt;
&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/uart_connections.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/uart_connections.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; هيكل الرسالة  Message Frame&lt;/h2&gt;

&lt;p&gt;تتكون رسالة الـ UART من البتات التالية:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;بت البداية &lt;strong&gt;start bit&lt;/strong&gt; وتعني بأن المرسل جاهز لنقل البيانات&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;بتات البيانات &lt;strong&gt;data bits&lt;/strong&gt; وتتكون من 8 بت.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;بت التوازن &lt;strong&gt;parity bit&lt;/strong&gt; وهي اختيارية. وتستخدم للكشف عن الأخطاء error detection وليس لتصحيحها error correction ولن يتم التطرق لها في هذا الدرس.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;بت التوقف &lt;strong&gt;stop bit&lt;/strong&gt; (ومن الممكن أن تتكون من 2 بت) وهي توضح بأن البيانات قد تم نقلها بشكل كامل.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;وبناءً على ذلك يتضح لنا أنه لكل بايت byte من البيانات التي نريد نقلها فإنه يتم أيضًا نقل بعض البتات الإضافية.&lt;/p&gt;

&lt;p&gt;هناك عدة أشكال للرسالة في الـ UART. فمن الممكن أن تكون بتات البيانات 5 أو 6 أو 7 أو 8 بتات. ومن الممكن أن يكون لدينا أيضًا بت التوازن parity bit أو لا. ويمكن أن يكون لدينا إما 1 أو 2 بت توقف.&lt;/p&gt;

&lt;p&gt;ولكننا في هذا الدرس سنستخدم الهيكل الافتراضي default للرسالة وهي:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 بت للبدء&lt;/li&gt;
  &lt;li&gt;8 بتات للبيانات (بايت byte)&lt;/li&gt;
  &lt;li&gt;0 بت للتوازن&lt;/li&gt;
  &lt;li&gt;1 بت للتوقف&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;وبذلك يكون لدينا ما مجموعه 10 بتات لكل بايت byte من البيانات التي نرغب في إرسالها حيث أن 8 بتات مخصصة للبيانات، و 2 بتات إحداهما للبداية والآخر للتوقف.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;

&lt;caption align=&quot;bottom&quot; style=&quot;text-transform: lowercase; font-style: italic; font-size: 0.8em&quot;&gt;source: https://courses.edx.org/courses/course-v1:UTAustinX+UT.6.20x+2T2018&lt;/caption&gt;
&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/frame.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/frame.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; نقل الرسالة Transmiting a Frame&lt;/h2&gt;

&lt;p&gt;كل بايت byte نوّد إرساله يوضع وسط إطار يبدأ ببت البداية start bit وينتهي ببت التوقف stop bit. وهذه العملية تسمى التأطير framing.&lt;/p&gt;

&lt;p&gt;دعونا نرسل الحرف ‘K’ كمثال.&lt;/p&gt;

&lt;p&gt;نجد أنه في جدول الـ ASCII:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.asciitable.com&quot;&gt;https://www.asciitable.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;يتكون هذا الحرف من الرقم الست عشري والرقم الثنائي التالي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'K' = 0x4B = 0100 1011
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبذلك ستكون خطوات الإرسال كالآتي:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;تكون إشارة UART في حالة الخمول idle (عندما لا يكون هناك نقل للبيانات) وتظل عالية (1) عند 3.3 فولت.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;عندما نكون مستعدين لبدء الإرسال، يتم إسقاط خط Tx الى الوضع المنخفض (0) لمدة 1 بت وهذا يعتبر بت البداية start bit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;بعد ذلك يتم وضع بتات البيانات في الرسالة بدءاً من الـ least significant bit أو lsb وهي 1 هنا وإنتهاءاً بالـ most significant bit أو msb وهي 0 في مثالنا.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;بعد ذلك يعود خط Tx الى الحالة العالية 1 وذلك يعني أننا أنتهينا من الرسالة وعدنا الى حالة الخمول idle state.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;هذا يعني أنه سيتم إرسال الرسالة على النحو التالي:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/k.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/k.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يمكنك بعد ذلك البدء في إرسال رسائل أخرى إن أردت كأن يكون لديك عبارة أو كلمة تود إرسالها مثل “Khalid” فبعد إرسال الحرف الأول K ستقوم بالمرور على بقية الحروف وإرسالها بشكل متتالي.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; التواصل بين جهاز الكمبيوتر والمتحكم&lt;/h2&gt;

&lt;p&gt;سوف نجعل المتحكم يتواصل مع الكمبيوتر من خلال الـ UART.  ولعمل ذلك نحن بحاجة الى محول من USB إلى UART والعكس لتحويل البيانات من منفذ USB إلى بيانات UART. هذا المنفذ موجود في البورد ولسنا بحاجة الى إستخدام مكونات إضافية.&lt;/p&gt;

&lt;p&gt;في بورد TI LaunchPad المستخدم، نجد أن منفذ UART0 في المتحكم TM4C123GH6PM متصل بمتحكم آخر وهو متحكم المصحح debugger في أعلى البورد والتي تعمل كجسر بين الـ USB والـ UART. عندما نوصل الـ Tiva LaunchPad بالكمبيوتر عن طريق الـ USB، يكون ذلك من جهة البورد عن طريق UART0 وفي الكمبيوتر يكون هنالك اتصال إفتراضي virtual connection كمنفذ COM أو COM port.&lt;/p&gt;

&lt;p&gt;ويمكن الإطلاع على مخرجات الـ UART على جهاز الكمبيوتر عن طريق برامج مثل Putty و Tera Term وغيرها من البرامج الطرفية terminals. مع الأخذ بالإعتبار الى أن هناك حاجة لضبط إعدادات هذه البرامج لتصبح تماماً مثل تلك التي تم تحديدها في البرنامج على المتحكم.&lt;/p&gt;

&lt;p&gt;إفتح Device Manager وتحت القائمة Ports (COM &amp;amp; LPT) ستجد Stellaris Virtual Serial Port (COMn) علماً أن n هنا من الممكن أن تكون أي رقم وذلك يعتمد على تعيين Windows للمنافذ:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/device_manager.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/device_manager.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;إنقر عليها باليمين ثم إختر Properties. إختر تبويب Port Settings في النافذه الظاهرة وتأكد أن لديك الإعدادات التالية:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/port_settings.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/port_settings.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;إضغط على OK لقفل النافذه.&lt;/p&gt;

&lt;p&gt;حمل برنامج Tera Term من الرايط التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://osdn.net/projects/ttssh2/releases/&quot;&gt;https://osdn.net/projects/ttssh2/releases/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;وبعد تشغيله إختر Serial والـ port الخاص بـ Stellaris Virtual Serial Port:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/teraterm_new_connection.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/teraterm_new_connection.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;إضغط على OK لقفل النافذه.&lt;/p&gt;

&lt;p&gt;من القائمة الرئيسية في البرنامج إختر Setup ومن ثم Serial Port من القائمة المنسدلة:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/teraterm_setup.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/teraterm_setup.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;تأكد أن لديك نفس الإعدادات التالية:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/teraterm_serial_port_setup.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/teraterm_serial_port_setup.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;إضغط على OK ليبدأ البرنامج بالعمل بالإعدادات الجديدة.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تهيئة الـ UART&lt;/h2&gt;

&lt;p&gt;إذا فتحنا صفحة 902 في دليل البيانات، فإنه بإمكاننا العثور على الخطوات المطلوبة لتهيئة الـ UART وهي:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. قم بتمكين وحدة الـ UART باستخدام سجل RCGCUART (راجع صفحة 344).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/RCGCUART.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/RCGCUART.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCUART_R    (*((volatile unsigned long *)0x400FE618))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;يتحكم الحقل R0 (بت 0) في ساعة UART0 التي سنستخدمها. وسيؤدي تعيين القيمة 1 الى هذا الحقل إلى تمكين UART0.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCUART_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x01
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. قم بتمكين ساعة وحدة الـ GPIO المناسبة عبر سجل RCGCGPIO (انظر صفحة 340). لمعرفة أي منفذ GPIO يجب عليك تمكينه، راجع الجدول 5-23 في الصفحة 1351.&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/RCGCGPIO.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/RCGCGPIO.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCGPIO_R    (*((volatile unsigned long *)0x400FE608))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لنذهب لصفحة 1351 لنرى أي منفذ GPIO يجب علينا تفعيله:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/table_23_5.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/table_23_5.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يمكننا أن نرى أن UART0 يستخدم المنفذ  PORT A. الطرف PA0 لتلقي البيانات Rx والطرف PA1 لنقل البيانات Tx. وبالعودة إلى سجل RCGCGPIO، يتضح أنه لتمكين PORT A علينا تعيين 1 إلى الحقل R0 (بت 0)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x01;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3. ﻗﻢ ﺑﻀﺒﻂ بتات GPIOAFSEL ﻟلأطراف ﺍﻟﻤﻨﺎﺳﺒﺔ (ﺍﻧﻈﺮ ﺻﻔﺤﺔ ٦٧١). لتحديد أي GPIO يجب علينا ضبط إعداداته، راجع جدول 4-23 في الصفحة 1344.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;يمكن العثور على تفاصيل سجل GPIOAFSEL في صفحة 671:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/GPIOAFSEL.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/GPIOAFSEL.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وسبق وأن حددنا المنفذ الذي سنتعامل معه وهو PORT A.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define GPIO_PORTA_AFSEL_R    (*((volatile unsigned long *)0x40004420))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لتمكين الوظائف البديلة لـلمنافذ PA0 و PA1، نقوم بإسناد 1 الى بت 0 وبت 1 في حقل AFSEL&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x03
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;إسناد القيمة 1 في سجل AFSEL يقوم بتمكين الوظيفة البديلة للطرف pin. الا أن هذا في حد ذاته لا يكفي حيث أن بعض الأطراف تدعم أكثر من وظيفة بديلة واحدة. وهنا ياتي دور سجل التحكم في المنفذ (PCTL) والذي نقوم فيه بتحديد بالضبط ماهي الوظيفة البديلة التي سيقوم بها المنفذ.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. قم بتهيئة مستوى التيار لـ GPIO و / أو معدل slew كما هو محدد للوضع المختار (راجع صفحة 673 وصفحة 681).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;يمكننا تجاهل هذه الخطوة في الوقت الحالي.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. قم بضبط إعدادات حقول PMCn في سجل GPIOPCTL لتعيين إشارات UART إلى الأطراف المناسبة (انظر صفحة 688 والجدول 5-23 في الصفحة 1351).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/GPIOPCTL.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/GPIOPCTL.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نستخدم السجل register التالي للمنفذ PORT A:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define GPIO_PORTA_PCTL_R    (*((volatile unsigned long *)0x4000452C))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;بمجرد تمكيننا للوظائف البديلة، يتعين علينا عندئذ اختيار الوظيفة البديلة المحددة التي نريدها. في الجدول 5-23 في صفحة 1351 في دليل البيانات يمكننا رؤية أن UART0 يقع في العمود 1:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/uart0.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/uart0.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;هذا يعني أنه يجب أن نضع 1 في بت PMCn. لذلك نذهب إلى سجل GPIOPCTL (ص 689) والذي يحتوي على بت PMCn. ويمثل PMC0 (البتات 0-3) الطرف PA0 لذلك علينا أن نضع 1 فيها. ويمثل PMC1 (بت 4-7) الطرف PA1 وعلينا أيضا أن نضع 1 فيه أيضاً.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبما أنها إشارات رقمية فإنه يجب علينا تمكين الوظائف الرقمية للأطراف:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define GPIO_PORTA_DEN_R    (*((volatile unsigned long *)0x4000451C))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وهذا يكون كالتالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_DEN_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x03; // enable digital I/O on PA1-0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; ضبط إعدادات الـ UART&lt;/h2&gt;

&lt;p&gt;الإعدادات التي سنضبط الـ UART عليها هي كما يلي:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;تردد الساعة 16 ميجاهرتز&lt;/li&gt;
  &lt;li&gt;معدل نقل البيانات baud rate تساوي 9600 بت/ثانية&lt;/li&gt;
  &lt;li&gt;حجم البيانات data bits المنقولة 8 بت&lt;/li&gt;
  &lt;li&gt;بت توقف stop bit واحد&lt;/li&gt;
  &lt;li&gt;لا يوجد بت توازن parity bit&lt;/li&gt;
  &lt;li&gt;تم تمكين الـ FIFO&lt;/li&gt;
  &lt;li&gt;لن نستخدم المقاطعات interrupts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;أول شيء يجب مراعاته عند برمجة الـ UART هو إيجاد مقسوم معدل نقل البيانات baud-rate divisor (BRD). باستخدام المعادلة الموضحة في “Baud-Rate Generation” في صفحة 896، يمكن حساب BRD باستخدام المعادلة التالية:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Baud Rate = SysClk / (16 × ClkDiv)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;حيث أن:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;SysCLK&lt;/em&gt; هي تردد ساعة النظام المستخدمة والمتصلة بـالـ UART و&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;ClkDiv&lt;/em&gt; هي سرعة نقل البيانات المختارة&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;وبالتالي يكون لدينا:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;BRD = 16,000,000 / (16 * 9600) = 104.1666666666667
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وسيتم إحتساب الكسر كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UARTFBRD[DIVFRAC] = integer(0.1666666666667 * 64 + 0.5) = 11
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبعد أن حصلنا على قيمة BRD، نضبط إعدادات الـ UART بالترتيب التالي:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. قم بتعطيل UART عن طريق مسح (إسناد 0) الحقل UARTEN (بت 0) في سجل UARTCTL (ص 918).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/UARTCTL.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/UARTCTL.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define UART0_CTL_R   (*((volatile unsigned long *)0x4000C030))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;UART0_CTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ~(0x00000001);
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. اكتب العدد الصحيح من الـ BRD إلى سجل UARTIBRD (ص 914).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/UARTIBRD.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/UARTIBRD.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define UART0_IBRD_R   (*((volatile unsigned long *)0x4000C024))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;UART0_IBRD_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;104&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3. اكتب الكسر من الـ BRD إلى سجل UARTFBRD (ص 915).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/UARTFBRD.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/UARTFBRD.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define UART0_FBRD_R   (*((volatile unsigned long *)0x4000C028))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;يتكون سجل UARTIBRD من 32 بت، نستخدم منها أول 16 بت. وبالنسبة للسجل UARTFBRD فيتم استخدام أول 6 بتات فقط. وهذا يعطينا ما مجموعه 22 بت (16 بت للعدد الصحيح + 6 بت للكسر).&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;UART0_FBRD_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4. اكتب قيم الإعدادات المطلوبة للـ UART في سجل UARTLCRH (ص 916).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;هذا هو السجل الذي نستخدمه لضبط عدد البتات لكل حرف يتم إرساله (طول البيانات data bits) وعدد بتات التوقف stop bits الإضافة الى إعدادت أخرى.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/UARTLCRH.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/UARTLCRH.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define UART0_LCRH_R   (*((volatile unsigned long *)0x4000C02C))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نريد هنا إسناد القيمة 0x3 الى الحقل WLEN (بت 5-6) حيث أن عدد بتات البيانات data bits التي سنرسلها هو 8 بت.&lt;/p&gt;

&lt;p&gt;تحتوي وحدة الـ UART  في TI Tiva على مخزن مؤقت FIFO داخلي بحجم 16 بايت لتخزين البيانات المعدة للإرسال. ويوجد أيضاً مخزن FIFO آخر بحجم 16 بايت أيضاً لحفظ البايتات bytes المتلقاة. ومن خلال إسناد 1 الى الحقل FEN (بت 4) سنقوم بتمكين الـ FIFO والذي يمكننا من كتابة ما يصل إلى 16 بايت للـ UART وستقوم من ذاتها بإرسال بايت تلو الآخر الى أن تصبح الـ FIFO فاضية. كما أن الـ FIFO للبيانات المتلقاه تمكن الـ UART من استقبال 16 بايت بينما يقوم برنامجنا بالتعامل مع الواحدة تلو الأخرى.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;UART0_LCRH_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5. قم بإعداد مصدر ساعة الـ UART بالكتابة إلى سجل UARTCC (ص 939).&lt;/strong&gt;&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/UARTCC.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/UARTCC.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define UART0_CC_R   (*((volatile unsigned long *)0x4000CFC8))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;في حقل CS (بت 0-3) نحدد مصدر ساعة الـ UART. حيث نقوم بإسناد القيمة 0x0 الى الحقل لإختيار ساعة النظام System Clock.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;UART0_CC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;6. هذه الخطوة إختيارية، قم بإعداد قناة MicroDMA (راجع “Micro Direct Memory Access (MicroDMA)” في صفحة 585) وقم بتمكين خيارات الـ DMA في سجل UARTDMACTL.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;سنتجاهل هذه الخطوة.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. قم بتمكين الـ UART عن طريق إسناد 1 الى حقل UARTEN (بت 0) في سجل UARTCTL (ص 918).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;يمكن العثور على تفاصيل هذا السجل في الخطوة الأولى.&lt;/p&gt;

&lt;p&gt;سنقوم بإسناد 1 الى حقل UARTEN (بت 0) لتمكين الـ UART. وسنقوم أيضًا بإسناد 1 الى حقل TXE (بت 8) وحقل RXE (بت 9) لتمكين UART من الإرسال والإستقبال&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;UART0_CTL_R  = (1&amp;lt;&amp;lt;0)|(1&amp;lt;&amp;lt;8)|(1&amp;lt;&amp;lt;9);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; إرسال البيانات&lt;/h2&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;

&lt;caption align=&quot;bottom&quot; style=&quot;text-transform: lowercase; font-style: italic; font-size: 0.8em&quot;&gt;source: http://users.ece.utexas.edu/~valvano/Volume1/E-Book/C11_Interactives.htm&lt;/caption&gt;
&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/tx.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/tx.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;لإرسال بايت byte من البيانات فإنه يجب وضعه في سجل البيانات UARTDR. وعلى الرغم من أنه سجل من 32 بت، الا إنه سيتم استخدام أول 8 بت فقط (بت 0-7).&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/UARTDR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/UARTDR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define UART0_DR_R   (*((volatile unsigned long *)0x4000C000))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ولكن، قبل ذلك فإننا نقوم بمراقبة الحقل TXFF (بت 5) في السجل UARTFR:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/UARTFR.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/UARTFR.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define UART0_FR_R   (*((volatile unsigned long *)0x4000C018))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ويكون ذلك قبل الكتابة الى UARTDR وطالما كانت قيمة TXFF تساوي 1 فهذا يعني أن الـ FIFO ممتلئ ولا يمكنه قبول أي بيانات أخرى وأنه يجب علينا أن نتنتظر. وعندما تصبح القيمة 0 فهذا يعني أن المخزن المؤقت للإرسال FIFO غير ممتلئ وبإمكاننا الكتابة اليه ونقوم عندئذ بكتابة بايت إلى السجل UARTDR والذي سيضعها في الـ FIFO ليتم إرسالها.&lt;/p&gt;

&lt;p&gt;بعد الكتابة الى سجل البيانات UARTDR، يتم تمرير هذه البتات الثمانية إلى الـ  FIFO وهو عبارة عن مخزن مؤقت للرسائل مكون من 16 عنصر يمكن البرنامج من كتابة العديد من البيانات اليها ليتم إرسالها الواحدة تلو الأخرى فيما بعد.&lt;/p&gt;

&lt;p&gt;بعد ذلك يتم تحميل العناصر الموجودة في الـ FIFO إلى shift register من 10 بتات متصل بطرف الإرسال Tx. وعندما يحين وقت الإرسال سيتم إرسال البتات كما يلي:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/message.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/message.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وبذلك يكون الكود:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UART0_FR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      	
&lt;span class=&quot;n&quot;&gt;UART0_DR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'K'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; إستقبال البيانات&lt;/h2&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;

&lt;caption align=&quot;bottom&quot; style=&quot;text-transform: lowercase; font-style: italic; font-size: 0.8em&quot;&gt;source: http://users.ece.utexas.edu/~valvano/Volume1/E-Book/C11_Interactives.htm&lt;/caption&gt;
&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_11/rx.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_11/rx.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;بالنسبة للإستقبال فإن العملية ستحدث بالعكس. سيستقبل الـ shift register المتصل بخط الإستقبال Rx الرسالة وسيضعها لك في الـ FIFO لتتمكن من قرائتها عن طريق السجل UARTDR.&lt;/p&gt;

&lt;p&gt;ولكن، وقبل قراءة السجل UARTDR فإنه يجب علينا التأكد من أن الـ FIFO ليس فارغاً بل يحمل بيانات لنا لقرائتها. وعلى ذلك، سنقوم بالتحقق من قيمة الحقل RXFE  (بت 4) في السجل UARTFR. فطالما كانت القيمة المعادة هي 1 فهذا يعني أنه لا توجد رسائل مستقبلة وسيدخل البرنامج في عملية انتظار دائم busy wait الى أن تصبح القيمة 0. وعندما تصبح القيمة المعادة 0، فهذا يعني أن هناك على الأقل بعض البيانات البيانات التى بإمكاننا قرائتها.&lt;/p&gt;

&lt;p&gt;البتات الـ 8 الأولى (بت 0-7) في UARTDR ستحتوي على البايت المستقبل. وتستخدم 4 بتات إضافية أخرى من 8 الى 11 للكشف عن الأخطاء. ويوجد سجلان آخران وهما UARTRSR و UARTRCR يمكن إستخدامها للتأكد من مصدر المشكلة.&lt;/p&gt;

&lt;p&gt;وفيما يلي الكود المستخدم لإستقبال الرسائل من الـ UART:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UART1_FR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     
&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UART0_DR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;يوجد شرح تفاعلي رائع يوضح عملية الإرسال والإستقبال في الـ UART على الرابط التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://users.ece.utexas.edu/~valvano/Volume1/E-Book/C11_Interactives.htm#ITool11.4&quot;&gt;http://users.ece.utexas.edu/~valvano/Volume1/E-Book/C11_Interactives.htm#ITool11.4&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; البرنامج&lt;/h2&gt;

&lt;p&gt;البرنامج التالي يقوم ببساطة بتمكبن المستخدم من إرسال حرف يدخله عن طريق برنامج Tera Term وسيتم إرساله الى المتحكم عن طريق UART0 ومن ثم إعادة إرساله أيضاً عن طريق UART0 الى جهاز الكمبيوتر ليتم طباعته.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;لا تنسى بعد كتابة البرنامج الى المتحكم الضغط عل زر Reset على البورد ليبدأ البرنامج بالتنفيذ.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCUART_R     (*((volatile unsigned long *)0x400FE618))
#define SYSCTL_RCGCGPIO_R     (*((volatile unsigned long *)0x400FE608))
#define GPIO_PORTA_AFSEL_R    (*((volatile unsigned long *)0x40004420))
#define GPIO_PORTA_PCTL_R     (*((volatile unsigned long *)0x4000452C))
#define GPIO_PORTA_DEN_R      (*((volatile unsigned long *)0x4000451C))
#define UART0_CTL_R           (*((volatile unsigned long *)0x4000C030))
#define UART0_IBRD_R          (*((volatile unsigned long *)0x4000C024))
#define UART0_FBRD_R          (*((volatile unsigned long *)0x4000C028))
#define UART0_LCRH_R          (*((volatile unsigned long *)0x4000C02C))
#define UART0_CC_R            (*((volatile unsigned long *)0x4000CFC8))
#define UART0_DR_R            (*((volatile unsigned long *)0x4000C000))
#define UART0_FR_R            (*((volatile unsigned long *)0x4000C018))
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_in_char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_out_char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_out_string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;uart0_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_in_char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* receive char */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;uart0_out_char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;cm&quot;&gt;/* echo received char */&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Call only once
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// -------------------------------- //
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 	Initialize the UART module  //
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// -------------------------------- //
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// 1. Enable the UART module using the RCGCUART register (see page 344).
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCUART_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x01 // enable UART 0
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// 2. Enable the clock to the appropriate GPIO module via the RCGCGPIO register (see page 340).
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// To find out which GPIO port to enable, refer to Table 23-5 on page 1351.	
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x01 // enable PORT A
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// 3. Set the GPIO AFSEL bits for the appropriate pins (see page 671). To determine which GPIOs to
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// configure, see Table 23-4 on page 1344.
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_AFSEL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x03 // enable alternate functions on PA1-0
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// 4. Configure the GPIO current level and/or slew rate as specified for the mode selected (see
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// page 673 and page 681).
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// No need to worry about this for now
&lt;/span&gt;		
	&lt;span class=&quot;c1&quot;&gt;// 5. Configure the PMCn fields in the GPIOPCTL register to assign the UART signals to the appropriate
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// pins (see page 688 and Table 23-5 on page 1351).
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_PCTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x11 // configure PA1-0 as UART0	
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;GPIO_PORTA_DEN_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0x03 // enable digital I/O on PA1-0
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// ------------------------------- //
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// 	Configure the UART module  //
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// ------------------------------- //
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// Find the Baud-Rate Divisor (BRD)
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// Formulas may be found in P903
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// BRD = 16,000,000 / (16*9600) = 104.1666666666667
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// UARTFBRD[DIVFRAC] = integer(0.166667 * 64 + 0.5) = 11
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// With the BRD values in hand, the UART configuration is written to the module in the following order:
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// 1. Disable the UART by clearing the UARTEN bit in the UARTCTL register.
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;UART0_CTL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ~(0x00000001); // disable UART0
&lt;/span&gt;	
	&lt;span class=&quot;c1&quot;&gt;// 2. Write the integer portion of the BRD to the UARTIBRD register.
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;UART0_IBRD_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;104&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;// 3. Write the fractional portion of the BRD to the UARTFBRD register.
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;UART0_FBRD_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;// 4. Write the desired serial parameters to the UARTLCRH register 
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;UART0_LCRH_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 8 bit data, no parity bits, 1 stop bit, FIFOs
&lt;/span&gt;	  
	&lt;span class=&quot;c1&quot;&gt;// 5. Configure the UART clock source by writing to the UARTCC register.
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;UART0_CC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;// 6. Optionally, configure the µDMA channel (see “Micro Direct Memory Access (µDMA)” on page 585)
&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//    and enable the DMA option(s) in the UARTDMACTL register.
&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 7. Enable the UART by setting the UARTEN bit in the UARTCTL register.
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;UART0_CTL_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//(bit 0: enable uart) (bit 8: enable Tx) (bit 9: enable Rx)
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Wait for new input, then return ASCII code
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_in_char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// wait until RXFE is 0 (buffer not empty)
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UART0_FR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     
	&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UART0_DR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_out_char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// wait until TXFF is 0 (buffer not full)
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UART0_FR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;      	
	&lt;span class=&quot;n&quot;&gt;UART0_DR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uart0_out_string&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;uart0_out_char&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 06 Jul 2018 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2018/07/06/uart.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/06/uart.html</guid>
        
        
      </item>
    
      <item>
        <title>10. Phased Lock Loop - PLL</title>
        <description>&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; مصادر الساعة&lt;/h2&gt;

&lt;p&gt;توفر ساعة المتحكم النبضات اللازمة للحفاظ على تشغيل التطبيقات بطريقة متزامنة. وبالعودة الى دليل البيانات data sheet ص 222:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_10/main_clock_tree.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_10/main_clock_tree.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;بإمكاننا أن نرى عدة مصادر للساعة ويوجد لدينا أشكال تشبه متوازي الأضلاع عبارة عن محددات أو مقسمات تحدد بعض الخصائص عن طريق التحكم في بعض البتات bits في سجلات registers معينه.&lt;/p&gt;

&lt;p&gt;بإمكان نظام الساعة أن يستخدم أحد المصادر التالية:&lt;/p&gt;

&lt;h4&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;1. Percision Internal Oscillator - PIOSC&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;مصدر للساعة متضمن في المتحكم ويعتبر المصدر الرئيسي لساعة المتحكم بعد توصيله بالطاقة&lt;/li&gt;
  &lt;li&gt;يبلغ تردده 16 ميجاهيرتز بدقة 1%&lt;/li&gt;
  &lt;li&gt;بإمكانه تفعيل الـ PLL الداخلي بتردد 400 ميجاهيرتز&lt;/li&gt;
  &lt;li&gt;بالإمكان إستخدامه كمؤقت للطرفيات (مثل ADC)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;2. Main Oscillator - MOSC&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;المصدر الخارجي الرئيسي للساعة&lt;/li&gt;
  &lt;li&gt;بإمكانه تفعيل الـ PLL الداخلي بتردد 400 ميجاهيرتز&lt;/li&gt;
  &lt;li&gt;يوجد على البورد كرستالة بتردد 16 ميجاهيرتز مرتبطة بالمذبذب الرئيسي main oscillator&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;3. Low Frequency Internal Oscillator - LFIOSC&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;غير دقيق حيث يبلغ تردده 30 كيلوهيرتز بدقة 50%&lt;/li&gt;
  &lt;li&gt;مخصص للإستخدام في حالة النوم العميق deep sleep لتوفير الطاقة&lt;/li&gt;
  &lt;li&gt;يمكن أستخدامه في حالة إيقاف كلاً من PIOSC أو MOSC أو أحدهما&lt;/li&gt;
  &lt;li&gt;غير مناسب للعمليات التي تحتاج الى دقة في التوقيت&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;4. Hibernation Module Clock Source&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;تسخدم كرستالة خارجية يبلغ ترددها 32.768 كيلوهيرتز&lt;/li&gt;
  &lt;li&gt;بإمكانها تزويد المتحكم بتوقيت دقيق في وضعية النوم العميق (لتوفير الطاقة)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;مع ملاحظة أنه يجب عدم تعطيل PIOSC إلا إذا لزم الأمر، وذلك لأنه إذا تم استخدام MOSC وفشل لسبب ما، فإن PIOSC ستتولى دور توفير إشارة للساعة.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; Phased Lock Loop - PLL&lt;/h2&gt;

&lt;h3&gt;تردد الكرستالة المستخدمة في البورد هي 16 ميجاهيرتز، ولكن بإمكان المتحكم أن يصل الى تردد 80 ميجاهيرتز كيف يكون ذلك؟&lt;/h3&gt;

&lt;p&gt;ما يحدد سرعة تنفيذ المتحكم هو الكرستالة الخارجية المستخدمة والتي تبلغ في هذه البورد 16 ميجاهيرتز. لكن يوجد لدينا ما يسمى بالـ Phased Lock Loop - PLL  والتي تسمح للبرنامج بضبط سرعة الساعة وجعلها تعمل بترددات أعلى أو أقل من تردد الكرستالة. عادةً ما يتضمن اختيار التردد المفاضلة بين سرعة تنفيذ البرامج والطاقة الكهربائية المستخدمة. أي أن إبطاء الساعة يجعل من المتحكم يستهلك طاقة أقل. وتسريع الساعة يسمح بتنفيذ المزيد من العلميات في الثانية، ولكن ذلك يتطلب المزيد من الطاقة.&lt;/p&gt;

&lt;p&gt;يبلغ تردد المذبذب الداخلي internal oscillator سرعة 16 ميجاهيرتز ودقة 1٪. وهو أقل دقة بكثير من الكرستالة، ولكنه يتطلب طاقة أقل ولا يحتاج إلى كرستالة خارجية. ولكن إذا كنا نرغب في التحكم الدقيق بالوقت، سنقوم بتنشيط الكرستالة الخارجية (تسمى المذبذب الرئيسي main oscillator) واستخدام PLL لتحديد السرعة المطلوبة.&lt;/p&gt;

&lt;p&gt;من دون تفعيل الـ PLL، فإن المتحكم سيعمل بتردد 16 ميجاهيرتز، مما يعني أن عداد SysTick سينقص كل 62.5 نانوثانية وإذا قمنا بتنشيط الـ PLL لتشغيل المتحكم بسرعة 80 ميجا هرتز، فإن عداد SysTick سينقص كل 12.5 نانوثانية.&lt;/p&gt;

&lt;p&gt;وتتراوح ترددات الـ PLL الداخلي internal PLL (على خلاف الـ USB PLL) من 3.125 ميجاهرتز إلى 80 ميجاهرتز. ويأتي المتحكم المستخدم مع PLL داخلي بتردد 400 ميجاهرتز ويقبل أي كرستالة من 5 إلى 25 ميجاهرتز. ويمكن للمذبذبات التالية أن تكون مصدراً للـ PLL:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;المذبذب الداخلي الدقيق (PIOSC)&lt;/li&gt;
  &lt;li&gt;المذبذب الرئيسي (MOSC)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; السجلات&lt;/h2&gt;

&lt;h4&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;1. &lt;a href=&quot;&quot;&gt;&lt;/a&gt; Run-Mode Clock Configuration - RCC&lt;/h4&gt;
&lt;p&gt;توفر عناصر التحكم بساعة النظام.&lt;/p&gt;

&lt;p&gt;تفصيل هذا السجل في دليل البيانات data sheet ص 254:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_10/rcc.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_10/rcc.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCC_R	(*((volatile unsigned long *)0x400FE060))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وما يهمنا في هذا السجل هو الحقل التالي:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;XTAL&lt;/strong&gt; (من البت 6 الى 10)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;نحدد في هذا الحقل قيمة تردد الكرستالة المرفقة بالمذبذب الرئيسي للبورد حسب الجدول أدناه:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_10/xtal.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_10/xtal.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h4&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;2. &lt;a href=&quot;&quot;&gt;&lt;/a&gt; Run-Mode Clock Configuration 2 - RCC2&lt;/h4&gt;
&lt;p&gt;توفر عناصر التحكم بساعة النظام. يستخدم سجل RCC2 لتوفير خصائص تحكم إضافية عن تلك الموجودة في سجل RCC.&lt;/p&gt;

&lt;p&gt;تفصيل هذا السجل في دليل البيانات data sheet ص 260:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_10/rcc2.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_10/rcc2.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCC2_R	(*((volatile unsigned long *)0x400FE070))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وما يهمنا في هذا السجل هو الحقول التالية:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;USERCC2&lt;/strong&gt; (البت 31)
يتم إسناد القيمة 1 الى هذا الحقل لإستخدام RCC2 وجعل قيمها تتجاوز القيم الموجودة في RCC.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;BYPASS2&lt;/strong&gt; (البت 11)
عند إسناد 0 الى هذا الحقل يتم استخدام الـ PLL وعند إسناد 1 اليه فإنه سيتم استخدام مصدر آخر للساعة.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;OSCSRC2&lt;/strong&gt; (من البت 4 الى 6)
يحدد مصدر الساعة. ومن خلال ضبط قيمة الحقل الى 0 فإنه سيتم تعيين المذبذب الرئيسي main oscillator كمصدر للساعة.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;PWRDN2&lt;/strong&gt; (البت 13)
يتم إسناد 0 الى هذا الحقل ليعمل الـ PLL بشكل طبيعي.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;DIV400&lt;/strong&gt; (البت 30)
عند إسناد 0 الى هذا الحقل يتم التعامل مع الـ PLL بتردد 200 ميجاهيرتز
وعند إسناد 1 الى هذا الحقل يتم التعامل مع الـ PLL بتردد 400 ميجاهيرتز&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;SYSDIV2&lt;/strong&gt; (من البت 23 الى 28)
يمكن أن يأخذ هذا الحقل قيمة بين 4 و 127 حيث يمكن إستبدالها في المعادلة التالية لتعديل سرعة المتحكم:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_10/bus_freq.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_10/bus_freq.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;إذا كانت SISDIV2 تساوي 4 فإن السرعة ستكون 400 مقسومة على 4 + 1 وبذلك يكون الناتج 80 ميجاهيرتز. وإذا أردنا تشغيل المتحكم بسرعة أبطأ فكل ما علينا فعله هو زيادة قيمة SISDIV2.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;SYSDIV2LSB&lt;/strong&gt; (البت 22)
يعتبر بت إضافي least significant bit في حالة تم إسناد 1 الى DIV400.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;3. &lt;a href=&quot;&quot;&gt;&lt;/a&gt; Raw Interrupt Status - RIS&lt;/h4&gt;

&lt;p&gt;تفصيل هذا السجل في دليل البيانات data sheet ص 244:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_10/ris.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_10/ris.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RIS_R	(*((volatile unsigned long *)0x400FE050))
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وما يهمنا في هذا السجل هو الحقل التالي:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;PLLLRIS&lt;/strong&gt; (البت 6)
سوف نراقب هذا الحقل (الى أن يصبح قيمته 1) حتى نتأكد من إستقرار وإنتظام الـ PLL&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; تفعيل الـ PLL&lt;/h2&gt;

&lt;p&gt;فيما يلي الخطوات المطلوبة لتفعيل البورد مع مذبذب رئيسي بتردد 16 ميجاهيرتز لتشغيل المتحكم بسرعة 80 ميجاهيرتز.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. استخدم RCC2 لأنه يوفر المزيد من الخيارات على RCC ويكون ذلك عن طريق إسناد 1 الى حقل USERCC2 (بت 31) في RCC2&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0x80000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1000 0000 0000 0000 0000 0000 0000 0000  
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;2. تجاوز مقسم ساعة PLL وساعة النظام عن طريق إسناد 1 الى حقل BYPASS2 (بت 11) في RCC2. عند هذه النقطة يتم تجاوز PLL ولا يوجد مقسم ساعة نظام.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0x00000800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0000 0000 0000 0000 0000 1000 0000 0000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;3. تحديد تردد الكرستالة في حقل XTAL في RCC باستخدام القيّم في جدول XTAL السابق.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;بما أن الكرستالة التي على البورد تستخدم مذبذب بتردد 16 ميجاهيرتز فإننا، وحسب الجدول السابق، نقوم بضبط حقل XTAL ليحمل القيمة 0x15 أي 10101. ولو كانت الكرستالة بتردد مختلف، 24 ميجاهيرتز مثلاً، فسنضع القيمة 0x19 أي 11001 في حقل XTAL.&lt;/p&gt;

&lt;p&gt;بما أن هذا الحقل يقع من البت 6 الى 10، فإن الرقم الست عشري hex الذي يفعّل جميع بتات هذا الحقل هو:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x000007C0 = 0000 0000 0000 0000 0000 0111 1100 0000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;ولمسح القيمة الموجودة داخل هذا الحقل فإننا نعكس هذا الرقم:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~(0x000007C0) = 1111 1111 1111 1111 1111 1000 0011 1111
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وتصبح العملية بلغة الـ C كما يلي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x000007C0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ولإسناد القيمة 0x15 أي 10101 والتي تمثل قيمة تردد الكرستالة 16 ميجاهيرتز فإنه يجب علينا أن نضع هذه القيمة في حقل XTAL والذي يقع بين البتات 6-10 من السجل RCC. ولذلك نستخدم العدد الست عشري التالي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x00000540 = 0000 0000 0000 0000 0000 0000 0000 0101 0100 0000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبإسناده الى SYSCTL_RCC_R يصبح لدينا:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000540&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;4. يتم إسناد 0 الى حقل OSCSRC2 (بت 4-6) في RCC2 لتحديد المذبذب الرئيسي main oscillator كمصدر مذبذب للساعة.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000070&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1111 1111 1111 1111 1111 1111 1000 1111
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5. مسح PWRDN2 (بت 13) في RCC2 لتنشيط الـ PLL وتفعيله.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00002000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1111 1111 1111 1111 1101 1111 1111 1111
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;6. إختيار الـ 400MHz PLL بدلاً من الـ 200MHz PLL عن طريق إسناد 1 الى حقل DIV400 (بت 30) في RCC2.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0100 0000 0000 0000 0000 0000 0000 0000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;7. تمكين مقسم الساعة باستخدام حقلي SYSDIV2 و SYSDIV2LSB (بت 22 الى 28) في RCC2.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;كما ذكرنا سابقاً، فإنه يتم الإستفادة من حقل SYSDIV2LSB كـ least significant bit لأننا أسندنا 1 الى DIV400.&lt;/p&gt;

&lt;p&gt;نقوم أولاً بحذف القيمة الموجودة سابقاً في  SYSDIV2 و SYSDIV2LSB (بت 22 الى 28) في RCC2:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1FC00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1110 0000 0011 1111 1111 1111 1111 1111
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ثانياً، للحصول على تردد 80 ميجاهيرتز نحتاج إلى القسمة على 5. لذا، نقوم بوضع 4 في حقل SYSDIV2 و SYSDIV2LSB:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0000 0001 0000 0000 0000 0000 0000 0000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;8. بعد ذلك، ننتظر حتى يستقر وينتظم الـ PLL ﺑﻮاﺳﻄﺔ مراقبة PLLRIS (ﺒﺖ 6) ﻓﻲ RIS الى أن ﺗﺼﺒﺢ قيمتها 1.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//    0x00000040 = 0000 0000 0000 0000 0000 0000 0100 0000
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RIS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000040&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;9. الخطوة الأخيرة هي تمكين الـ PLL عن طريق مسح بت BYPASS2 (بت 11) في RCC2.&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1111 1111 1111 1111 1111 0111 1111 1111
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; الكود&lt;/h2&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RIS_R      (*((volatile unsigned long *)0x400FE050))
#define SYSCTL_RCC_R      (*((volatile unsigned long *)0x400FE060))
#define SYSCTL_RCC2_R     (*((volatile unsigned long *)0x400FE070))
&lt;/span&gt;  
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1) Use RCC2 for advanced features
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    Set USERCC2 (bit 31) in RCC2
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    0x80000000 = 1000 0000 0000 0000 0000 0000 0000 0000
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0x80000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 2) Bypass PLL while initializing
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    Set BYPASS2 (bit 11) in RCC2
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    0x00000800 = 0000 0000 0000 0000 0000 1000 0000 0000
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0x00000800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 3) Select the crystal value and oscillator source
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 3.a) Clear XTAL (bits 10-6) in RCC
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//       0x000007C0 = 0000 0000 0000 0000 0000 0111 1100 0000
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//      ~0x000007C0 = 1111 1111 1111 1111 1111 1000 0011 1111
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x000007C0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 3.b) Set XTAL (bits 10-6) in RCC to 0x15 (10101) for 16 MHz crystal
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//      0x00000540 = 0000 0000 0000 0000 0000 0101 0100 0000
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000540&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 4) Configure for main oscillator source
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    Set OSCSRC2 (bits 6-4) in RCC2 to 0 to select main oscillator
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//     0x00000070 = 0000 0000 0000 0000 0000 0000 0111 0000
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    ~0x00000070 = 1111 1111 1111 1111 1111 1111 1000 1111
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000070&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 5) Activate PLL by clearing PWRDN2 (bit 13) in RCC2
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//     0x00002000 = 0000 0000 0000 0000 0010 0000 0000 0000
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    ~0x00002000 = 1111 1111 1111 1111 1101 1111 1111 1111
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00002000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// 6) Use 400 MHz PLL instead of 200 MHz PLL
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    Set DIV400 (bit 30) in RCC2 to 1
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    0x40000000 = 0100 0000 0000 0000 0000 0000 0000 0000
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x40000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   
  
  &lt;span class=&quot;c1&quot;&gt;// 7) Set the desired system divider and the system divider least significant bit
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 7.a) Clear system clock divider and the system divider least significant bit
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//      Set SYSDIV2 (bits 28-23) in RCC2 to 0
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//      Set SYSDIV2LSB (bit 22) in RCC2 to 0
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//       0x1FC00000 = 0001 1111 1100 0000 0000 0000 0000 0000
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//      ~0x1FC00000 = 1110 0000 0011 1111 1111 1111 1111 1111
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1FC00000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 7.b) Configure for 80 MHz clock
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//      Set SYSDIV2 + SYSDIV2LSB (bits 28-22) in RCC2 to 4
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//      4&amp;lt;&amp;lt;22 = 0000 0001 0000 0000 0000 0000 0000 0000
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                                    
  &lt;span class=&quot;c1&quot;&gt;// 8) Wait for the PLL to lock by polling PLLLRIS (bit 6) in RIS
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    0x00000040 = 0000 0000 0000 0000 0000 0000 0100 0000
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SYSCTL_RIS_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00000040&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){};&lt;/span&gt;
    
  &lt;span class=&quot;c1&quot;&gt;// 9) Enable use of PLL by clearing BYPASS2 (bit 11) in RCC2
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//    ~0x00000800 = 1111 1111 1111 1111 1111 0111 1111 1111
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCC2_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00000800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h3&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt; المراجع&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;http://embedded-lab.com/blog/tiva-c-clock-system&lt;/li&gt;
  &lt;li&gt;http://shukra.cedt.iisc.ernet.in/edwiki/EmSys:TM4C123_Using_PLL&lt;/li&gt;
  &lt;li&gt;https://courses.edx.org/courses/course-v1:UTAustinX+UT.6.10x+2T2018&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 20 Jun 2018 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2018/06/20/pll.html</link>
        <guid isPermaLink="true">http://localhost:4000/2018/06/20/pll.html</guid>
        
        
      </item>
    
      <item>
        <title>9. مؤقت النظام  SysTick Timer</title>
        <description>&lt;p&gt;يساعدنا مؤقت النظام SystTick في حساب الوقت والتعامل مع بعض الإجراءات التي تحتاج الى الوقت للتحكم بها ولتنفيذ بعض الوظائف كلما مرت فتره معينة محددة مسبقاً. وبالإمكان إستخدام هذا المؤقت لو كان لديك نظام تشغيل مثلاً يتنقل في التنفيذ بين أكثر من thread. وسيناريو آخر لإستخدامها هو لحساب الزمن ولقياس المدة التي يستغرقها الكود في التنفيذ.&lt;/p&gt;

&lt;p&gt;يوجد في المتحكم مؤقتات أخرى غير الـ SysTick بعضها يدعم 32 بت وأخرى 64 بت. وبالرغم أن SysTick الأقل دقة بينهم حيث أنه لا يدعم سوى 24 بت إلا أنه الأسهل في التعامل بالإضافة الى أنه المؤقت الوحيد المعتمد في ARM Cortex-M وبذلك فلو أردت تغير المتحكم هذا واستخدام متحكم آخر من نفس العائلة فإنك لن تحتاج الى تغييره بينما المؤقتات الأخرى خاصة بكل نوع متحكم على حده.&lt;/p&gt;

&lt;p&gt;ويتكون هذا المؤقت من 24 بت (أي أن أقصى رقم يمكن إسناده اليه هو 0xFFFFFF) تتناقص مع كل clock tick الى أن تصل الى 0 ومن ثم يعاد العد مرة أخرى.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;السجلات المتعلقة بهذا المؤقت&lt;/h1&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_09/systick_registers.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_09/systick_registers.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يتكون المؤقت من 3 سجلات:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;STCTRL&lt;/strong&gt; أو SysTick Control and Status وتستخدم لتهيئة المؤقت ولتفعيله والتحكم به.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;STRELOAD&lt;/strong&gt; أو SysTick Reload Value ويسند اليه القيمة التي يبدأ العداد بالتناقص منها.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;STCURRENT&lt;/strong&gt; أو SysTick Current Value وتحتوي على القيمة الحالية للعداد.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;1. السجل STCTRL&lt;/h2&gt;

&lt;p&gt;تفصيل هذا السجل في دليل البيانات data sheet ص 138:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_09/stctrl.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_09/stctrl.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وما يهمنا في هذا السجل البتات bits التالية:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;bit 0&lt;/strong&gt; وهي الـ Enable والتي تقوم بتفعيل عمل المؤقت&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;bit 1&lt;/strong&gt; وهي الـ Interrupt Enable والتي تفعّل المقاطعات interrupts (المزيد عنها لاحقاً بإذن الله)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;bit 2&lt;/strong&gt; وهي الـ Clock Selection وفي العادة نختار الساعة القياسية هنا&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;bit 16&lt;/strong&gt; وهي الـ  Count Flag وتكون 1 كلما تناقص العداد ووصل للصفر ثم عاد للعدد من جديد&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;2. السجل STRELOAD&lt;/h2&gt;

&lt;p&gt;في دليل البيانات ص 140 نجد تفاصيل السجل:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_09/streload.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_09/streload.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نستخدم أول 24 بت فقط (من بت 0 الى 23) من هذا السجل لكتابة قيمة العدد الذي نرغب من المؤقت أن يبدأ بالتناقص منه.&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;3. السجل STCURRENT&lt;/h2&gt;

&lt;p&gt;في دليل البيانات ص 141 نجد:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_09/stcurrent.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_09/stcurrent.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;يحتوي هذا السجل على القيمة الحالية للعداد. ومثل السجل السابق، نستخدم أول 24 بت فقط من هذا السجل أي أن قيمة العداد لا يمكن أن تزيد عن 0xFFFFFF. العداد تنازلي أي أنه يعد من العدد الأصلي الذي تم إسناده اليه ويتناقص بمقدار 1 الى أن يصل 0 بمقدار سرعة الساعة المختارة. بعد ذلك يسند 1 الى بت 16 في سجل الـ STCTRL ثم يأخذ القيمة الموجودة في سجل الـ STRELOAD مرة أخرى وينسخها الى سجل الـ STCURRENT.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;تهيئة المؤقت&lt;/h1&gt;

&lt;p&gt;هنالك عدة خطوات للقيام بذلك، وهي:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;إيقاف عمل المؤقت بينما نقوم بتهيئته&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;في السجل STCTRL نجعل bit 0 وهي الـ Enable تساوي 0 لإيقاف الـ SysTick بينما نقوم بعملية التهيئة.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;إسناد قيمة إبتدائية&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;نقوم بإسناد قيمة يستخدمها المؤقت ليبدأ عملية التناقص منها. وذلك يكون عن طريق السجل STRELOAD.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;تصفير العداد&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;نقوم بكتابة أي قيمة الى STCURRENT لجعلها تساوي 0.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;تفعيل العداد&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;وذلك يكون عن طريق التعديل على سجل STCTRL بكتابة ما يلي:
        &lt;ul&gt;
          &lt;li&gt;0 في bit 1 وهي الـ Interrupt bit لإلغاء الـمقاطعات interrupts أو 1 لتفعيلها&lt;/li&gt;
          &lt;li&gt;1 في bit 2 وهي الـ Clock Source bit لنختار أن يكون مصدر المؤقت هو الساعة القياسية على البورد التي يستخدمها المعالج cpu وجميع الطرفيات peripherals والتي تبلغ سرعتها 16MHz&lt;/li&gt;
          &lt;li&gt;1 في bit 0 وهي الـ Enable bit لتفعيل العداد&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;بعد ذلك سيبدأ المؤقت في العد التنازلي بإنقاص العدد الموجود في سجل الـ STCURRENT بمقدار 1 في كل دورة للساعة clock cycle وكتابة القيمة هذه مجدداً الى السجل ذاته. وبما أن الساعة التي أخترناها سرعتها 16MHz فذلك يعني أن تنفيذ أي أمر instruction - وهي إنقاص القيمة بمقدار 1 هنا - ستستغرق 62.5ns&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1/16000000 = 0.0000000625 seconds = 62.5 nanoseconds
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبما أن حجم العداد هو 24 بت فإن أقصى عدد يمكن إستخدامه للعداد هو 0x00FFFFFF.
فلو أخترنا أن يبدأ العداد من الرقم 16,000,000 فالذي علينا القيام به هو إسناد هذه القيمة الى السجل RELOAD أولاً ثم عندما نطلب من العداد البدء فإن المتحكم ينسخ قيمة السجل السابق ويضعها في السجل STCURRENT. وبما أن سرعة الساعة 16MHz فذلك يعني أن العداد سيبدأ من هذا الرقم ويتناقص رقماً كل 62.5ns الى أن يصل الى 0 في مدة زمنية قدرها ثانية واحدة. وحينما يصل العداد الى صفر يقوم المتحكم بنسخ القيمة الموجودة في STRELOAD الى السجل STCURRENT وكتابة 1 الى bit 16 في STCTRL  ليوضح بأننا سنقوم بالعد مرة أخرى ثم القيام بالعد من جديد.&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;ملاحظة&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;اذا أعاد اليك الـ Count Flag القيمة 0 فذلك يعني أن العداد لم يصل الى الصفر منذ آخر مرة تم فيها قراءة هذا البت&lt;/li&gt;
  &lt;li&gt;إذا أعاد اليك الـ Count Flag القيمة 1 فإنه يعني بأن العداد وصل الى الصفر منذ آخر مرة تم فيها قراءة هذا البت وبعد هذه القرائة سيصبح 0&lt;/li&gt;
  &lt;li&gt;كتابة أي قيمة الى سجل STCURRENT سيقوم بتصفير العداد وتصفير البت 16 في سجل الـ STCTRL&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;برنامج لقياس سرعة التنفيذ&lt;/h1&gt;

&lt;p&gt;فيما يلي برنامج يستفيد من المؤقت SysTick لقياس المدة الزمنية التي يستغرقها جزء من البرنامج في التنفيذ:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************* Registers ************************ */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define STCTRL_R      (*((volatile unsigned long *)0xE000E010))
#define STRELOAD_R    (*((volatile unsigned long *)0xE000E014))
#define STCURRENT_R   (*((volatile unsigned long *)0xE000E018))
&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* ************************ STCTRL Bits *********************** */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define STCTRL_BIT_ENABLE   0
#define STCTRL_BIT_INTEN    1
#define STCTRL_BIT_CLKSRC   2
#define STCTRL_BIT_COUNT    16
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* *************************** main *************************** */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Initialize SysTick
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 1) disable SysTick during setup
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STRELOAD_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;// 2) maximum reload value
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STCURRENT_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                            &lt;span class=&quot;c1&quot;&gt;// 3) any write to current clears it
&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_INTEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.1) disable interrupts
&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_CLKSRC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.2) enable core bus clock
&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.3) enable SysTick 
&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elapsed_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCURRENT_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;elapsed_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;last_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 24-bit difference
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;last_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أو قم بنسخه من الرابط التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_09/measure_elapsed_time.c&quot;&gt;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_09/measure_elapsed_time.c&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;يجب التنويه الى أن القراءة الأولى ستكون خاطئة لأننا نقيس الوقت بناءاً على القياسات السابقة وفي هذه الحالة لن يكون هناك قياس سابق للزمن.&lt;/p&gt;

&lt;p&gt;وما نقوم به في السطر التالي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;elapsed_time = (last_time-current_time) &amp;amp; 0x00FFFFFF; // 24-bit difference
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;هو لأن المتغيرات current_time و last_time وناتج عملية إنقاصهم من بعض هي قيم من نوع 32 بت ولكننا نحتاج الى أول 24 بت منها فقط لأن المؤقت من نوع 24 بت.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;برنامج لإيقاف التنفيذ بشكل دقيق Precise Delays&lt;/h1&gt;

&lt;p&gt;في برامجنا السابقة كتبنا دالة delay لإيقاف تنفيذ البرنامج لمدة زمنية عشوائية. ولكن اذا ما أردنا الإنتظار لمدة زمنية محددة وبشكل دقيق فإننا نستخدم الـ systick كما هو في البرنامج التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************* Registers ************************ */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define STCTRL_R      (*((volatile unsigned long *)0xE000E010))
#define STRELOAD_R    (*((volatile unsigned long *)0xE000E014))
#define STCURRENT_R   (*((volatile unsigned long *)0xE000E018))
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************ STCTRL Bits *********************** */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define STCTRL_BIT_ENABLE   0
#define STCTRL_BIT_INTEN    1
#define STCTRL_BIT_CLKSRC   2
#define STCTRL_BIT_COUNT    16
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************ Prototypes ************************ */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;systick_delay_ms&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* *************************** main *************************** */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Initialize SysTick
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 1) disable SysTick during setup
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STRELOAD_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                   &lt;span class=&quot;c1&quot;&gt;// 2) maximum reload value
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STCURRENT_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                            &lt;span class=&quot;c1&quot;&gt;// 3) any write to current clears it
&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_INTEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.1) disable interrupts
&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_CLKSRC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.2) enable core bus clock
&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.3) enable SysTick 
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// Wait for 0.5 second
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;systick_delay_ms&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Wait for 1 second
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;systick_delay_ms&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;systick_delay_ms&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 1 period = (real_time_delay in seconds) * (16,000,000 Hz)
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//          = (1/1000 seconds) * (16,000,000 Hz) 
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//          = 16,000
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;period&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;STRELOAD_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;period&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00FFFFFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 24-bit difference
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;STCURRENT_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;c1&quot;&gt;// wait until COUNT is flagged
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00010000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أو قم بنسخه من الرابط التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_09/systick_accurate_delay.c&quot;&gt;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_09/systick_accurate_delay.c&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;أرجوا التنويه الى أنه في السطر التالي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;STRELOAD_R = (period - 1) &amp;amp; 0x00FFFFFF; // 24-bit difference
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نسند القيمة - 1 الى STRELOAD حيث أن العداد يعد الى أن يصل الى 0 وليس الى 1.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;برنامج لتشغيل/إيقاف تشغيل الإضاءة بشكل دوري&lt;/h1&gt;

&lt;p&gt;البرنامج التالي يستخدم SysTick لتشغيل الإضاءة الحمراء لمدة ثانية وإطفائها في الثانية التي تليها والإستمرار على ذلك. وبما أن سرعة الساعة المختارة هي 16MHz فإنه في كل ثانية سيكون لدينا 16,000,000 ذبذبة، وبما أن العداد يتناقص الى الصفر وليس الى الواحد فإننا نقوم بإسناد هذا الرقم ناقص واحد الى سجل الـ STRELOAD.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************* Registers ************************ */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define STCTRL_R      (*((volatile unsigned long *)0xE000E010))
#define STRELOAD_R    (*((volatile unsigned long *)0xE000E014))
#define STCURRENT_R   (*((volatile unsigned long *)0xE000E018))
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCGPIO_R   (*((volatile unsigned long *)0x400FE608))
#define GPIO_PORTF_DATA_R   (*((volatile unsigned long *)0x400253FC))
#define GPIO_PORTF_DIR_R    (*((volatile unsigned long *)0x40025400))
#define GPIO_PORTF_PUR_R    (*((volatile unsigned long *)0x40025510))
#define GPIO_PORTF_DEN_R    (*((volatile unsigned long *)0x4002551C))
#define GPIO_PORTF_LOCK_R   (*((volatile unsigned long *)0x40025520))
#define GPIO_PORTF_CR_R     (*((volatile unsigned long *)0x40025524))
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************ STCTRL Bits *********************** */&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#define STCTRL_BIT_ENABLE   0
#define STCTRL_BIT_INTEN    1
#define STCTRL_BIT_CLKSRC   2
#define STCTRL_BIT_COUNT    16
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define LED_RED    (1U &amp;lt;&amp;lt; 1)	
&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/* ************************ Prototypes ************************ */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;portf_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;systick_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* *************************** main *************************** */&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;portf_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;systick_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* is COUNT flag set? */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;portf_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Initialize clock
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0010 0000  
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    
  &lt;span class=&quot;c1&quot;&gt;// Set pin direction
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Enable pins
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DEN_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;systick_init&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 1) disable SysTick during setup
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STRELOAD_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16000000&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;// 2) maximum reload value
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;STCURRENT_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                            &lt;span class=&quot;c1&quot;&gt;// 3) any write to current clears it
&lt;/span&gt;  
  &lt;span class=&quot;n&quot;&gt;STCTRL_R&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_INTEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.1) disable interrupts
&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_CLKSRC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.2) enable core bus clock
&lt;/span&gt;                 &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STCTRL_BIT_ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 4.3) enable SysTick 
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أو قم بنسخه من الرابط التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_09/periodic_toggle_led.c&quot;&gt;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_09/periodic_toggle_led.c&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 16 Nov 2017 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2017/11/16/systick-timer.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/16/systick-timer.html</guid>
        
        
      </item>
    
      <item>
        <title>8. التعامل مع الأزرار Switches</title>
        <description>&lt;p&gt;في (ص 20) من دليل المستخدم الذي قمنا بتحميله في الدرس السابق نجد مخطط البورد schematics والتي تبين لنا الأطراف التي تتصل بها الأزرار SW1 و SW2:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_08/schematics_switches.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_08/schematics_switches.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وهذا موقعها على البورد:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_08/switches_on_board.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_08/switches_on_board.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;حيث يتضح لنا أن:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;الزر الأيسر SW1 متصل بالمنفذ F والطرف 4 =&amp;gt;  PF4&lt;/li&gt;
  &lt;li&gt;الزر الأيمن SW2 متصل بالمنفذ F والطرف 0 =&amp;gt;  PF0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;بالإضافة الى أننا سنتعامل مع الإضاءات الملونة التي تعاملنا معها سابقاً:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;الإضاءة الحمراء  Red LED  متصلة بالمنفذ F والطرف 1 =&amp;gt;  PF1&lt;/li&gt;
  &lt;li&gt;الإضاءة الزرقاء  Blue LED  متصلة بالمنفذ F والطرف 2 =&amp;gt;  PF2&lt;/li&gt;
  &lt;li&gt;الإضاءة الخضراء  Green LED  متصلة بالمنفذ F والطرف 3 =&amp;gt;  PF3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;نلاحظ أن جميع الأزرار والإضاءات متصلة بالمنفذ F، ولذلك فإن جميع السجلات التي سنتعامل معها ستكون خاصة بهذا المنفذ.&lt;/p&gt;

&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;فكرة البرنامج&lt;/h1&gt;

&lt;p&gt;سنقوم بمشيئة الله بكتابة برنامج يتعامل مع الأزرار والإضاءات في البورد حيث سيختلف فيها الإضاءة التي تعمل حسب الزر المضغوط. وفيما يلي جدول يختصر هذه الحالات:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;حالة الأزرار&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;حالة الإضاءة&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW1 و SW2 معاً&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الحمراء تعمل&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW1 فقط&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الزرقاء تعمل&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الضغط على SW2 فقط&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;الإضاءة الخضراء تعمل&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;عدم الضغط على أي زر&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;لا تعمل أي من الإضاءات&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;خطوات كتابة البرنامج&lt;/h1&gt;
&lt;p&gt;للقيام بذلك، فإنه يتوجب علينا تتبع الخطوات التالية:&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;1. تفعيل المنفذ&lt;/h2&gt;

&lt;p&gt;مما سبق، يتضح لنا أن المنفذ الذي نريد تفعيله هو Port F، ونقوم بذلك عن طريق كتابة 1 الى البت رقم خمسة bit 5  كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SYSCTL_RCGCGPIO_R = (1U &amp;lt;&amp;lt; 5); // 0010 0000 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ثم ننتظر قليلاً قبل بدء التعامل مع المنفذ لنتأكد من مرور الوقت الكافي لتفعيل المنفذ:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;volatile unsigned long wait;
wait = SYSCTL_RCGCGPIO_R; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;2.الغاء قفل PF0&lt;/h2&gt;
&lt;p&gt;يوجد على هذه البورد عدة أطراف مقفلة لا نستطيع الكتابة اليها الا بعد فتح القفل وهي PC0 و PC1 و PC2 و PC3 و PD7 و PF0 وماعداها من أطراف لا يتوجب علينا القيام بهذه الخطوة بشأنها.&lt;/p&gt;

&lt;p&gt;ولإلغاء قفل PF0 فإننا سنستخدم السجل GPIOLOCK (دليل البيانات ص 684):&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_08/gpiolock.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_08/gpiolock.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وذلك عن طريق كتابة الرقم &lt;code class=&quot;highlighter-rouge&quot;&gt;0x4C4F434B&lt;/code&gt; الى هذا السجل كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTF_LOCK_R   (*((volatile unsigned long *)0x40025520))

GPIO_PORTF_LOCK_R = 0x4C4F434B;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;3.السماح بالتعديل على الطرف PF0&lt;/h2&gt;
&lt;p&gt;بعد الغاء القفل عن الطرف PF0، نقوم بالسماح بالتعديل عليه عن طريق السجل GPIOCR (دليل البيانات ص685):&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_08/gpiocr.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_08/gpiocr.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وذلك عن طريق كتابة 1 في البت الذي يقابل الطرف PF0 وهو bit 0:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTF_CR_R   (*((volatile unsigned long *)0x40025524))

GPIO_PORTF_CR_R = (1U &amp;lt;&amp;lt; 0);   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;4. تحديد إتجاه الأطراف&lt;/h2&gt;

&lt;p&gt;في هذا اليرنامج نريد تفعيل الإضاءة الموجوده على المنفذ F في الأطراف 1 و 2 و 3 وجعلها output. ولذلك نقوم بكتابة 1 في البت المقابلة لكل طرف. وسنجعل الأزرار مدخلات input وذلك بكتابة 0 في البت المقابل للطرف.&lt;/p&gt;

&lt;p&gt;سنقوم أولاً بتحديد جميع المدخلات والمخرجات وما يقابلها من بت bits:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SW2        (1U &amp;lt;&amp;lt; 0)
#define LED_RED    (1U &amp;lt;&amp;lt; 1)		
#define LED_BLUE   (1U &amp;lt;&amp;lt; 2)		
#define LED_GREEN  (1U &amp;lt;&amp;lt; 3)		
#define SW1        (1U &amp;lt;&amp;lt; 4)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ثم سنجعل من أطراف الإضاءة مدخلات:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبعد ذلك نجعل أطراف الأزرار مخرجات:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;5. تفعيل خاصية مقاومة الرفع الداخلي للأزرار&lt;/h2&gt;

&lt;p&gt;لو عدنا الى (ص 20) في دليل المستخدم فإننا سنرى في الرسم التخطيطي الخاص بالأزرار أنه عند الضغط عليها فإن الطرف المتصل بالزر سيقرأ 0 حيث تتصل الدائرة بـالـ ground. ولكن في حالة عدم الضغط على الزر فإن القراءة ستبقى عائمة floating وغير مستقرة لأن الأزرار ليست متصلة بمقاومة رفع pull-up resistor (&lt;a href=&quot;https://www.arabsmakers.com/%D9%85%D9%82%D8%A7%D9%88%D9%85%D8%A7%D8%AA-%D8%A7%D9%84%D8%B1%D9%81%D8%B9-pull-resistors/&quot;&gt;للمزيد&lt;/a&gt;).&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_08/schematics_switches_2.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_08/schematics_switches_2.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;ولذلك فإننا نقوم بتفعيل ما يسمى بالـ internal pull up resistor بواسطة السجل GPIOPUR والذي نجد تفاصيله في (ص 677) من دليل البيانات:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_08/gpiopur.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_08/gpiopur.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTF_PUR_R   (*((volatile unsigned long *)0x40025510))

GPIO_PORTF_PUR_R = (SW1|SW2); 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ولو كنا نستخدم مقاومة خفض pull down بدلاً من مقاومة رفع pull up لكنا نقرأ 0 في حالة عدم الضغط على الزر و 1 في حالة الضغط عليه.&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;6. تفعيل الخصائص الرقمية للأطراف&lt;/h2&gt;

&lt;p&gt;مثل ما ذكرنا سابقاً، فنحن مهتمين بالأطراف من 0 الى 4 في المنفذ F. ولتفعيلها نقوم بكتابة 1 في البت المقابل لكل طرف كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DEN_R = (SW2|LED_RED|LED_BLUE|LED_GREEN|SW1);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;7. الكتابة الى الأطراف&lt;/h2&gt;

&lt;p&gt;الأزرار لها خاصية negative logic بمعنى أن قيمتها 1 في حالة عدم الضغط عليها و 0 اذا ما تم الضغط عليها. وهي عكس الإضاءات التي بها خاصية الـ positive logic حيث اذا ارسلنا لها 1 فإنها ستضيء واذا أرسلنا 0 فإنها ستطفئ.&lt;/p&gt;

&lt;p&gt;في عبارة الـ switch في البرنامج المتعلق بهذا الدرس نختبر محتوى السجل &lt;code class=&quot;highlighter-rouge&quot;&gt;GPIO_PORTF_DATA_R&lt;/code&gt; مع القيمة 0x11:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x11 = 0001 0001
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;لقد أخترنا القيمة 0x11 لأنها تستخدم 1 في البت 0 وهو الخاص بالطرف 0 المتصل بـ SW2. وتستخدم 1 في البت 4 وهو يقابل الطرف 4 المتصل بـ SW1.&lt;/p&gt;

&lt;p&gt;فلو أفترضنا أن &lt;code class=&quot;highlighter-rouge&quot;&gt;GPIO_PORTF_DATA_R&lt;/code&gt; يحمل القيمة &lt;code class=&quot;highlighter-rouge&quot;&gt;0000 0000&lt;/code&gt; - بمعنى أن جميع الأزرار مضغوطه بغض النظر عن أياً كانت قيمة الإضاءات - فإن نتيجة إختبار الـ switch سينتج لنا &lt;code class=&quot;highlighter-rouge&quot;&gt;0000 0000&lt;/code&gt; مما يحقق شرط الحالة الأولى:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DATA_R = 0000 0000
(GPIO_PORTF_DATA_R &amp;amp; 0x11) // result: 0000 0000

case 0x00: // SW1 &amp;amp; SW2 pressed
  // الجزء هذا سينفذ
  break;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وقس على ذلك بقية الحالات، حيث أن:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;الحالة الأولى تنفذ اذا كانت كل الأزرار مضغوطة ونقوم على ذلك بتشغيل الإضاءة الحمراء&lt;/li&gt;
  &lt;li&gt;والحالة الثانية تنفذ اذا كان الزر الأيسر SW1 هو المضغوط فقط ونقوم بذلك بتشغيل الإضاءة الزرقاء&lt;/li&gt;
  &lt;li&gt;والحالة الثالث تنففذ اذا كان الزر الأيمن SW2 هو المضغوط فقط ونقوم بذلك بتشغيل الإضاءة الخضراء&lt;/li&gt;
  &lt;li&gt;والحالة القياسية default تنفذ في حالة لم يتم الضغط على أي زر وبذلك نقوم بإطفاء جميع الإضاءات&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;البرنامج&lt;/h1&gt;

&lt;p&gt;قم بإنشاء مشروع جديد كما فعلنا في الدرس الثالث وأضف الكود التالي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCGPIO_R   (*((volatile unsigned long *)0x400FE608))
#define GPIO_PORTF_DATA_R   (*((volatile unsigned long *)0x400253FC))
#define GPIO_PORTF_DIR_R    (*((volatile unsigned long *)0x40025400))
#define GPIO_PORTF_PUR_R    (*((volatile unsigned long *)0x40025510))
#define GPIO_PORTF_DEN_R    (*((volatile unsigned long *)0x4002551C))
#define GPIO_PORTF_LOCK_R   (*((volatile unsigned long *)0x40025520))
#define GPIO_PORTF_CR_R     (*((volatile unsigned long *)0x40025524))
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define SW2        (1U &amp;lt;&amp;lt; 0)
#define LED_RED    (1U &amp;lt;&amp;lt; 1)		
#define LED_BLUE   (1U &amp;lt;&amp;lt; 2)		
#define LED_GREEN  (1U &amp;lt;&amp;lt; 3)		
#define SW1        (1U &amp;lt;&amp;lt; 4)		
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;volatile&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Initialize clock
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0010 0000  
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    
  &lt;span class=&quot;c1&quot;&gt;// Unlock PF0
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_LOCK_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x4C4F434B&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_CR_R&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;// Set pin direction
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0000 1110
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0000 1110;
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// Set PF0 pull up resistor
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_PUR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0001 0001
&lt;/span&gt;  
  &lt;span class=&quot;c1&quot;&gt;// Enable pins
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DEN_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SW1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0001 1111
&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 &amp;amp; SW2 pressed
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW1 pressed only
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// SW2 pressed only
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;default:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أو قم بنسخه من الرابط التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_08/main.c&quot;&gt;https://github.com/alhabish/embedded-course/blob/gh-pages/assets/files/article_08/main.c&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Nov 2017 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2017/11/09/working-with-switches.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/09/working-with-switches.html</guid>
        
        
      </item>
    
      <item>
        <title>7. برنامج لوميض الإضاءة الملونة  RGB LED Blinking</title>
        <description>&lt;p&gt;هذا درس تطبيقي مختصر عبارة عن شرح للبرنامج الذي قمنا بتجربته في الدرس الثالث وكتابة وفهم أول برنامج لنا على المتحكم دون إستخدام أي مكتبات برمجية مساعدة. ولتوضيح بعض النقاط فإنه بالإمكان تحميل دليل المستخدم User’s Guide للبورد من الرابط التالي:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ti.com/lit/ug/spmu296/spmu296.pdf&quot;&gt;http://www.ti.com/lit/ug/spmu296/spmu296.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;حيث نجد في (ص 7) الرسم التخطيطي block diagram للبورد والتي توضح لنا بأن الإضاءة الملونة RGB LED متصلة بمنافذ القراءة والكتابة GPIO Ports:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;
&lt;caption align=&quot;bottom&quot;&gt;Tiva C LaunchPad Block Diagram&lt;/caption&gt;

&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_07/block_diagram_rgb_led.png&quot; alt=&quot;Tiva C LaunchPad Block Diagram&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_07/block_diagram_rgb_led.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وفي (ص 20) من نفس المستند نجد مخطط البورد schematics والتي تبين لنا الأطراف التي تتصل بها الإضاءة الملونة:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_07/schematics_rgb_led.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_07/schematics_rgb_led.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;حيث نجد أن:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;الإضاءة الحمراء  Red LED  متصلة بالمنفذ F والطرف 1 =&amp;gt;  PF1&lt;/li&gt;
  &lt;li&gt;الإضاءة الزرقاء  Blue LED  متصلة بالمنفذ F والطرف 2 =&amp;gt;  PF2&lt;/li&gt;
  &lt;li&gt;الإضاءة الخضراء  Green LED  متصلة بالمنفذ F والطرف 3 =&amp;gt;  PF3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;نلاحظ أن إضاءة الـ RGB LED متصلة بالمنفذ F، ولذلك فإن جميع السجلات التي سنتعامل معها ستكون خاصة بهذا المنفذ.&lt;/p&gt;

&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;تفعيل وميض الإضاءة الملون&lt;/h1&gt;
&lt;p&gt;للقيام بذلك، فإنه يتوجب علينا تتبع الخطوات التالية:&lt;/p&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;1. تفعيل المنفذ&lt;/h2&gt;

&lt;p&gt;يجب علينا أولاً تفعيل الساعة قبل أي شيء، وإلا فلن يعمل المنفذ. ومما سبق، يتضح لنا أن المنفذ الذي نريد تفعيله هو Port F، وبالعودة الى دليل البيانات datasheet (ص 340) والذي يشرح فيه السجل RCGCGPIO المسؤول عن تفعيل الساعة للمنفذ، نجد أنه لتفعيل Port F فإنه يتوجب علينا كتابة 1 الى البت الخامس bit 5  (علماً بأن العد يبدأ من 0). والتعديل عليها يكون إما بإسناد قيمة مباشره للسجل كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SYSCTL_RCGCGPIO_R = 0x20; // 0010 0000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;والأفضل من ذلك إستخدام إسلوب الـ bit shifting حيث أنها توضح أننا نريد تفعيل البت الخامس bit 5:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SYSCTL_RCGCGPIO_R = (1U &amp;lt;&amp;lt; 5); // 0010 0000 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;بعد تفعيل الساعة نحتاج الى الإنتظار قليلاً قبل بدء التعامل مع المنفذ ويمكن القيام بذلك بجلب القيمة الجديدة المكتوبة الى سجل المؤقت حيث أنه سيعطينا الوقت الكافي للتأكد من أنه قد تم فعلاً تفعيل المنفذ:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;volatile unsigned long delay;
delay = SYSCTL_RCGCGPIO_R; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;2. تحديد إتجاه الأطراف&lt;/h2&gt;

&lt;p&gt;نريد في هذا البرنامج تفعيل الإضاءة الموجوده على المنفذ F في الأطراف 1 و 2 و 3 وجعلها output. ولذلك نقوم بكتابة 1 في البت المقابلة لكل طرف كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DIR_R = 0xE; // 1110 -&amp;gt; PF0=0, PF1=1, PF2=1, PF3=1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ولأننا نسعى لأن يكون الكود الذي نقوم بكتابته واضحاً ولا يحتاج الى شرح self explanatory، فإنه بالإمكان وضع ماكرو لكل لون في الإضاءة مسنود اليها رقم البت المقابل للطرف الذي تتصل به بالمنفذ، ثم القيام بعملية إضافة البتات bits معاً عن طريق الـ bit shifting وإسناد النتيجة الى السجل كما يلي:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define LED_RED    (1U&amp;lt;&amp;lt;1)		
#define LED_BLUE   (1U&amp;lt;&amp;lt;2)		
#define LED_GREEN  (1U&amp;lt;&amp;lt;3)		
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1110
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;3. تفعيل الخصائص الرقمية للأطراف&lt;/h2&gt;

&lt;p&gt;مثل ما سبق، فنحن مهتمين فقط في الأطراف 1 و 2 و 3 في المنفذ F. ولتفعيلها نقوم بكتابة 1 في البت المقابل لكل طرف كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DEN_R = 0xE; // 1110 -&amp;gt; PF0=0, PF1=1, PF2=1, PF3=1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أو من الممكن أن نقول:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DEN_R = (LED_RED | LED_BLUE | LED_GREEN); // 1110
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;3. الكتابة الى السجل&lt;/h2&gt;

&lt;p&gt;الإضاءة الحمراء متصلة بـ PF1. ولتشغيلها وإطفاء باقي الإضاءات&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DATA_R = LED_RED; // 0010
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وسننتظر بعد ذلك قليلاً بإستدعاء الدالة &lt;code class=&quot;highlighter-rouge&quot;&gt;delay&lt;/code&gt; التي قمنا بكتابتها.&lt;/p&gt;

&lt;p&gt;الإضاءة الزرقاء متصلة بـ PF2. ولتشغيلها وإطفاء باقي الإضاءات:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DATA_R = LED_BLUE; // 0100
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;نعود بعد ذلك للإنتظار قليلاً ثم نقوم بتشغيل الإضاءة الخضراء المتصلة بـ PF3. ولتشغيلها وإطفاء باقي الإضاءات:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GPIO_PORTF_DATA_R = LED_GREEN; // 1000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;ثم ننتظر مرة أخرى ونقوم بتكرار عملية الوميض الى ما لا نهاية.&lt;/p&gt;

&lt;h1&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;البرنامج&lt;/h1&gt;

&lt;p&gt;قم بإنشاء مشروع جديد كما فعلنا في الدرس الثالث وأضف الكود التالي ومن ثم قم بتجربته على البورد:&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define SYSCTL_RCGCGPIO_R   (*((volatile unsigned long *)0x400FE608))
#define GPIO_PORTF_DIR_R    (*((volatile unsigned long *)0x40025400))
#define GPIO_PORTF_DEN_R    (*((volatile unsigned long *)0x4002551C))
#define GPIO_PORTF_DATA_R   (*((volatile unsigned long *)0x400253FC))
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define LED_RED    (1U&amp;lt;&amp;lt;1)		
#define LED_BLUE   (1U&amp;lt;&amp;lt;2)		
#define LED_GREEN  (1U&amp;lt;&amp;lt;3)		
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SYSCTL_RCGCGPIO_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 0010 0000
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DIR_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1110;
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DEN_R&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 1110; 
&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_RED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GPIO_PORTF_DATA_R&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LED_GREEN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 06 Nov 2017 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2017/11/06/rgb-led-blinking.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/06/rgb-led-blinking.html</guid>
        
        
      </item>
    
      <item>
        <title>6. المنافذ والأطراف  Ports &amp; Pins</title>
        <description>&lt;p&gt;للمتحكم TM4C123GH6PM الموجود على البورد 43 طرف pin متعدد الإستعمال تسمى بالـ General-purpose input/output GPIO pins. وليسهل التعامل معها فإنها موزعة على 6 منافذ ports كما يلي:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;المنفذ&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;عدد الأطراف&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT A&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT B&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT C&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT D&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT E&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT F&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote class=&quot;note&quot;&gt;
&lt;p&gt;
&lt;u&gt;ملاحظة&lt;/u&gt;،  &lt;strong&gt;Port C&lt;/strong&gt; لديه 8 أطراف لكننا لن نستخدم الأطراف التالية:
&lt;strong&gt;PC0, PC1, PC2, PC3&lt;/strong&gt;
حيث أنها محجوزة للـ debugger ولذلك فإننا فعلياً نستخدم 4 أطراف فقط في هذا المنفذ.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;وبذلك يكون لدينا 43 طرف يمكن برمجتها ولكن 4 منها محجوز كما ذكرنا في الملاحظة السابقة، أي فعلياً هنالك 39 طرف يمكننا التعامل معها وبرمجتها.&lt;/p&gt;

&lt;p&gt;هذه الأطراف يمكن إستخدامها كمدخل للبيانات input حيث تمكننا من إستقبال معلومات من البيئة المحيطة. أو كمخرج للبيانات output حيث تمكننا من ارسال معلومات لما قد يحيط بها أو يحتويها.&lt;/p&gt;

&lt;p&gt;وفي الفصل 22 من دليل البيانات datasheet (ص 1328) نجد الرسم التخطيطي للمنافذ والأطراف في المتحكم:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/pin_diagram.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/pin_diagram.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وها هو المتحكم على البورد حيث نستطيع أن نرى أطراف المتحكم (داخل المستطيلات الخضراء) تتصل بأطراف البورد (وهي بداخل المستطيلات الصفراء) عن طريق مسارات buses لنقل البيانات (باللون البرتقالي):&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/tivac_board_pins_and_ports.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/tivac_board_pins_and_ports.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وتمكننا الأطراف التي على البورد من ربط البورد (وبالتالي المتحكم) بأجزاء الكترونية أخرى من ضمنها لوح التجارب breadboard حيث يمكن ربطها بأسلاك سواء من الـ male headers أعلى البورد أو الـ female headers أسفل البورد.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;عناوين المنافذ في الذاكرة على المسار APB&lt;/h2&gt;

&lt;p&gt;يوجد مسارين لنقل البيانات المتعلقة بالـ Input/Output ports وهي:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Advanced Peripheral Bus - &lt;strong&gt;APB&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Advanced High-Performance Bus - &lt;strong&gt;AHB&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;المسار الثاني يعتبر الأفضل أداء والأسرع والأول أفضل من ناحية توفير الطاقة وهو الذي سيتم إستخدامه في هذا الكورس بإذن الله.&lt;/p&gt;

&lt;p&gt;لكل منفذ مساحة 4kbyte من الذاكرة تحتوي على سجلات registers عديدة للتحكم بالمنفذ، ومن ضمنها السجل المتعلق بتحديد وظيفة أو إتجاه كل طرف في المنفذ Direction Register والسجل الخاص بالقراءة والكتابة من والى المنفذ Data Register بالإضافة الى غيرها من السجلات المتعلقة بالمنفذ.&lt;/p&gt;

&lt;p&gt;وفيما يلي عناوين المنافذ في الذاكرة على المسار APB من الأصغر الى الأكبر، علماً أن عنوان البداية لكل منفذ يسمى الـ base address لذلك المنفذ:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;المنفذ&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;يبدأ من&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;ينتهي في&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT A&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.4000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.4FFF&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT B&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.5000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.5FFF&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT C&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.6000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.6FFF&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT D&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.7000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4000.7FFF&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT E&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4002.4000&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4002.4FFF&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;&lt;strong&gt;PORT F&lt;/strong&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4002.5FFF&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0x4002.5000&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/gpio_memory_map.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/gpio_memory_map.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;طريقة التعامل مع عناوين الذاكرة&lt;/h2&gt;

&lt;p&gt;لو أفترضنا أننا أردنا التعامل مع العنوان التالي في الذاكرة:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x400253FC
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;فلو حاولنا إسناده الى متغير في لغة الـ C فإنه سيعتبر رقماً عادياً لا أكثر. ولجعل الـ C تعتبره عنواناً في الذاكرة فإننا نقوم بعملية derefrencing:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(*0x400253FC)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;ولكن في هذه الحالة لن يعرف المجمع compiler كم بت bit عليه أن يقرأ من موقع الذاكرة المشار اليه. هل يقرأ 8 بت أو 16 بت أو 32 بت؟ ولذلك نقوم بتحويل القيمة casting اما لـ long أو int حيث أنه لا فرق بينهما في معمارية الـ ARM Cortex-M فكلاهما يتكون من 32 بت.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(long *)0x400253FC
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;وبما أن القيّم في سجلات الـ GPIO لا تحمل إشارة unsigned بمعنى أنها لا يمكن أن تكون بالسالب، فإننا نضيف عبارة unsigned على جزئية الـ casting:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(unsigned long *)0x400253FC
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;أيضاً، بما إن القيّم في السجلات ممكن أن تتغير من خارج الكود الذي نقوم بكتابته، فعلى سبيل المثال، لو قام المستخدم بالضغط على الزر Switch 1 فستتغير قيمة البت المقابلة في المتحكم من 1 الى 0، وهذا التغيير حدث خارج إطار الكود الذي قمنا بكتابته. ولهذا السبب فإننا سنطلب من المجمع compiler قراءة القيمة الجديدة دوماً وليس الإعتماد على قيمة مخزنة مسبقاً بسبب الـ compiler optimization. ويكون ذلك بإستخدام عبارة volatile:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(volatile unsigned long *)0x400253FC
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبما أننا نريد قيمة السجل وليس العنوان فإننا نقوم بعملية الـ derefrencing بإستخدام النجمة * وإستخدام الماكرو define# لإسناد قيمة السجل الى إسم من عندنا:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIOF_DATA   (*((volatile unsigned long *)0x400253FC))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;خطوات التعامل مع أطراف الـ GPIO&lt;/h2&gt;

&lt;p&gt;الخطوات الرئيسية للتعامل مع الأطراف هي بتعديل السجلات التالية:&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;1. تفعيل المنفذ&lt;/h3&gt;

&lt;p&gt;ويتم ذلك عبر سجل المؤقت RCGCGPIO، ومن دون هذه الخطوة فإنه من غير الممكن التعامل مع المنفذ المطلوب.
ومن أجل توفير الطاقة، فإن الـ ARM Cortex-M لا تفعّل المنافذ منذ البداية وهذه التقنية تسمى clock gating، بل يجب عليك القيام بذلك بنفسك وذلك عن طريق تفعيل المؤقت الخاص بالمنفذ المطلوب. وبالنظر الى دليل البيانات (ص 340)، نجد شرح لهذا السجل:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/rcgcgpio.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/rcgcgpio.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;ولتفعيل المنافذ فإننا نتعامل مع الـ bits التالية:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;bit 0 تفعيل/الغاء تفعيل المنفذ  Port A&lt;/li&gt;
  &lt;li&gt;bit 1 تفعبل/الغاء تفعيل المنفذ  Port B&lt;/li&gt;
  &lt;li&gt;bit 2 تفعبل/الغاء تفعيل المنفذ  Port C&lt;/li&gt;
  &lt;li&gt;bit 3 تفعبل/الغاء تفعيل المنفذ  Port D&lt;/li&gt;
  &lt;li&gt;bit 4 تفعبل/الغاء تفعيل المنفذ  Port E&lt;/li&gt;
  &lt;li&gt;bit 5 تفعبل/الغاء تفعيل المنفذ  Port F&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ويكون التفعيل بكتابة 1 الى البت bit المطلوب، وعدم التفعيل بكتابة 0 الى تلك الـ bit.&lt;/p&gt;

&lt;p&gt;للتعامل مع هذا السجل، ولكي يصبح لديك عنواناً كاملاً، فإنه يتوجب علينا إضافة القيمة التي يبعدها السجل Offset عن العنوان الرئيسي للمنفذ Base address الى ذلك العنوان الرئيسي للحصول على العنوان الكامل للسجل:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Base 0x400F.E000
Offset 0x608
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وبذلك يكون عنوان هذا السجل register:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define SYSCTL_RCGCGPIO_R   (*((volatile unsigned long *)0x400FE608))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;2. تحديد وظيفة الأطراف (الإتجاه) مدخلات/مخرجات&lt;/h3&gt;

&lt;p&gt;وذلك بواسطة السجل GPIODIR (ص 663 في دليل البيانات) حيث يمكننا تحديد ما اذا كان الطرف للقراءة input او الكتابة output.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/gpiodir.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/gpiodir.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;ومثل ما ذكرنا سابقاً، فإننا سنستخدم المسار APB للتعامل مع الـ GPIO ولذلك سنستخدم العناوين في الذاكرة التي توضح ذلك. وفيما يخص سجل الـ GPIODIR فإنه يبعد 0x400 عن العناوين السابقة offset. وبذلك يكون السجل المستخدم لكل منفذ كما يلي:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/gpiodir_apb_offset.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/gpiodir_apb_offset.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTA_DIR_R   (*((volatile unsigned long *)0x40004400))
#define GPIO_PORTB_DIR_R   (*((volatile unsigned long *)0x40005400))
#define GPIO_PORTC_DIR_R   (*((volatile unsigned long *)0x40006400))
#define GPIO_PORTD_DIR_R   (*((volatile unsigned long *)0x40007400))
#define GPIO_PORTE_DIR_R   (*((volatile unsigned long *)0x40024400))
#define GPIO_PORTF_DIR_R   (*((volatile unsigned long *)0x40025400))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;وللتحكم بالأطراف في هذه المنافذ فإننا نتعامل مع الـ bits التالية:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;bit 0 لتحديد اتجاه الطرف pin 0 في المنفذ port المطلوب&lt;/li&gt;
  &lt;li&gt;bit 1 لتحديد اتجاه الطرف pin 1 في المنفذ port المطلوب&lt;/li&gt;
  &lt;li&gt;bit 2 لتحديد اتجاه الطرف pin 2 في المنفذ port المطلوب&lt;/li&gt;
  &lt;li&gt;bit 3 لتحديد اتجاه الطرف pin 3 في المنفذ port المطلوب&lt;/li&gt;
  &lt;li&gt;bit 4 لتحديد اتجاه الطرف pin 4 في المنفذ port المطلوب&lt;/li&gt;
  &lt;li&gt;bit 5 لتحديد اتجاه الطرف pin 5 في المنفذ port المطلوب&lt;/li&gt;
  &lt;li&gt;bit 6 لتحديد اتجاه الطرف pin 6 في المنفذ port المطلوب&lt;/li&gt;
  &lt;li&gt;bit 7 لتحديد اتجاه الطرف pin 7 في المنفذ port المطلوب&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;بكتابة 1 الى البت سيجعل الطرف الذي تتحكم به للكتابة output، وكتابة 0 سيجعل ذلك الطرف للقراءة. علماً أنه جميع الأطراف معدة لتكون للقراءة input مالم يتم تعيينها للكتابة output.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;3. تفعيل الطرف&lt;/h3&gt;

&lt;p&gt;وذلك عن طريق السجل GPIODEN والذي يستخدم لتحديد ما إذا كان الطرف يستخدم للقراءة والكتابة الرقمية digital I/O أو للوظائف التماثلية analog الأخرى حيث أنه بإمكان كل طرف أن يكون له أكثر من وظيفة وهو ما يسمى بـ pin multiplexing وإلا فإننا سنحتاج الى مئات من الأطراف للقيام بجميع المهام. وبإمكان الطرف أن يستخدم للقراءة الرقمية digital I/O أو التماثلية analog او بروتوكولات التواصل مثل I2C أو UART أو SPI أو غيرها. ومن ص 683 في دليل البيانات يتضح لنا:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/gpioden.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/gpioden.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;نلاحظ ان السجل يبعد عن العنوان الرئيسي للمنفذ offset بمقدار 0x51C. وبعد إضافتها للعنوان الرئيسي لكل منفذ تصبح العناوين كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTA_DEN_R   (*((volatile unsigned long *)0x4000451C))
#define GPIO_PORTB_DEN_R   (*((volatile unsigned long *)0x4000551C))
#define GPIO_PORTC_DEN_R   (*((volatile unsigned long *)0x4000651C))
#define GPIO_PORTD_DEN_R   (*((volatile unsigned long *)0x4000751C))
#define GPIO_PORTE_DEN_R   (*((volatile unsigned long *)0x4002451C))
#define GPIO_PORTF_DEN_R   (*((volatile unsigned long *)0x4002551C))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وعند كتابة 1 للبت المقابل للمنفذ فإنه يتم تفعيل الخصائص الرقمية digital للطرف، وعند كتابة 0 فإنه يتم تفعيل الخصائص التماثلية analog للطرف.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;4. الكتابة أو القرائة من الطرف&lt;/h3&gt;

&lt;p&gt;ويتم ذلك عن طريق سجل GPIODATA. ففي الطرفيات المخصصة للكتابة output فإنه يمكن تشغيل الطرف وجعله high بإرسال القيمة 1 اليه، وإذا ما أردنا إطفائه low فإننا نرسل له القيمة 0. وفي الأطراف المخصصه للقراءة input فإنه يمكن قراءة البت bit المقابلة للطرف لمعرفة اذا ماتم تفعيلها أم لا. وفي ص 662 من دليل البيانات نرى:&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/gpiodata.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/gpiodata.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;وصف السجل يخبرنا بأن الـ offset 0x000 ولكن هذا لإستخدام تقنية تسمى bit banding وهي تحجز لنا مكان في الذاكرة يتسع للتعامل مع كل طرف (أو بت) على حده ولكننا نريد التعديل على الـبتات الثمانية 8 bits، التي تقابل الأطراف في المنافذ، مرة واحدة. وللقيام بذلك فإننا نستخدم offset 0x3FC فتصبح لدينا العناوين:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTA_DATA_R   (*((volatile unsigned long *)0x400043FC))
#define GPIO_PORTB_DATA_R   (*((volatile unsigned long *)0x400053FC))
#define GPIO_PORTC_DATA_R   (*((volatile unsigned long *)0x400063FC))
#define GPIO_PORTD_DATA_R   (*((volatile unsigned long *)0x400073FC))
#define GPIO_PORTE_DATA_R   (*((volatile unsigned long *)0x400243FC))
#define GPIO_PORTF_DATA_R   (*((volatile unsigned long *)0x400253FC))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote class=&quot;note&quot;&gt;
&lt;p&gt;
جميع السجلات عبارة عن 32 بت (4 بايت) ما عدا &lt;strong&gt;GPIODATA&lt;/strong&gt; حيث أنها مجموعة من السجلات تتكون من 256 سجل وكل سجل منها يتكون من 4 بايت أيضاً بما مجموعه 1024 بايت. ولكن الذي يهمنا الآن هو السجل بالعنوان الذي يحتوي على offset 0x3FC
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;طريقة أخرى للإشارة الى الذاكرة&lt;/h2&gt;

&lt;p&gt;بدلاً من حساب موقع السجل ومن ثم كتابته كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTF_DATA_R   (*((volatile unsigned long *)0x400253FC))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;فإنه بإمكاننا إضافة العنوان الرئيسي base address للمنفذ الى الـ offset للسجل المطلوب:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define GPIO_PORTF_BASE   0x40025000
#define GPIO_PORTF_DATA   (*((volatile unsigned long *)(GPIO_PORTF_BASE + 0x3FC)))
#define GPIO_PORTF_DIR    (*((volatile unsigned long *)(GPIO_PORTF_BASE + 0x400)))
#define GPIO_PORTF_DEN    (*((volatile unsigned long *)(GPIO_PORTF_BASE + 0x51C)))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;وميزة هذه الطريقة إنها أوضح وتجعل عملية حساب العناوين أقل عرضة للخطأ ويمكن نسخ ما سبق لباقي المنافذ الأخرى مع تغيير الـ base address لكل منفذ بالإضافة الى تغيير إسم المنفذ، فبدلاً من F نغيره الى A, B, C … الخ.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;للعمل على المسار AHB بدلاً من APB&lt;/h2&gt;

&lt;p&gt;إذا ما أردت أن تتعامل مع المسار AHB وهو الأحدث والأكثر كفائة، فكل ما عليك هو كتابة قيمة معينة الى السجل GPIOHBCTL (ص 258 في دليل البيانات) ثم إستخدام عناوين الـ AHB بدلاً من APB التي أستخدمناها سابقاً. علماً أنه بالإمكان أن يكون لديك بعض المنافذ تستخدم المسار APB وبعضها يستخدم AHB أو جميعها تستخم نفس المسار، الأمر عائد اليك.&lt;/p&gt;

&lt;table style=&quot;border: 1px solid #CACFD2&quot;&gt;


&lt;tr&gt;
    &lt;td style=&quot;text-align:center; align:center&quot;&gt;
        &lt;img src=&quot;http://localhost:4000/assets/files/article_06/gpiohbctl.png&quot; alt=&quot;&quot; style=&quot;cursor: pointer;&quot; onclick=&quot;openInNewTab('http://localhost:4000/assets/files/article_06/gpiohbctl.png');&quot; /&gt;
    &lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define SYSCTL_GPIOHBCTL_R   (*((volatile unsigned long *)0x400FE06C))
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;اذا أردت أن تجعل المنفذ F يستخدم المسار AHB على سبيل المثال، فبالعودة الى شرح السجل في دليل البيانات نجد أنه كل ماعليك فعله هو كتابة 1 في البت 5 في السجل، كما يلي:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SYSCTL_GPIOHBCTL_R |= 0x20; // 0001 0000, or
SYSCTL_GPIOHBCTL_R |= (1U &amp;lt;&amp;lt; 5); // 0001 0000 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 02 Nov 2017 00:00:00 +0300</pubDate>
        <link>http://localhost:4000/2017/11/02/ports-and-pins.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/02/ports-and-pins.html</guid>
        
        
      </item>
    
  </channel>
</rss>
